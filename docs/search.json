[{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"top","dir":"Articles","previous_headings":"","what":"Libraries needed","title":"Signature refining tutorial - scRNA-seq Workflow","text":"","code":"library(devtools) load_all() library(combiroc) library(dplyr) library(Seurat) library(patchwork) library(SeuratData) library(tidyr) library(ggplot2) library(ggpubr) library(RColorBrewer) library(colorspace) library(cowplot) library(pheatmap) library(scattermore)"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Signature refining tutorial - scRNA-seq Workflow","text":"Single-cell transcriptomics rapidly growing field essential improve understanding complex tissues organisms unprecedented resolution. manual annotation cell identity, gold standard procedure determine cell populations, remains major limitation scRNA-seq analysis [1]; recently, growing number resources published offering scientific community many cell type specific gene signature reference. Alas, marker gene belonging gene signatures unspecific taken singularly, specially given gene involved differentiation steps cellular population dataset (stem cells terminally differentiated population), making differentially expressed gene (DEG) one cluster. context decided enlarge combiroc’s breath scRNA-seq analysis field signature refiner, order find best marker genes combinations already existing gene signature, regardless genes’ ranking differentially expressed. Combiroc specialized finding specific combinations, thus use may allow researchers find cells interest high degree confidence help process manual annotation reducing number marker genes consider. show complete workflow combiroc-mediated signature refinement single-cell resolution used 3 PBMC public datasets showed Seurat vignettes. deeply characterized scrupulously labelled, accepted used reference scientific community. note executing vignette code described vignette originally run jupyter-based R-kernel notebook backed high-performance computing (HPC) server infrastructure. Due relevant size objects loaded /created, unlikely whole code can run standard computing equipment (.e. laptop). computationally heavy passages therefore marked [Heavy-Code] can skipped user reading/loading pre-computed objects intermediate results either rds csv files. way reader/reviewer able complete whole workflow without HPC server.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"selection-of-nk-cells-marker-combinations","dir":"Articles","previous_headings":"","what":"Selection of NK cells marker combinations","title":"Signature refining tutorial - scRNA-seq Workflow","text":"purpose analysis find best combinations known gene markers best describe NK-cell populations starting NK-cell single-cell transcriptomic signature, using models calculated combinations scRNAseq datasets. difficulty distinguish NK (Natural Killer) cells CD8+ T cells many scRNAseq datasets good challenge test combiroc performance markers signature optimization. performing differential marker expression initial “training” scRNAseq dataset take account top 30 differentially expressed genes (DEGs) specific NK cells cluster; use combiroc select best gene combinations among top 30 NK cells markers. Regression models selected combinations used independent datasets (“test” datasets) kind. combiroc training dataset using PBMC CITE-seq atlas Hao et al. 2021 [2]. dataset can downloaded h5 Seurat data (h5s) FredHutch-NYCG atlas page (exact download link: ) [Heavy-Code]  guarantee best possible performance training dataset (one extract markers combinations ) important make sure value ranges similar wanto use test/validation datasets. reason advise using raw counts matrices datasets, order able consistently rescale way using function Seurat::ScaleData().","code":"# load the SeuratDisk library to read h5seurat library(SeuratDisk) # read the downloaded h5seurat dataset file atlas <- LoadH5Seurat(\"pbmc_multimodal.h5seurat\") # activate the level-1 annotations Idents(atlas) <- atlas@meta.data$celltype.l1 # overview annotated cell clusters with UMAP DimPlot(atlas, label = T, repel = T)"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"extracting-the-nk-markers","dir":"Articles","previous_headings":"Selection of NK cells marker combinations","what":"Extracting the NK markers","title":"Signature refining tutorial - scRNA-seq Workflow","text":"gene markers NK cells obtained standard Seurat analysis (see ); Seurat::FindMarkers() function used, markers ordered fold change: [Heavy-Code] visualising expression values top 4 markers NK cells cluster evident majority also higly expressed non-NK clusters (e.g. CD8 T), making unspecific allow well defined cluster annotation considered individually.  user willing (computationally limited) run differential expression analysis can read pre-computed object containing gene signature top 30 DEGs (overexpressed NK cells vs others):","code":"# Performing differential expression analysis nk.de.markers <- FindMarkers(atlas, ident.1 = \"NK\", ident.2 = NULL) nk.de.markers <- nk.de.markers[order(-nk.de.markers$avg_log2FC),     ] nk_genes <- rownames(nk.de.markers)[1:30] FeaturePlot(atlas, nk_genes[1:4]) nk.de.markers <- read.csv(\"inst/precomp/nk_degs\") nk_genes <- rownames(nk.de.markers)[1:30] nk_genes #>  [1] \"GNLY\"    \"NKG7\"    \"GZMB\"    \"PRF1\"    \"FGFBP2\"  \"GZMA\"    \"KLRD1\"   #>  [8] \"CST7\"    \"SPON2\"   \"KLRF1\"   \"CTSW\"    \"CD247\"   \"CCL5\"    \"CLIC3\"   #> [15] \"HOPX\"    \"GZMH\"    \"IL2RB\"   \"KLRB1\"   \"TRDC\"    \"CD7\"     \"GZMM\"    #> [22] \"MYOM2\"   \"FCGR3A\"  \"ARL4C\"   \"ABHD17A\" \"SYNE2\"   \"CMC1\"    \"EFHD2\"   #> [29] \"ADGRG1\"  \"JAK1\""},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"converting-seurat-objects-in-combirocs-input-format","dir":"Articles","previous_headings":"Selection of NK cells marker combinations","what":"Converting Seurat objects in combiroc’s input format","title":"Signature refining tutorial - scRNA-seq Workflow","text":"Central combiroc workflow applied single cell data function seurat_to_combiroc(). takes Seurat object input extracts selected marker expression values @data slot given assay , optionally, class specific celltype (case ‘NK’ ‘’); directly assembles dataframe compatible combiroc workflow either training (finding combinations models) testing purposes (using previously found combinations).","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"preparing-the-training-single-cell-rnaseq-dataset","dir":"Articles","previous_headings":"Selection of NK cells marker combinations","what":"Preparing the training single-cell RNAseq dataset","title":"Signature refining tutorial - scRNA-seq Workflow","text":"Seurat object obtained standard Seurat protocol, needs converted combiroc-ready version order perform training procedure, .e. finding best markers combinations models, combiroc’s functions. train object can obtained seurat_to_combiroc() function: [Heavy-Code] pre-computed train object obtained code can directly read : , described main combiroc vignette, used combiroc_long make data long tidy format, fit processing:","code":"train <- seurat_to_combiroc(SeuratObject = atlas, gene_list = nk_genes,     assay = \"SCT\", labelled_data = T, case_class = \"NK\", case_label = \"NK\",     control_label = \"Other\") train <- readRDS(file = \"inst/precomp/train.rds\") head(train) #>                    ID Class   ABHD17A    ADGRG1    ARL4C      CCL5     CD247 #> 1 L1_AAACCCAAGAAACTCA Other 0.6931472 0.0000000 0.000000 0.0000000 0.0000000 #> 2 L1_AAACCCAAGACATACA Other 0.0000000 0.0000000 1.609438 0.0000000 0.6931472 #> 3 L1_AAACCCACAACTGGTT Other 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 #> 4 L1_AAACCCACACGTACTA    NK 1.3862944 0.6931472 1.609438 2.4849066 1.7917595 #> 5 L1_AAACCCACAGCATACT Other 0.0000000 0.0000000 1.386294 0.6931472 0.6931472 #> 6 L1_AAACCCACATCAGTCA Other 0.0000000 0.0000000 2.302585 2.9957323 1.6094379 #>         CD7    CLIC3     CMC1     CST7     CTSW     EFHD2   FCGR3A   FGFBP2 #> 1 0.0000000 0.000000 0.000000 0.000000 0.000000 1.0986123 0.000000 0.000000 #> 2 1.6094379 0.000000 0.000000 0.000000 0.000000 0.6931472 0.000000 0.000000 #> 3 0.6931472 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 0.000000 #> 4 1.6094379 2.197225 1.945910 2.944439 1.945910 1.3862944 1.386294 2.079442 #> 5 0.6931472 0.000000 0.000000 0.000000 1.098612 0.6931472 0.000000 0.000000 #> 6 0.0000000 0.000000 2.302585 2.079442 0.000000 0.0000000 0.000000 0.000000 #>       GNLY     GZMA     GZMB    GZMH      GZMM     HOPX    IL2RB      JAK1 #> 1 0.000000 0.000000 0.000000 0.00000 0.0000000 0.000000 0.000000 0.6931472 #> 2 0.000000 0.000000 0.000000 0.00000 0.0000000 0.000000 0.000000 1.3862944 #> 3 0.000000 0.000000 0.000000 0.00000 0.6931472 0.000000 0.000000 0.0000000 #> 4 3.044522 1.386294 2.772589 1.94591 1.3862944 1.609438 1.791759 1.9459101 #> 5 0.000000 0.000000 0.000000 0.00000 1.0986123 0.000000 0.000000 0.6931472 #> 6 0.000000 1.098612 0.000000 0.00000 1.9459101 0.000000 0.000000 1.3862944 #>      KLRB1    KLRD1    KLRF1    MYOM2      NKG7     PRF1    SPON2     SYNE2 #> 1 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> 2 2.079442 0.000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> 3 0.000000 0.000000 0.000000 0.000000 0.6931472 0.000000 0.000000 0.6931472 #> 4 1.386294 1.609438 1.386294 1.791759 3.9120230 1.791759 2.397895 1.0986123 #> 5 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> 6 0.000000 0.000000 0.000000 0.000000 2.9957323 0.000000 0.000000 1.7917595 #>       TRDC #> 1 0.000000 #> 2 0.000000 #> 3 0.000000 #> 4 1.791759 #> 5 0.000000 #> 6 0.000000 train_long <- combiroc_long(train) head(train_long) #> # A tibble: 6 × 4 #>   ID                  Class Markers Values #>   <chr>               <chr> <chr>    <dbl> #> 1 L1_AAACCCAAGAAACTCA Other ABHD17A  0.693 #> 2 L1_AAACCCAAGAAACTCA Other ADGRG1   0     #> 3 L1_AAACCCAAGAAACTCA Other ARL4C    0     #> 4 L1_AAACCCAAGAAACTCA Other CCL5     0     #> 5 L1_AAACCCAAGAAACTCA Other CD247    0     #> 6 L1_AAACCCAAGAAACTCA Other CD7      0"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"finding-the-best-marker-combinations-and-models","dir":"Articles","previous_headings":"Selection of NK cells marker combinations","what":"Finding the best marker combinations and models","title":"Signature refining tutorial - scRNA-seq Workflow","text":"Given list markers, combiroc assesses performance combinations markers. computational load process can high 10 markers. list \\(n\\) markers generates \\({2^{n} - 1 }\\), thus \\(n=30\\) billion possible combinations. Mathematically, combinations mean combinations without repetition, .e. subset \\(k\\) distinct elements set \\(n\\) elements, can calculated binomial coefficient \\(\\binom{n}{k}\\). purpose combiroc always finding best optimized combination markers, .e. subset original full signature , despite much smaller number markers, retains discriminatory power original signature ’s even better. particularly important field diagnostics smaller set marker bigger translational potential (see first combiroc paper Mazzara et al. 2017 discussion ). Similarly, limit search combinations composed 5 markers: set max_length = 5 attribute combi() function. limitation number combinations compute drops 174,436, computationally manageable. \\[ Combinations(upTo5Markers) = \\sum_{=1}^5 \\binom{n}{} \\]  combi() function works train dataset computing marker combinations counting corresponding positive samples class (thresholds selected). sample, considered positive given combination, must value higher given signal threshold (signalthr) least given number markers composing combination (combithr). described combiroc’s vignette standard workflow, argument signalthr combi() function set according guidelines characteristics methodology used analysis accurate inspection signal intensity distribution. event specific guidelines missing, one set value signalthr suggested distr$Density_plot feature. Single cell RNA-seq datasets exactly one cases: often neither possible easy extrapolate best signal threshold, due highly scattered distribution expression values: thus take advantage package-specific distr$Density_plot feature let package find value without user intervention.","code":"#>   n_markers n_combs tot_combs #> 1         1      30        30 #> 2         2     435       465 #> 3         3    4060      4525 #> 4         4   27405     31930 #> 5         5  142506    174436"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"combinatorial-analysis","dir":"Articles","previous_headings":"Selection of NK cells marker combinations","what":"Combinatorial analysis","title":"Signature refining tutorial - scRNA-seq Workflow","text":"core combiroc analysis two marker_distribution() combi() functions: changing value key parameters functions can modulate stringency severity analysis. obtain performing stringent signature refinement set combithr argument 2 combi(): minimum number positively expressed genes (.e. minimum number genes need reach signal threshold) consider whole combination valid one. plots show expression values (signal) distribution obtained markers_distributions() functions training dataset long format (train_long). Differently two well-defined classes (seen standard combiroc workflow), ’s intuitive put signal threshold, function suggests signal intensity value 0.9. Genes expression values, expected, distributed different ways two classes: Please note: markers_distribution() command naturally triggers warnings user reminded use command arguments  suggested threshold indicated vertical dashed line value shown overlay. exact value can retrieved distr object distr$Coord$threshold (see Standard workflow details): Let’s apply now combi() function training dataset train suggested threshold. results table (train_tab dataframe) combinations 1 (= individual markers) 5 genes . dataframe also shown sensitivity (SE) specificity (SP) combination: SE percentage positive cells ‘NK’ class SP percentage negative cells ‘’ class [Heavy-Code] (use pre-computed ) Read precomputed object: rank combinations Youden index (SE+SP-1) filter SE SP values. select top 4 (demonstration purposes , others may also good): using rank Youden index number genes combination, combinations fewer genes considered better ones. roc_reports() carry computations top four combinations (need explicitly indicate number IDs selected_combinations argument). Also, need indicate case class (NK): Let’s explore results generated:  Zooming show higher performance combinations:  overall internal classification performances top 4 combinations better top 4 single markers ones, similar . know genes specific combination can use show_markers() function. combinations 169807 172173, use:","code":"distr <- markers_distribution(train_long, signalthr_prediction = TRUE,     case_class = \"NK\") distr$Density_plot autoThreshold <- distr$Coord[distr$Coord$Youden == max(distr$Coord$Youden),     \"threshold\"][1] distr$Coord[distr$Coord$Youden == max(distr$Coord$Youden), ]  # optimal threshold #>   threshold specificity sensitivity    Youden #> 3 0.8958797          86          79 0.6461265 train_tab <- combi(train, signalthr = autoThreshold, combithr = 2,     max_length = 5, case_class = \"NK\") train_tab <- read.table(\"inst/precomp/train_tab\") tail(train_tab) #>                                        Markers X.Positives.Other X.Positives.NK #> Combination 174401 MYOM2-NKG7-PRF1-SPON2-SYNE2             20313          18220 #> Combination 174402  MYOM2-NKG7-PRF1-SPON2-TRDC             12876          18413 #> Combination 174403  MYOM2-NKG7-PRF1-SYNE2-TRDC             20844          18482 #> Combination 174404 MYOM2-NKG7-SPON2-SYNE2-TRDC             19664          18206 #> Combination 174405 MYOM2-PRF1-SPON2-SYNE2-TRDC             12019          17767 #> Combination 174406  NKG7-PRF1-SPON2-SYNE2-TRDC             20866          18512 #>                          SE       SP n_markers #> Combination 174401 97.62109 85.80503         5 #> Combination 174402 98.65517 91.00210         5 #> Combination 174403 99.02486 85.43396         5 #> Combination 174404 97.54608 86.25856         5 #> Combination 174405 95.19396 91.60098         5 #> Combination 174406 99.18560 85.41859         5 rmks <- ranked_combs(combo_table = train_tab, min_SE = 95, min_SP = 95) head(rmks$table) #>                                           Markers X.Positives.Other #> Combination 169807    GNLY-IL2RB-KLRF1-SPON2-TRDC              6914 #> Combination 172173    GZMB-IL2RB-KLRF1-SPON2-TRDC              5633 #> Combination 163878  FCGR3A-GNLY-IL2RB-KLRF1-MYOM2              6401 #> Combination 137550 CLIC3-FCGR3A-IL2RB-KLRD1-KLRF1              6777 #> Combination 138800   CLIC3-GNLY-IL2RB-KLRF1-SPON2              6361 #> Combination 164702   FCGR3A-GZMB-IL2RB-KLRF1-TRDC              6351 #>                    X.Positives.NK       SE       SP n_markers    Youden #> Combination 169807          18356 98.34976 95.16841         5 0.9351818 #> Combination 172173          18186 97.43892 96.06359         5 0.9350251 #> Combination 163878          18276 97.92113 95.52690         5 0.9344804 #> Combination 137550          18325 98.18367 95.26415         5 0.9344782 #> Combination 138800          18268 97.87827 95.55486         5 0.9343313 #> Combination 164702          18264 97.85684 95.56184         5 0.9341868 reports <- roc_reports(train, markers_table = train_tab, selected_combinations = c(169807,     172173, 163878, 137550), case_class = \"NK\", single_markers = nk_genes[1:4]) reports$Plot rocplot <- (reports$Plot) + coord_cartesian(xlim = c(0, 0.2)) rocplot reports$Metrics #>                      AUC    SE    SP CutOff   ACC     TN    TP   FN    FP   NPV #> GNLY               0.962 0.959 0.914  0.146 0.920 130861 17908  756 12239 0.994 #> NKG7               0.970 0.982 0.901  0.131 0.911 128972 18336  328 14128 0.997 #> GZMB               0.949 0.928 0.925  0.136 0.925 132375 17316 1348 10725 0.990 #> PRF1               0.965 0.935 0.919  0.137 0.921 131569 17452 1212 11531 0.991 #> Combination 169807 0.995 0.982 0.968  0.107 0.970 138553 18326  338  4547 0.998 #> Combination 172173 0.995 0.977 0.970  0.108 0.971 138769 18229  435  4331 0.997 #> Combination 163878 0.995 0.985 0.962  0.078 0.965 137680 18393  271  5420 0.998 #> Combination 137550 0.995 0.976 0.966  0.101 0.967 138179 18224  440  4921 0.997 #>                      PPV #> GNLY               0.594 #> NKG7               0.565 #> GZMB               0.618 #> PRF1               0.602 #> Combination 169807 0.801 #> Combination 172173 0.808 #> Combination 163878 0.772 #> Combination 137550 0.787 show_markers(selected_combinations = c(169807, 172713), markers_table = train_tab) #>          Combination           Composing_markers #> 1 Combination 169807 GNLY-IL2RB-KLRF1-SPON2-TRDC #> 2 Combination 172713 GZMH-HOPX-KLRB1-KLRF1-MYOM2"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"testing-the-combinations-on-independent-datasets-validation","dir":"Articles","previous_headings":"","what":"Testing the combinations on independent datasets (validation)","title":"Signature refining tutorial - scRNA-seq Workflow","text":"TEST/VALIDATION DATASETS independent test/validation used 2 different datasets evaluate expression levels previously selected NK related marker combinations cluster datasets: Cord Blood mononuclear cells (CBMC) CITE-seq dataset shown ‘Using Seurat multimodal data’ vignette [3] Peripheral blood mononuclear cells (PBMC) PBMC3K scRNA-seq dataset Satija, R., Farrell, J., Gennert, D. et al. 2015 [4] Please note: main reason choose datasets well annotated. cell clusters annotation first (training) dataset indeed used computations combiroc (needed distinguish NK cells cells), cells annotation two validation datasets stripped away data, used ex-post ground truth check expression maker combinations dataset, first prepare ","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"testing-marker-combinations-on-cbmc-dataset","dir":"Articles","previous_headings":"Testing the combinations on independent datasets (validation)","what":"Testing marker combinations on CBMC dataset","title":"Signature refining tutorial - scRNA-seq Workflow","text":"CBMC test dataset, made 8617 cord blood mononuclear cells (CBMCs), produced CITE-seq directly loaded SeuratData package. dataset generated Stoeckius et al. 2017 [3]. description can found Seurat multimodal vignette calling guide ?cbmc. going invoke cbmc dataset SeuratData package preprocess needed:  Please note “NA” gray cells cluster mouse cells whose presence acts negative control original experiment/dataset. Also, cluster annotations just superimposed pulled ground truth cells identity used combiroc procedure. previosuly done training dataset, now obtain first combiroc test dataset using seurat_to_combiroc() function. test_cbmc object contains cell barcodes sample IDs expression values 30 NK signature genes).","code":"if (!require(\"cbmc.SeuratData\", quietly = TRUE)) install.packages(\"cbmc.SeuratData\") data(cbmc) # process data with standard Seurat protocol cbmc <- NormalizeData(cbmc, verbose = F) %>%     FindVariableFeatures(verbose = F) %>%     ScaleData(verbose = F) %>%     RunPCA(verbose = F) cbmc <- FindNeighbors(cbmc, dims = 1:30, verbose = F) cbmc <- FindClusters(cbmc, resolution = 0.8, verbose = FALSE) cbmc <- RunUMAP(cbmc, dims = 1:30, verbose = F) # add cell annotations from CITE seq to identities Idents(cbmc) <- cbmc@meta.data$protein_annotations cbmc[[\"ID\"]] <- Idents(cbmc) # visualize UMAP clusters DimPlot(cbmc, repel = T, label = T) test_cbmc <- seurat_to_combiroc(SeuratObject = cbmc, gene_list = nk_genes,     assay = \"RNA\") head(test_cbmc) #>                 ID ABHD17A     ARL4C      CCL5     CD247       CD7     CLIC3 #> 1 CTGTTTACACCGCTAG       0 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> 2 CTCTACGGTGTGGCTC       0 0.0000000 0.0000000 0.0000000 0.3862658 0.3862658 #> 3 AGCAGCCAGGCTCATT       0 0.0000000 0.0000000 0.4059657 0.0000000 0.4059657 #> 4 GAATAAGAGATCCCAT       0 0.0000000 0.3769515 0.0000000 0.6500659 0.0000000 #> 5 GTGCATAGTCATGCAT       0 0.0000000 0.0000000 0.0000000 0.4482965 0.0000000 #> 6 TACACGACACATCCGG       0 0.9567604 0.0000000 0.0000000 0.9567604 0.0000000 #>   CMC1      CST7      CTSW     EFHD2 FCGR3A    FGFBP2      GNLY      GZMA #> 1    0 0.0000000 0.7407242 0.4374333      0 0.0000000 1.3200570 0.0000000 #> 2    0 0.0000000 0.0000000 0.0000000      0 0.3862658 1.0598378 0.6642082 #> 3    0 0.0000000 0.0000000 0.4059657      0 0.0000000 1.2538354 0.6938980 #> 4    0 0.6500659 0.0000000 0.0000000      0 0.3769515 1.0407480 0.0000000 #> 5    0 0.0000000 0.4482965 0.4482965      0 0.0000000 1.8067771 0.4482965 #> 6    0 0.0000000 0.4281501 0.0000000      0 0.0000000 0.9567604 0.0000000 #>        GZMB      GZMH      GZMM      HOPX     IL2RB      JAK1     KLRB1 KLRD1 #> 1 0.0000000 0.0000000 0.0000000 0.4374333 0.0000000 0.0000000 0.0000000     0 #> 2 0.6642082 0.3862658 0.0000000 0.0000000 0.0000000 0.6642082 0.0000000     0 #> 3 0.0000000 0.0000000 0.6938980 0.0000000 0.0000000 0.4059657 0.4059657     0 #> 4 0.0000000 0.6500659 0.3769515 0.0000000 0.0000000 0.0000000 0.0000000     0 #> 5 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.7567254     0 #> 6 0.4281501 0.0000000 0.9567604 0.0000000 0.7269846 0.0000000 0.0000000     0 #>   KLRF1 MYOM2      NKG7 PRF1     SPON2     SYNE2      TRDC #> 1     0     0 0.4374333    0 0.0000000 0.0000000 0.0000000 #> 2     0     0 0.6642082    0 0.0000000 0.0000000 0.3862658 #> 3     0     0 0.4059657    0 0.4059657 0.0000000 0.0000000 #> 4     0     0 1.5395879    0 0.0000000 0.3769515 0.0000000 #> 5     0     0 0.0000000    0 0.0000000 0.0000000 0.0000000 #> 6     0     0 1.1434791    0 0.0000000 0.0000000 0.4281501"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"distribution-of-individual-markers-expression","dir":"Articles","previous_headings":"Testing the combinations on independent datasets (validation) > Testing marker combinations on CBMC dataset","what":"Distribution of individual markers’ expression","title":"Signature refining tutorial - scRNA-seq Workflow","text":"Let’s look top four single NK-markers expression distributed across cell clusters CBMC dataset:  dataset, expressions top individual NK markers higher NK cluster, also moderate others: expressed CD8 T cells, CD34+ CD16+ Mono cells, even clusters defined annotated relying protein-level information (CITE seq). Moreover, GZMB alone sufficient discriminate NK cells pDCs. PRF1 among top four markers able discriminate NK cells alone. Mouse cells (“NA” cluster), kept original dataset negative control, also show bit GNLY NKG7 expression, surprising given mixed nature cluster.","code":"VlnPlot(cbmc, features = nk_genes[1:4], group.by = \"ID\", pt.size = 0,     ncol = 2)"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"combiroc-nk-probability-across-cbmc-cell-clusters","dir":"Articles","previous_headings":"Testing the combinations on independent datasets (validation) > Testing marker combinations on CBMC dataset","what":"Combiroc NK probability across CBMC cell clusters","title":"Signature refining tutorial - scRNA-seq Workflow","text":"now look performance marker combination selected combiroc using combi-score, calculated top Combination 172173 (made genes GZMB, IL2RB, KLRF1, SPON2 TRDC), highest accuracy. score expresses probability NK cells. Let’s plot combi-score Combination 172173 across CBMC clusters:  combi-score, probability belonging NK cells, highly specific clusters annotated “NK” label. pDCs cells show signal small number mouse cells colored FeaturePlot (left), yet without relevance combi-score seen violin plots (right).","code":"# adding combi score for combination 172173 cs_cbmc <- combi_score(test_cbmc, Models = reports$Models, Metrics = reports$Metrics,     Positive_class = \"NK\", Negative_class = \"Other\") cbmc[[\"c172173_combi_score\"]] <- cs_cbmc$`Combination 172173` p1 <- FeaturePlot(cbmc, features = \"c172173_combi_score\") p2 <- VlnPlot(cbmc, features = \"c172173_combi_score\", group.by = \"ID\",     pt.size = 0) p1 | p2"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"testing-marker-combination-on-pbmc3k-dataset","dir":"Articles","previous_headings":"Testing the combinations on independent datasets (validation)","what":"Testing marker combination on PBMC3K dataset","title":"Signature refining tutorial - scRNA-seq Workflow","text":"Peripheral blood mononuclear cells (PBMC3K) test dataset can also directly invoked SeuratData library. dataset immediately available already processed Seurat object named pbmc3k.final. original UMAP embedding PBMC3K datasets:  way previously done using now seurat_to_combiroc() obtain second combiroc test dataset (test_pbmc3k). Please note dataset contain TRDC expression values since gene (contributes top selected combinations) present original PBMC3K dataset.","code":"if (!require(\"pbmc3k.SeuratData\", quietly = TRUE)) install.packages(\"pbmc3k.SeuratData\") data(\"pbmc3k\") pbmc3k.final <- pbmc3k.final pbmc3k.final[[\"ID\"]] <- Idents(pbmc3k.final) pbmc3k.final #> An object of class Seurat  #> 13714 features across 2638 samples within 1 assay  #> Active assay: RNA (13714 features, 2000 variable features) #>  2 dimensional reductions calculated: pca, umap DimPlot(pbmc3k.final, reduction = \"umap\", label = T, repel = T) test_pbmc3k <- seurat_to_combiroc(SeuratObject = pbmc3k.final,     gene_list = nk_genes, assay = \"RNA\") head(test_pbmc3k) #>               ID ABHD17A    ARL4C     CCL5    CD247      CD7    CLIC3 CMC1 #> 1 AAACATACAACCAC       0 0.000000 4.322952 0.000000 2.226555 1.635873    0 #> 2 AAACATTGAGCTAC       0 0.000000 1.111715 0.000000 0.000000 0.000000    0 #> 3 AAACATTGATCAGC       0 1.429744 0.000000 1.429744 0.000000 0.000000    0 #> 4 AAACCGTGCTTCCG       0 1.566387 0.000000 0.000000 0.000000 0.000000    0 #> 5 AAACCGTGTATGCG       0 0.000000 3.453545 0.000000 2.416278 0.000000    0 #> 6 AAACGCACTGGTAC       0 0.000000 0.000000 0.000000 0.000000 0.000000    0 #>       CST7     CTSW    EFHD2   FCGR3A   FGFBP2     GNLY GZMA     GZMB GZMH #> 1 0.000000 2.226555 1.635873 0.000000 0.000000 0.000000    0 0.000000    0 #> 2 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000    0 0.000000    0 #> 3 0.000000 0.000000 0.000000 0.000000 1.429744 1.429744    0 0.000000    0 #> 4 0.000000 0.000000 1.566387 1.566387 0.000000 0.000000    0 1.566387    0 #> 5 3.063772 3.733287 0.000000 0.000000 3.063772 3.453545    0 4.815828    0 #> 6 0.000000 0.000000 1.726902 0.000000 0.000000 0.000000    0 0.000000    0 #>       GZMM     HOPX    IL2RB     JAK1 KLRB1    KLRD1 KLRF1 MYOM2     NKG7 #> 1 0.000000 2.226555 0.000000 0.000000     0 2.226555     0     0 0.000000 #> 2 0.000000 0.000000 0.000000 1.111715     0 0.000000     0     0 1.111715 #> 3 0.000000 0.000000 1.429744 0.000000     0 0.000000     0     0 0.000000 #> 4 0.000000 0.000000 0.000000 0.000000     0 0.000000     0     0 1.566387 #> 5 3.063772 0.000000 3.063772 0.000000     0 0.000000     0     0 4.729553 #> 6 0.000000 0.000000 0.000000 0.000000     0 0.000000     0     0 0.000000 #>       PRF1    SPON2    SYNE2 #> 1 0.000000 0.000000 1.635873 #> 2 0.000000 0.000000 0.000000 #> 3 0.000000 0.000000 0.000000 #> 4 0.000000 0.000000 0.000000 #> 5 3.453545 3.733287 2.416278 #> 6 0.000000 0.000000 0.000000"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"distribution-of-individual-markers-expression-1","dir":"Articles","previous_headings":"Testing the combinations on independent datasets (validation) > Testing marker combination on PBMC3K dataset","what":"Distribution of individual markers’ expression","title":"Signature refining tutorial - scRNA-seq Workflow","text":"Let’s look top four single NK-markers expression distributed PBMC-3K dataset:  PBMC dataset, top four markers high expression values NK cells CD8 T cells , showing individual markers mRNA level may sufficient clearly identify cells interest.","code":"VlnPlot(pbmc3k.final, features = nk_genes[1:4], group.by = \"ID\",     pt.size = 0, ncol = 2)"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"combiroc-nk-probability-across-pbmc3k-cell-clusters","dir":"Articles","previous_headings":"Testing the combinations on independent datasets (validation) > Testing marker combination on PBMC3K dataset","what":"Combiroc NK probability across PBMC3K cell clusters","title":"Signature refining tutorial - scRNA-seq Workflow","text":"now look performance marker combination selected combiroc using combi-score, calculated top Combination 137550 (made genes CLIC3, FCGR3A, IL2RB, KLRD1 KLRF1), highest accuracy combination without TRDC gene (expressed dataset). score also expresses probability NK cells. Let’s plot combi-score Combination 137550 across PBMC-3K clusters:  , seen previous dataset, cell cluster labeled “NK” one displaying high combi-score, .e. showing actual probability NK cells. cell cluster produces noisy interference.","code":"sub <- reports$Models sub$`Combination 169807` <- NULL sub$`Combination 172173` <- NULL cs_pbmc3k <- combi_score(test_pbmc3k, Models = sub, Metrics = reports$Metrics,     Positive_class = \"NK\", Negative_class = \"Other\") pbmc3k.final[[\"c137550_combi_score\"]] <- cs_pbmc3k$`Combination 137550`  # to add combi score of combination 137550 p1 <- FeaturePlot(pbmc3k.final, features = \"c137550_combi_score\") p2 <- VlnPlot(pbmc3k.final, features = \"c137550_combi_score\",     group.by = \"ID\", pt.size = 0) p1 | p2"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"combinations-selected-with-combiroc-are-optimised-smaller-signatures","dir":"Articles","previous_headings":"Testing the combinations on independent datasets (validation)","what":"Combinations selected with combiroc are optimised smaller signatures","title":"Signature refining tutorial - scRNA-seq Workflow","text":"combi-score described defined predicted probability obtained fitting combinations models test datasets (returned combi_score()), metrics exist gene-signature-score described Della Chiara et al. 2021 [5]: gene-signature-score takes account expression level co-expression genes within single cell. Given geneset, gene-signature-score’s increase directly proportional number expressed genes signature sum level expression. going now use gene-signature-score computed whole signature computed combiroc-selected combinations. , reproduced gene-signature-score computation custom R function signature_score.R: First, compute “gene-signature-score” whole 30 DEGs signature assume reference. whole signature (30 genes) expect specific. test datasets previously used. , compute “gene-signature-score” limited combinations five genes previously used: - Combination 172173 (made genes GZMB, IL2RB, KLRF1, SPON2 TRDC) CBMC dataset. - Combination 137550 (made genes CLIC3, FCGR3A, IL2RB, KLRD1 KLRF1) PBMC3K dataset combinations going “optimized-signatures”. now plotting side side gene-signature-scores whole-signature (30 genes) combinations (5 genes). CBMC dataset:  PBMC-3K dataset:  expected, gene-signature-score datasets correctly discriminates NK-cells others, CBMC cells NK cluster unequivocally selected, PBMC-3K cells also cytotoxic CD8-T cells picked still relevant score. happen gene-signature-score computed combinations selected combiroc (plots right). Overall, gene-signature-scores combinations highly specific less noisy. demonstrates genes 30-genes whole signature add discriminatory power compared combinations much less genes. 5-genes combinations selected combiroc de-facto optimized gene signatures equal even higher discriminatory power compared bigger gene signatures extracted .","code":"source(\"inst/external_code/signature_score.R\") # computing whole signature gene-signature-score for CBMC NK_sig_cbmc <- signature_score(SeuratObj = cbmc, geneset = nk_genes) cbmc$NK_signature_score <- NK_sig_cbmc$scaled_combined_score  # computing whole signature gene-signature-score for # PBMC-3K NK_sig_pbmc3k <- signature_score(SeuratObj = pbmc3k.final, geneset = nk_genes) pbmc3k.final$NK_signature_score <- NK_sig_pbmc3k$scaled_combined_score # computing gene-signature-score of combination 172173 for # CBMC comb_cbmc <- signature_score(SeuratObj = cbmc, geneset = c(\"GZMB\",     \"IL2RB\", \"KLRF1\", \"SPON2\", \"TRDC\")) cbmc[[\"c172173_signature_score\"]] <- comb_cbmc$scaled_combined_score  # computing gene-signature-score of combination 137550 for # PBMC-3K comb_pbmc3k <- signature_score(SeuratObj = pbmc3k.final, geneset = c(\"CLIC3\",     \"FCGR3A\", \"IL2RB\", \"KLRD1\", \"KLRF1\")) pbmc3k.final[[\"c137550_signature_score\"]] <- comb_pbmc3k$scaled_combined_score v1 <- VlnPlot(cbmc, features = \"NK_signature_score\", group.by = \"ID\",     pt.size = 0) v2 <- VlnPlot(cbmc, features = \"c172173_signature_score\", group.by = \"ID\",     pt.size = 0) v1 | v2 v1 <- VlnPlot(pbmc3k.final, features = \"NK_signature_score\",     group.by = \"ID\", pt.size = 0) v2 <- VlnPlot(pbmc3k.final, features = \"c137550_signature_score\",     group.by = \"ID\", pt.size = 0) v1 | v2"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"the-combi-score-can-be-used-to-discriminate-among-cell-clusters","dir":"Articles","previous_headings":"Testing the combinations on independent datasets (validation)","what":"The combi-score can be used to discriminate among cell clusters","title":"Signature refining tutorial - scRNA-seq Workflow","text":"Finally compare complete NK whole gene-signature-score combiroc’s NK combi-score see perform test datasets. Comparison CBMC cells:  Comparison PBMC-3K cells:  Remarkably, despite 6 fold reduction number considered features build gene score, datasets, signature score confirmed best combination , worst, accurate whole signature indicating NK cluster. addition, combi-score results even precise suggests combinations can used refined version 30-genes NK whole-signature. difference gene-signature-score combi-score surprising since compute first genes within combinations considered equally, latter combiroc models assign ‘weight’ gene, indicating power combiroc combination models suggesting identity cluster modest amount genes. mean control, check effect set random combinations test datasets random combinations preferential cluster show generalized higher background signal noise.   Beyond using scores random combinations negative control, also show magnitude background noise associated random combination taken consideration. fact, random scores show quite homogeneously distributed values across clusters indicating cluster-preferential distributions real combinations scores stochastic. Generally speaking since higher length random signatures, higher noise hence probability pick genes expressed clusters: suggests higher length real DEG signature higher probability include less specific genes increase noise.","code":"v1 <- VlnPlot(cbmc, features = \"NK_signature_score\", group.by = \"ID\",     pt.size = 0) v2 <- VlnPlot(cbmc, features = \"c172173_combi_score\", group.by = \"ID\",     pt.size = 0) v1 | v2 v1 <- VlnPlot(pbmc3k.final, features = \"NK_signature_score\",     group.by = \"ID\", pt.size = 0) v2 <- VlnPlot(pbmc3k.final, features = \"c137550_combi_score\",     group.by = \"ID\", pt.size = 0) v1 | v2 combs_length <- c(30, 5) random_combs <- c(0, 0) set.seed(1492) for (i in combs_length) {     random_list <- sample(rownames(cbmc), i)     dfc <- signature_score(cbmc, random_list)     cbmc[[paste0(\"random_\", as.character(i))]] <- dfc$scaled_combined_score     dfp <- signature_score(pbmc3k.final, random_list)     pbmc3k.final[[paste0(\"random_\", as.character(i))]] <- dfp$scaled_combined_score } print(\"CBMC\") #> [1] \"CBMC\" VlnPlot(cbmc, features = c(\"random_30\", \"random_5\"), group.by = \"ID\",     pt.size = 0) print(\"PBMC3K\") #> [1] \"PBMC3K\" VlnPlot(pbmc3k.final, features = c(\"random_30\", \"random_5\"),     group.by = \"ID\", pt.size = 0)"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Signature refining tutorial - scRNA-seq Workflow","text":"guided tutorial shows use combiroc package optimize single-cell gene signature combinations marker identify population interest scRNA-seq datasets: combiroc accurately selects informative markers wider trancriptional signature. combiroc’s specificity can also ameliorate results obtained published gene-signature scores: gene-signature summarizing method remarkably less noisy performed markers combinations compared whole gene signatures. Identifying NK cells using expression level best markers individually efficient since unspecific classification purposes taken one one. power combined signature five markers comparable - cases superior - whole scRNA-seq gene signature, typically range tens genes: scaling gene signature retaining discriminatory power highly relevant research diagnostic context. Back top docment. Go Combiroc standard workflow tutorial","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Signature refining tutorial - scRNA-seq Workflow","text":"Abdelaal et al. 2019. Genome Biology. comparison automatic cell identification methods single-cell RNA sequencing data Hao et al. 2021.Cell Integrated analysis multimodal single-cell data Stoeckius et al. 2017. Nature Methods. Simultaneous epitope transcriptome measurement single cells Satija et al. 2015. Nature Biotechnology. Spatial reconstruction single-cell gene expression data. Della Chiara et al. 2021. Nature Communications. Epigenomic landscape human colorectal cancer unveils aberrant core pan-cancer enhancers orchestrated YAP/TAZ.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_singlecell.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Signature refining tutorial - scRNA-seq Workflow","text":"","code":"sessionInfo() #> R version 4.2.1 (2022-06-23 ucrt) #> Platform: x86_64-w64-mingw32/x64 (64-bit) #> Running under: Windows 10 x64 (build 22000) #>  #> Matrix products: default #>  #> locale: #> [1] LC_COLLATE=English_United Kingdom.utf8  #> [2] LC_CTYPE=English_United Kingdom.utf8    #> [3] LC_MONETARY=English_United Kingdom.utf8 #> [4] LC_NUMERIC=C                            #> [5] LC_TIME=English_United Kingdom.utf8     #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #>  [1] scattermore_0.8               pheatmap_1.0.12               #>  [3] cowplot_1.1.1                 colorspace_2.0-3              #>  [5] RColorBrewer_1.1-3            ggpubr_0.6.0                  #>  [7] ggplot2_3.4.2                 tidyr_1.3.0                   #>  [9] pbmcMultiome.SeuratData_0.1.4 pbmc3k.SeuratData_3.1.4       #> [11] cbmc.SeuratData_3.1.4         bmcite.SeuratData_0.3.0       #> [13] SeuratData_0.2.2              patchwork_1.1.2               #> [15] SeuratObject_4.1.3            Seurat_4.3.0                  #> [17] dplyr_1.0.10                  combiroc_0.2.4                #> [19] testthat_3.1.7                devtools_2.4.5                #> [21] usethis_2.1.6                 knitr_1.42                    #> [23] httr_1.4.5                    #>  #> loaded via a namespace (and not attached): #>   [1] backports_1.4.1        systemfonts_1.0.4      plyr_1.8.8             #>   [4] igraph_1.4.1           lazyeval_0.2.2         sp_1.6-0               #>   [7] splines_4.2.1          listenv_0.9.0          digest_0.6.29          #>  [10] htmltools_0.5.5        fansi_1.0.3            magrittr_2.0.3         #>  [13] memoise_2.0.1          tensor_1.5             cluster_2.1.3          #>  [16] ROCR_1.0-11            remotes_2.4.2          globals_0.16.2         #>  [19] matrixStats_0.63.0     pkgdown_2.0.7          spatstat.sparse_3.0-1  #>  [22] prettyunits_1.1.1      rappdirs_0.3.3         ggrepel_0.9.3          #>  [25] textshaping_0.3.6      xfun_0.37              callr_3.7.3            #>  [28] crayon_1.5.2           jsonlite_1.8.4         progressr_0.13.0       #>  [31] spatstat.data_3.0-1    survival_3.3-1         zoo_1.8-11             #>  [34] glue_1.6.2             polyclip_1.10-4        gtable_0.3.1           #>  [37] leiden_0.4.3           car_3.1-1              pkgbuild_1.4.0         #>  [40] future.apply_1.10.0    abind_1.4-5            scales_1.2.1           #>  [43] DBI_1.1.3              rstatix_0.7.2          spatstat.random_3.1-4  #>  [46] miniUI_0.1.1.1         Rcpp_1.0.9             viridisLite_0.4.1      #>  [49] xtable_1.8-4           reticulate_1.28        bit_4.0.4              #>  [52] profvis_0.3.7          htmlwidgets_1.6.1      ellipsis_0.3.2         #>  [55] ica_1.0-3              farver_2.1.1           urlchecker_1.0.1       #>  [58] pkgconfig_2.0.3        uwot_0.1.14            deldir_1.0-6           #>  [61] sass_0.4.5             utf8_1.2.2             labeling_0.4.2         #>  [64] tidyselect_1.2.0       rlang_1.1.0            reshape2_1.4.4         #>  [67] later_1.3.0            munsell_0.5.0          tools_4.2.1            #>  [70] cachem_1.0.7           cli_3.4.1              generics_0.1.3         #>  [73] moments_0.14.1         broom_1.0.4            ggridges_0.5.4         #>  [76] evaluate_0.20          stringr_1.5.0          fastmap_1.1.1          #>  [79] goftest_1.2-3          yaml_2.3.7             ragg_1.2.5             #>  [82] bit64_4.0.5            processx_3.7.0         fs_1.5.2               #>  [85] fitdistrplus_1.1-8     purrr_1.0.1            RANN_2.6.1             #>  [88] nlme_3.1-157           pbapply_1.7-0          future_1.32.0          #>  [91] mime_0.12              formatR_1.14           brio_1.1.3             #>  [94] hdf5r_1.3.8            compiler_4.2.1         rstudioapi_0.14        #>  [97] plotly_4.10.1          png_0.1-8              ggsignif_0.6.4         #> [100] spatstat.utils_3.0-2   tibble_3.1.8           bslib_0.4.2            #> [103] stringi_1.7.8          highr_0.10             ps_1.7.1               #> [106] desc_1.4.2             lattice_0.20-45        Matrix_1.5-3           #> [109] SeuratDisk_0.0.0.9020  vctrs_0.6.0            pillar_1.8.1           #> [112] lifecycle_1.0.3        spatstat.geom_3.1-0    lmtest_0.9-40          #> [115] jquerylib_0.1.4        RcppAnnoy_0.0.20       data.table_1.14.8      #> [118] irlba_2.3.5.1          httpuv_1.6.6           R6_2.5.1               #> [121] promises_1.2.0.1       KernSmooth_2.23-20     gridExtra_2.3          #> [124] parallelly_1.34.0      sessioninfo_1.2.2      codetools_0.2-18       #> [127] MASS_7.3-57            gtools_3.9.4           pkgload_1.3.2          #> [130] rprojroot_2.0.3        withr_2.5.0            sctransform_0.3.5      #> [133] parallel_4.2.1         grid_4.2.1             rmarkdown_2.20         #> [136] carData_3.0-5          Rtsne_0.16             spatstat.explore_3.1-0 #> [139] pROC_1.18.0            shiny_1.7.4"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"top","dir":"Articles","previous_headings":"","what":"Summary","title":"Guide to CombiROC package - Standard workflow","text":"Powerful biomarkers important tools diagnostic, clinical research settings. area diagnostic medicine, biomarker often used tool identify subjects disease, high risk developing disease. Moreover, can used foresee likely outcome disease, monitor progression predict response given therapy. Diagnostic accuracy can improved considerably combining multiple markers, whose performance identifying diseased subjects usually assessed via receiver operating characteristic (ROC) curves. CombiROC tool originally designed easy use R-Shiny web application determine optimal combinations markers diverse complex omics data ( Mazzara et al. 2017 ); implementation easy use limited features limitations arise machine deployed . CombiROC package natural evolution CombiROC tool allows researcher/analyst freely use method build .","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"the-complete-workflow","dir":"Articles","previous_headings":"","what":"The complete workflow","title":"Guide to CombiROC package - Standard workflow","text":"aim document show whole CombiROC workflow biomarkers analysis get running quickly possible package. ’re going use proteomic dataset Zingaretti et al. 2012 containing multi-marker signatures Autoimmune Hepatitis (AIH) samples clinically diagnosed “abnormal” (class ) “normal” (class B). scope workflow first find markers combinations, assess performance classifying samples dataset. Note: use CombiROC research, please cite: Mazzara S., Rossi R.L., Grifantini R., Donizetti S., Abrignani L., Bombaci M. (2017) CombiROC: interactive web tool selecting accurate marker combinations omics data. Scientific Reports, 7:45477. 10.1038/srep45477","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"format","dir":"Articles","previous_headings":"The complete workflow","what":"Required data format","title":"Guide to CombiROC package - Standard workflow","text":"dataset analysed text format, can separated commas, tabs semicolons. Format columns following: 1st column must contain unique patient/sample IDs. 2nd column must contain class sample belongs. classes must exactly TWO must labelled character format “” (usually cases) “B” (usually controls). 3rd column , dataset must contain numerical values represent signal corresponding markers abundance sample (marker-related columns). header marker-related columns can called ‘Marker1, Marker2, Marker3, …’ can called directly gene/protein name. Please note “-” (dash) allowed column names","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"load","dir":"Articles","previous_headings":"The complete workflow","what":"Data loading","title":"Guide to CombiROC package - Standard workflow","text":"load_data() function uses customized read.table() function checks conformity dataset format. checks passed, marker-related columns reordered alphabetically, depending marker names (necessary proper computation combinations), imposes “Class” name second column. loaded dataset assigned “data” object. Please note load_data() takes semicolumn (“;”) default separator: dataset loaded different separator, .e. comma (“,”), necessary specify argument sep. code shows load data set contained “data” folder (remember adjust path according current working directory). First , load package load data. can use function load_data() correctly formatted dataset ready: Now, going use AIH demo data set, included CombiROC package can directly called demo_data. NB: combiroc able deal missing values removing samples NA values imputing values given median signal class (see ?roc_reports() deal_NA parameter). combiroc meant work negative values. recommend preprocess data order markers, sample, numeric signal values higher equal 0 using combiroc.","code":"library(combiroc) data <- load_data(\"./data/demo_data.csv\") data <- demo_data head(data) #>   Patient.ID Class Marker1 Marker2 Marker3 Marker4 Marker5 #> 1       AIH1     A     438     187     197     298     139 #> 2       AIH2     A     345     293     134     523     335 #> 3       AIH3     A     903     392     300    1253       0 #> 4       AIH4     A     552     267     296     666      22 #> 5       AIH5     A    1451     760     498     884     684 #> 6       AIH6     A     497     260     175     640     572"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"exploring-the-data","dir":"Articles","previous_headings":"The complete workflow","what":"Exploring the data","title":"Guide to CombiROC package - Standard workflow","text":"usually good thing visually explore data least plots. Box plots nice option observe distribution measurements sample. user can plot data /wishes using preferred function: since data CombiROC required wide (untidy) format, plotted directly widely used ggplot() function. Either user free make data longer (tidy) sole purpose plotting, package’s combiroc_long() function can used purpose; function wraps tidyr::pivot_longer()function, ’s used reshape data long format. Data long format required plotting functions package Tidyverse-oriented applications. data object original wide format can thus transformed reshaped long format data_long object, used.","code":"data_long <- combiroc_long(data) data_long #> # A tibble: 850 × 4 #>    Patient.ID Class Markers Values #>    <chr>      <chr> <chr>    <int> #>  1 AIH1       A     Marker1    438 #>  2 AIH1       A     Marker2    187 #>  3 AIH1       A     Marker3    197 #>  4 AIH1       A     Marker4    298 #>  5 AIH1       A     Marker5    139 #>  6 AIH2       A     Marker1    345 #>  7 AIH2       A     Marker2    293 #>  8 AIH2       A     Marker3    134 #>  9 AIH2       A     Marker4    523 #> 10 AIH2       A     Marker5    335 #> # … with 840 more rows"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"checking-the-individual-markers","dir":"Articles","previous_headings":"The complete workflow > Exploring the data","what":"Checking the individual markers","title":"Guide to CombiROC package - Standard workflow","text":"Individual markers can also explored retrieving summary statistics individual scatter plots. , function single_markers_statistics() can used ingesting dataframe data_long long format returned combiroc_long(). single_markers_statistics() function returns list length 2, whose first element (sms[[1]]) table statistics markers class. computed statistics : mean value minimum maximum values stadard deviation coefficient variation first quartile limit, median, third quartile limit second element another list, containing dot plots, one marker. individual plots can called second element (sms[[2]]) list $ operator. display plot Marker 1:  section “Code snippets” end vignette suggest code snippets can used customize plots individual markers across samples, well modify summary statistics.","code":"sms <- single_markers_statistics(data_long) s_table <- sms[[1]] s_table #> # A tibble: 10 × 11 #> # Groups:   Markers [5] #>    Markers Class   Mean   Min   Max     Sd    CV First_…¹ Median Third…² Skewn…³ #>    <chr>   <chr>  <dbl> <int> <int>  <dbl> <dbl>    <dbl>  <dbl>   <dbl>   <dbl> #>  1 Marker1 A     1159.     52  8584 1672.  1.44     369.   569    1047      3.18 #>  2 Marker1 B      161.      0  1223  162.  1.01      59.5  111     221      2.71 #>  3 Marker2 A      692.     41  3704  783.  1.13     259    422.    774.     2.41 #>  4 Marker2 B      141.      0  2142  205.  1.45      55.2  100.    168      7.35 #>  5 Marker3 A      767.      0 13178 2436.  3.18      73.2  189     396.     4.37 #>  6 Marker3 B       56.2     0   640   80.6 1.43      10.2   33.5    67.8    3.85 #>  7 Marker4 A      879.    105  3390  713.  0.811    371    620.   1256.     1.52 #>  8 Marker4 B      467.      0  2464  406.  0.869    232    361     594      2.33 #>  9 Marker5 A      571.      0  2757  582.  1.02     152.   518     731.     2.17 #> 10 Marker5 B      205.      0  4114  413.  2.02      17.2   76     248      6.86 #> # … with abbreviated variable names ¹​First_Quart., ²​Third_Quart., ³​Skewness plot_m1 <- sms[[2]]$Marker1 plot_m1"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"distr","dir":"Articles","previous_headings":"The complete workflow","what":"Markers distribution overview","title":"Guide to CombiROC package - Standard workflow","text":"Since target analysis identification marker combinations capable correctly classify samples, user first choose signal threshold define positivity given marker/combination. threshold : Positively select samples belonging case class (labelled “” “Class” column dataset), values must signal threshold. Negatively select control samples (labelled “B”), values must signal threshold. Usually threshold suggested guidelines kit used analysis (e.g. mean buffer signal + n standard deviations). However, good practice always check distribution signal intensity dataset. help user operation, markers_distribution() function implemented generating set discoverable objects. function takes input data long format ( data_long ), returns named list (assigned distr object). Please note required argument markers_distributions() function case_class, arguments defaults: specific warnings triggered command remembering users default threshold parameters place computation.","code":"distr <- markers_distribution(data_long, case_class = \"A\", y_lim = 0.0015,     x_lim = 3000, signalthr_prediction = TRUE, min_SE = 40, min_SP = 80,     boxplot_lim = 2000) #> Warning in markers_distribution(data_long, case_class = \"A\", y_lim = 0.0015, : #> The suggested signal threshold in $Plot_density is the threshold with the #> highest Youden index of the signal thresholds at which SE>=min_SE and #> SP>=min_SP. This is ONLY a suggestion. Please check if signal threshold is #> suggested by your analysis kit guidelines instead, and remember to check #> $Plot_density to better judge our suggested threshold by inspecting the 2 #> distributions."},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"the-distr-object","dir":"Articles","previous_headings":"The complete workflow","what":"The distr object","title":"Guide to CombiROC package - Standard workflow","text":"distr object contains following elements: Boxplot distribution single markers ROC curve markers curve’s coordinates density plot case control classes summary statistics. markers_distributions() function run, elements can plotted displayed individually. Let’s see one ","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"boxplot","dir":"Articles","previous_headings":"The complete workflow > The distr object","what":"Boxplot","title":"Guide to CombiROC package - Standard workflow","text":"Boxplot shows distribution marker values classes:","code":"distr$Boxplot"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"the-roc-curve-for-all-markers-and-its-coordinates","dir":"Articles","previous_headings":"The complete workflow > The distr object","what":"The ROC curve for all markers and its coordinates","title":"Guide to CombiROC package - Standard workflow","text":"ROC curve shows many real positive samples found positive (sensitivity, SE) many real negative samples found negative (specificity, SP) function signal threshold. Please note False Positive Rate (.e. 1 - specificity) plotted x-axis. SE SP refereed signal intensity threshold considering markers together; SE SP single marker/combination computed ’combi()` function discussed Combinatorial analyisis, sensitivity specificity paragraph.  Coord dataframe contains coordinates described “ROC” (threshold, SP SE) least minimun SE (min_SE) minimum SP (min_SP): two threshold set default min_SE = 0 min_SP = 0, can set manually specifying different values shown example. Youden index also computed: Youden’s J statistic capturing performance dichotomous diagnostic test, higher values better performance ( \\(J = SE + SP -1\\)).","code":"distr$ROC head(distr$Coord, n = 10) #>     threshold specificity sensitivity    Youden #> 240     319.5          80          65 0.4500000 #> 241     320.5          80          65 0.4515385 #> 242     322.0          80          65 0.4530769 #> 243     325.0          80          65 0.4546154 #> 244     327.5          81          65 0.4561538 #> 245     328.5          81          65 0.4576923 #> 246     329.5          81          64 0.4526923 #> 247     331.0          81          64 0.4426923 #> 248     332.5          81          64 0.4488462 #> 249     334.0          82          64 0.4503846"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"dens","dir":"Articles","previous_headings":"The complete workflow > The distr object","what":"The density plot and suggested signal threshold","title":"Guide to CombiROC package - Standard workflow","text":"Density_plot shows distribution signal intensity values classes. addition, function allows user set y_lim x_lim values provide better visualization. One important feature density plot calculates possible signal intensity threshold: case lack priori knowedge threshold user can set argument signalthr_prediction = TRUE markers_distribution() function. way function calculates “suggested signal threshold” corresponds signal threshold value associated highest Youden index (Coord), SE SP greater equal set minimal values (min_SE min_SP). threshold added “Density_plot” object dashed black line number. use Youden index allows pick threshold best SE/SP setting, recommended always inspect “Coord” choose appropriate signal threshold considering SP, SE Youden index. suggested signal threshold can used signalthr argument combi() function workflow.","code":"distr$Density_plot"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"the-density-summary","dir":"Articles","previous_headings":"The complete workflow > The distr object","what":"The density summary","title":"Guide to CombiROC package - Standard workflow","text":"Finally, Density_summary displays summary statistics density plot.","code":"distr$Density_summary #> # A tibble: 2 × 9 #>   Class `# observations`   Min   Max Median  Mean `1st Q` `3rd Q`    SD #>   <chr>            <int> <int> <int>  <dbl> <dbl>   <dbl>   <dbl> <dbl> #> 1 A                  200     0 13178    461  814.    233.     825 1427. #> 2 B                  650     0  4114    106  206.     38      266  318."},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"combi","dir":"Articles","previous_headings":"The complete workflow","what":"Combinatorial analysis, sensitivity and specificity","title":"Guide to CombiROC package - Standard workflow","text":"combi() function works dataset initially loaded. computes marker combinations counts corresponding positive samples class (thresholds selected). sample, considered positive given combination, must value higher given signal threshold (signalthr) least given number markers composing combination (combithr). mentioned , signalthr set depending guidelines characteristics methodology used analysis accurate inspection signal intensity distribution. case lack specific guidelines, one set value signalthr suggested distr$Density_plot described previous section. vignette signalthr set 450 combithr set 1. setting 450 (instead 328.5 suggested distr$Density_plot) order reproduce results reported Mazzara et. al 2017 (original CombiROC paper) Bombaci & Rossi 2019 well tutorial web app default thresholds. combithr, instead, set exclusively depending needed stringency: 1 less stringent common choice (meaning least one marker combination needs reach threshold). combinations computed, function calculates: Sensitivity (SE) specificity (SP) combination class; number markers composing combination (n_markerrs). SE calculated dividing number detected positive samples case class total sample case class (% positive “” samples). SP control class (“B”) calculated subtracting percentage positive samples control class total sample control class 100 (100 - % positive “B” samples). NB: max_length possible set maximum number markers allowed compose combination (example computed combinations composed 3 markers instead 5). parameter can useful case huge number markers (e.g. >20) order drastically reduce number possible combinations, making calculation computationally manageable removing longest ones (less important diagnostic point view). obtained tab object dataframe combinations obtained chosen parameters, obtained value SE, SP number markers.","code":"tab <- combi(data, signalthr = 450, combithr = 1, case_class = \"A\",     max_length = 3) head(tab, n = 20) #>                                Markers #Positives A #Positives B   SE       SP #> Marker1                        Marker1           26            6 65.0 95.38462 #> Marker2                        Marker2           19            2 47.5 98.46154 #> Marker3                        Marker3            8            1 20.0 99.23077 #> Marker4                        Marker4           26           48 65.0 63.07692 #> Marker5                        Marker5           23           15 57.5 88.46154 #> Combination 1          Marker1-Marker2           29            6 72.5 95.38462 #> Combination 2          Marker1-Marker3           29            6 72.5 95.38462 #> Combination 3          Marker1-Marker4           31           52 77.5 60.00000 #> Combination 4          Marker1-Marker5           30           21 75.0 83.84615 #> Combination 5          Marker2-Marker3           21            2 52.5 98.46154 #> Combination 6          Marker2-Marker4           32           50 80.0 61.53846 #> Combination 7          Marker2-Marker5           28           17 70.0 86.92308 #> Combination 8          Marker3-Marker4           29           49 72.5 62.30769 #> Combination 9          Marker3-Marker5           27           16 67.5 87.69231 #> Combination 10         Marker4-Marker5           31           53 77.5 59.23077 #> Combination 11 Marker1-Marker2-Marker3           31            6 77.5 95.38462 #> Combination 12 Marker1-Marker2-Marker4           34           52 85.0 60.00000 #> Combination 13 Marker1-Marker2-Marker5           33           21 82.5 83.84615 #> Combination 14 Marker1-Marker3-Marker4           34           52 85.0 60.00000 #> Combination 15 Marker1-Marker3-Marker5           33           21 82.5 83.84615 #>                n_markers #> Marker1                1 #> Marker2                1 #> Marker3                1 #> Marker4                1 #> Marker5                1 #> Combination 1          2 #> Combination 2          2 #> Combination 3          2 #> Combination 4          2 #> Combination 5          2 #> Combination 6          2 #> Combination 7          2 #> Combination 8          2 #> Combination 9          2 #> Combination 10         2 #> Combination 11         3 #> Combination 12         3 #> Combination 13         3 #> Combination 14         3 #> Combination 15         3"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"selection-of-combinations","dir":"Articles","previous_headings":"The complete workflow","what":"Selection of combinations","title":"Guide to CombiROC package - Standard workflow","text":"markers combinations can now ranked selected. specifying case class (“” case), function ranked_combs() ranks combinations Youden index order show combinations highest SE (cases) SP (controls) top, facilitating user selection best ones. , Youden index (J) calculated way: \\[ J = SE+SP-1 \\] user can also set (mandatory) minimal value SE /SP combination must selected, .e. considered “gold” combinations. possibility overview single markers combinations distributed SE - SP ballpark plot bubble chart code suggested Additional Tips&Tricks section (see: Bubble plot combinations) starting tab dataframe obtained combi() function (see ). bigger bubble, markers combination: looking size distribution bubbles across SE SP values useful anticipate effective combinations ranking. Setting cutoffs (.e. SE = 0 SP = 0), single markers combinations (bubbles) considered “gold” combinations ranked next passage. example minimal values SE SP set, respectively, 40 80, order reproduce gold combinations selection reported Mazzara et. al 2017. obtained values combinations, ranked according Youden index, stored “ranked markers” rmks object containing table dataframe bubble_chart plot can accessed individually $ operator. mentioned, rmks object also slot bubble_chart plot, can recalled usual $ operator. plot discriminates combinations passing SE SP cutoffs set ranked_combs() (blue bubbles) “gold” combinations passing (yellow bubbles).","code":"rmks <- ranked_combs(tab, min_SE = 40, min_SP = 80) rmks$table #>                                Markers #Positives A #Positives B   SE       SP #> Combination 11 Marker1-Marker2-Marker3           31            6 77.5 95.38462 #> Combination 1          Marker1-Marker2           29            6 72.5 95.38462 #> Combination 2          Marker1-Marker3           29            6 72.5 95.38462 #> Combination 13 Marker1-Marker2-Marker5           33           21 82.5 83.84615 #> Combination 15 Marker1-Marker3-Marker5           33           21 82.5 83.84615 #> Combination 18 Marker2-Marker3-Marker5           30           17 75.0 86.92308 #> Marker1                        Marker1           26            6 65.0 95.38462 #> Combination 4          Marker1-Marker5           30           21 75.0 83.84615 #> Combination 7          Marker2-Marker5           28           17 70.0 86.92308 #> Combination 9          Marker3-Marker5           27           16 67.5 87.69231 #> Combination 5          Marker2-Marker3           21            2 52.5 98.46154 #> Marker2                        Marker2           19            2 47.5 98.46154 #> Marker5                        Marker5           23           15 57.5 88.46154 #>                n_markers    Youden #> Combination 11         3 0.7288462 #> Combination 1          2 0.6788462 #> Combination 2          2 0.6788462 #> Combination 13         3 0.6634615 #> Combination 15         3 0.6634615 #> Combination 18         3 0.6192308 #> Marker1                1 0.6038462 #> Combination 4          2 0.5884615 #> Combination 7          2 0.5692308 #> Combination 9          2 0.5519231 #> Combination 5          2 0.5096154 #> Marker2                1 0.4596154 #> Marker5                1 0.4596154 rmks$bubble_chart"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"roc-curves","dir":"Articles","previous_headings":"The complete workflow","what":"ROC curves","title":"Guide to CombiROC package - Standard workflow","text":"allow objective comparison combinations, function roc_reports() applies Generalised Linear Model (stats::glm() argument family= binomial) gold combination. resulting predictions used compute ROC curves (function pROC::roc()) corresponding metrics returned function named list object (case called reports). function roc_reports() requires input: data object ( data ) obtained load_data(); table combinations corresponding positive samples counts ( tab ), obtained combi(). addition, user specify class case, single markers /combinations /wants displayed specific function’s arguments. example single marker ( Marker1 ) two combinations (combinations number 11 15 ) choosen. obtained reports object contains 3 items can accessed using $ operator: Plot: ggplot object ROC curves selected combinations; Metrics: dataframe metrics roc curves (AUC, opt. cutoff, etc …); Models: list models computed used classify samples (equation selected combination).","code":"reports <- roc_reports(data, markers_table = tab, case_class = \"A\",     single_markers = c(\"Marker1\"), selected_combinations = c(11,         15)) reports$Plot reports$Metrics #>                  AUC   SE    SP CutOff   ACC  TN TP FN FP   NPV   PPV #> Marker1        0.910 0.90 0.808  0.219 0.829 105 36  4 25 0.963 0.590 #> Combination 11 0.942 0.95 0.869  0.216 0.888 113 38  2 17 0.983 0.691 #> Combination 15 0.935 0.90 0.854  0.248 0.865 111 36  4 19 0.965 0.655 reports$Models #> $Marker1 #>  #> Call:  glm(formula = fla, family = \"binomial\", data = data) #>  #> Coefficients: #>      (Intercept)  log(Marker1 + 1)   #>          -13.775             2.246   #>  #> Degrees of Freedom: 169 Total (i.e. Null);  168 Residual #> Null Deviance:       185.5  #> Residual Deviance: 101.7     AIC: 105.7 #>  #> $`Combination 11` #>  #> Call:  glm(formula = fla, family = \"binomial\", data = data) #>  #> Coefficients: #>      (Intercept)  log(Marker1 + 1)  log(Marker2 + 1)  log(Marker3 + 1)   #>         -17.0128            1.5378            0.9176            0.5706   #>  #> Degrees of Freedom: 169 Total (i.e. Null);  166 Residual #> Null Deviance:       185.5  #> Residual Deviance: 87.49     AIC: 95.49 #>  #> $`Combination 15` #>  #> Call:  glm(formula = fla, family = \"binomial\", data = data) #>  #> Coefficients: #>      (Intercept)  log(Marker1 + 1)  log(Marker3 + 1)  log(Marker5 + 1)   #>         -16.0554            1.9595            0.6032            0.2805   #>  #> Degrees of Freedom: 169 Total (i.e. Null);  166 Residual #> Null Deviance:       185.5  #> Residual Deviance: 87.95     AIC: 95.95"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"hood","dir":"Articles","previous_headings":"The complete workflow","what":"Under the hood","title":"Guide to CombiROC package - Standard workflow","text":"bit deeper discussion interpret results, section focused single specific combination dataset seen far: “Combination 11”, combining Marker1, Marker2 Marker3. combination optimal cutoff equal 0.216 (see CutOff column reports$Metrics). following regression equation used Generalized Linear Model (glm) function compute predictions: \\[ f(x)=β_0+β_1x_1+β_2x_2+ β_3x_3 +...+β_nx_n \\] \\(β_n\\) coefficients (\\(β_0\\) intercept) determined model \\(x_n\\) variables. , predicted probabilities calculated sigmoid function: \\[ p(x) =  \\frac{\\mathrm{1} }{\\mathrm{1} + e^{-f(x)} }   \\] accordance , predictions “Combination 11” computed using coefficients displayed reports$Models (see previous paragraph), combination’s prediction equation : \\[ f(x)=    -17.0128  +  1.5378 *log(Marker1 + 1)  +  0.9176 *log(Marker2 + 1) + 0.5706* log(Marker3 + 1) \\] predict method Generalized Linear Model, predictions produced scale additive predictors. Predictions (\\(f(x)\\) values) Combination 11 can visualized using commmand glm::predict argument type = \"link\": Prediction probabilities (\\(p(x)\\) values, .e. predictions scale response) Combination 11 can instead visualized using argument type = \"response\": Finally, comparison prediction probability optimal cutoff (0.216, see CutOff column Classification 11 reports$Metrics) determines classification sample following rule: \\[ C(x) = \\begin{cases}       1 & {p}(x) > opt. cutoff \\\\       0 & {p}(x) \\leq opt.cutoff \\end{cases} \\] Specifically, “Combination 11”: Samples \\(p(x)\\) higher 0.216 classified “positives” (1). Samples \\(p(x)\\) lower equal 0.216 classified “negatives” (0). Thus, using 0.216 cutoff, Combination 11 able classify samples dataset SE equal 95.0%, SP equal 86.9%, accuracy equal 88.8% (see ROC curves, reports$Metrics).","code":"head(predict(reports$Models$`Combination 11`, type = \"link\"))  # link = f(x) #>            1            2            3            4            5            6  #>  0.166224681 -0.008125528  2.192603482  1.077910194  3.816098810  0.593971602 head(predict(reports$Models$`Combination 11`, type = \"response\"))  # response = p(x) #>         1         2         3         4         5         6  #> 0.5414607 0.4979686 0.8995833 0.7460983 0.9784606 0.6442759"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"classification-of-new-samples","dir":"Articles","previous_headings":"","what":"Classification of new samples","title":"Guide to CombiROC package - Standard workflow","text":"new feature CombiROC package (present CombiROC tool Shiny app), offers possibility exploit models obtained roc_reports() selected marker/combination (assigned reports$Models) directly classify new samples labelled, .e. assigned case control classes. unclassified data set must similar data set used previous combinatorial analysis ( .e. nature markers, obviously without ‘Class’ column). load datasets unclassified samples labelled_data load_data() function must set FALSE. way function loads kind files performs format checks shown , exception Class column present unclassified datasets thus checked. purely demonstrative purposes, following example “synthetic” unclassified data set (‘data/unclassified_proteomic_data.csv’) used: obtained randomly picking 20 samples already classified data set (data). loaded unclassified sample assigned unc_data object. Please note unclassified data set lacks “Class” column Patient.ID column actually allows identification class sample names used workflow labeling purposes check prediction outcomes (“” prefix identifies healthy/normal subjects absence prefix identifies affected/abnormal subjects). dataset included CombiROC package unclassified demo dataset, can directly called typing demo_unclassified_data. prediction class can achieved combi_score(): setting classify=TRUE, function applies models previously calculated classified data set working training dataset, unclassified dataset classifies samples accordingly prediction probability optimal cutoff shown hood section. combi_score() function takes inputs: unclassified data set containing new samples classified (unc_data); list models reports$Models previously computed roc_reports() (reports$Models); list metrics previously computed roc_reports() (reports$Metrics). user can set labels predicted class (setting Positive_class Negative_class), otherwise 1 positive samples 0 negative samples default (see rule shown end Results explanation section). setting Positive_class = \"affected\" Negative_class = \"healthy\" function returns data.frame (cl_data example ), whose columns contain predicted class sample according models used (originally reports$Models); still using Marker1, Combination 11 Combination 15. can observed comparing outcome dataframe tag samples’ names, single marker Marker1 100% efficient correctly predicting class (see mismatch second row, normal sample “AIH126” classified abnormal Marker1); instead, Combination 11 15 correctly assign right class. Thus, column prediction dataframe contains prediction outcome given model , along samples names (index column), can accessed $ operator usual: addition, setting classify=FALSE, combi_score() can exploited easily retrieve predicted probabilities combination (p(x) .k.‘combi score’) unclassified datasets.","code":"unc_data <- load_data(data = \"./data/demo_unclassified_data.csv\",     sep = \",\", labelled_data = F) head(demo_unclassified_data) #>   Patient.ID Marker1 Marker2 Marker3 Marker4 Marker5 #> 1      AIH33    1964     875     404    1883    1021 #> 2  no AIH126     381     303       4     266     376 #> 3      AIH12     261     153     528     449     237 #> 4  no AIH112     144     155      25     600       0 #> 5   no AIH41       0     193      50     382     135 #> 6   no AIH38      46      51      24     342      74 unc_data <- demo_unclassified_data cl_data <- combi_score(unc_data, Models = reports$Models, Metrics = reports$Metrics,     Positive_class = \"abnormal\", Negative_class = \"normal\", classify = TRUE) cl_data #>           ID  Marker1 Combination 11 Combination 15 #> 1      AIH33 abnormal       abnormal       abnormal #> 2  no AIH126 abnormal         normal         normal #> 3      AIH12 abnormal       abnormal       abnormal #> 4  no AIH112   normal         normal         normal #> 5   no AIH41   normal         normal         normal #> 6   no AIH38   normal         normal         normal #> 7       AIH4 abnormal       abnormal       abnormal #> 8   no AIH32   normal         normal         normal #> 9      AIH20 abnormal       abnormal       abnormal #> 10  no AIH13   normal         normal         normal #> 11  no AIH11   normal         normal         normal #> 12 no AIH114   normal         normal         normal #> 13 no AIH121   normal         normal         normal #> 14     AIH17 abnormal       abnormal       abnormal #> 15     AIH14 abnormal       abnormal       abnormal #> 16 no AIH106   normal         normal         normal #> 17  no AIH67   normal         normal         normal #> 18      AIH9 abnormal       abnormal       abnormal #> 19  no AIH74   normal         normal         normal #> 20     AIH16 abnormal       abnormal       abnormal cl_data$index #> NULL cl_data$`Combination 11` #>  [1] \"abnormal\" \"normal\"   \"abnormal\" \"normal\"   \"normal\"   \"normal\"   #>  [7] \"abnormal\" \"normal\"   \"abnormal\" \"normal\"   \"normal\"   \"normal\"   #> [13] \"normal\"   \"abnormal\" \"abnormal\" \"normal\"   \"normal\"   \"abnormal\" #> [19] \"normal\"   \"abnormal\" unc_data <- demo_unclassified_data cs_data <- combi_score(unc_data, Models = reports$Models, Metrics = reports$Metrics,     Positive_class = \"abnormal\", Negative_class = \"normal\", classify = FALSE) cs_data #>           ID      Marker1 Combination 11 Combination 15 #> 1      AIH33 9.629030e-01   9.864991e-01   9.875017e-01 #> 2  no AIH126 3.960193e-01   1.537155e-01   1.455281e-01 #> 3      AIH12 2.194324e-01   4.378589e-01   5.432861e-01 #> 4  no AIH112 6.928584e-02   5.381403e-02   1.289242e-02 #> 5   no AIH41 1.041071e-06   4.840652e-05   4.525821e-06 #> 6   no AIH38 5.893585e-03   3.576392e-03   4.687486e-03 #> 7       AIH4 6.007967e-01   7.460983e-01   6.533166e-01 #> 8   no AIH32 2.799238e-02   9.912527e-03   1.635574e-02 #> 9      AIH20 4.661915e-01   5.588462e-01   6.067799e-01 #> 10  no AIH13 1.041071e-06   4.087306e-08   2.534146e-07 #> 11  no AIH11 1.041071e-06   3.153259e-06   3.309952e-07 #> 12 no AIH114 1.664621e-01   8.160105e-02   9.545823e-02 #> 13 no AIH121 2.799238e-02   9.247089e-02   3.612256e-02 #> 14     AIH17 9.985976e-01   9.999299e-01   9.999348e-01 #> 15     AIH14 5.455001e-01   6.805223e-01   7.390291e-01 #> 16 no AIH106 4.001370e-02   1.099469e-02   1.870649e-02 #> 17  no AIH67 1.616676e-02   6.082032e-04   1.604146e-03 #> 18      AIH9 5.869070e-01   8.034081e-01   8.027712e-01 #> 19  no AIH74 1.041071e-06   1.425832e-06   1.064701e-07 #> 20     AIH16 9.973708e-01   9.999000e-01   9.998317e-01"},{"path":[]},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"retrieving-composition-of-combinations","dir":"Articles","previous_headings":"Ancillary functions","what":"Retrieving composition of combinations","title":"Guide to CombiROC package - Standard workflow","text":"show_markers() returns data frame containing composition combination interest. requires input one combinations (numbers), table combinations corresponding positive samples counts (“tab”, obtained combi()).","code":"show_markers(selected_combinations = c(11, 15), markers_table = tab) #>      Combination       Composing_markers #> 1 Combination 11 Marker1-Marker2-Marker3 #> 2 Combination 15 Marker1-Marker3-Marker5"},{"path":"https://ingmbioinfo.github.io/combiroc/articles/combiroc_standard.html","id":"retrieving-combinations-containing-markers-of-interest","dir":"Articles","previous_headings":"Ancillary functions","what":"Retrieving combinations containing markers of interest","title":"Guide to CombiROC package - Standard workflow","text":"combs_with() returns combinations containing markers interest. requires input one single marker, table combinations corresponding positive samples counts (“tab”, obtained combi()). list combinations containing markers assigned “combs_list” object. Back top doc Go Signature refining tutorial Session Info vignette:","code":"combs_list <- combs_with(markers = c(\"Marker1\", \"Marker3\"), markers_table = tab) #> The combinations in which you can find ALL the selected markers have been computed combs_list #> [1]  2 11 14 15 sessionInfo() #> R version 4.2.1 (2022-06-23 ucrt) #> Platform: x86_64-w64-mingw32/x64 (64-bit) #> Running under: Windows 10 x64 (build 22000) #>  #> Matrix products: default #>  #> locale: #> [1] LC_COLLATE=English_United Kingdom.utf8  #> [2] LC_CTYPE=English_United Kingdom.utf8    #> [3] LC_MONETARY=English_United Kingdom.utf8 #> [4] LC_NUMERIC=C                            #> [5] LC_TIME=English_United Kingdom.utf8     #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] combiroc_0.2.4 testthat_3.1.7 devtools_2.4.5 usethis_2.1.6  knitr_1.42     #> [6] httr_1.4.5     #>  #> loaded via a namespace (and not attached): #>   [1] backports_1.4.1        systemfonts_1.0.4      plyr_1.8.8             #>   [4] igraph_1.4.1           lazyeval_0.2.2         sp_1.6-0               #>   [7] splines_4.2.1          listenv_0.9.0          scattermore_0.8        #>  [10] ggplot2_3.4.2          digest_0.6.29          htmltools_0.5.5        #>  [13] fansi_1.0.3            magrittr_2.0.3         memoise_2.0.1          #>  [16] tensor_1.5             cluster_2.1.3          ROCR_1.0-11            #>  [19] remotes_2.4.2          globals_0.16.2         matrixStats_0.63.0     #>  [22] pkgdown_2.0.7          spatstat.sparse_3.0-1  prettyunits_1.1.1      #>  [25] colorspace_2.0-3       rappdirs_0.3.3         ggrepel_0.9.3          #>  [28] textshaping_0.3.6      xfun_0.37              dplyr_1.0.10           #>  [31] callr_3.7.3            crayon_1.5.2           jsonlite_1.8.4         #>  [34] progressr_0.13.0       spatstat.data_3.0-1    survival_3.3-1         #>  [37] zoo_1.8-11             glue_1.6.2             polyclip_1.10-4        #>  [40] gtable_0.3.1           leiden_0.4.3           car_3.1-1              #>  [43] pkgbuild_1.4.0         future.apply_1.10.0    abind_1.4-5            #>  [46] scales_1.2.1           pheatmap_1.0.12        DBI_1.1.3              #>  [49] rstatix_0.7.2          spatstat.random_3.1-4  miniUI_0.1.1.1         #>  [52] Rcpp_1.0.9             viridisLite_0.4.1      xtable_1.8-4           #>  [55] reticulate_1.28        bit_4.0.4              profvis_0.3.7          #>  [58] htmlwidgets_1.6.1      RColorBrewer_1.1-3     ellipsis_0.3.2         #>  [61] Seurat_4.3.0           ica_1.0-3              farver_2.1.1           #>  [64] urlchecker_1.0.1       pkgconfig_2.0.3        uwot_0.1.14            #>  [67] deldir_1.0-6           sass_0.4.5             utf8_1.2.2             #>  [70] labeling_0.4.2         tidyselect_1.2.0       rlang_1.1.0            #>  [73] reshape2_1.4.4         later_1.3.0            munsell_0.5.0          #>  [76] tools_4.2.1            cachem_1.0.7           cli_3.4.1              #>  [79] generics_0.1.3         moments_0.14.1         broom_1.0.4            #>  [82] ggridges_0.5.4         evaluate_0.20          stringr_1.5.0          #>  [85] fastmap_1.1.1          goftest_1.2-3          yaml_2.3.7             #>  [88] ragg_1.2.5             bit64_4.0.5            processx_3.7.0         #>  [91] fs_1.5.2               fitdistrplus_1.1-8     SeuratData_0.2.2       #>  [94] purrr_1.0.1            RANN_2.6.1             nlme_3.1-157           #>  [97] pbapply_1.7-0          future_1.32.0          mime_0.12              #> [100] formatR_1.14           brio_1.1.3             hdf5r_1.3.8            #> [103] compiler_4.2.1         rstudioapi_0.14        plotly_4.10.1          #> [106] png_0.1-8              ggsignif_0.6.4         spatstat.utils_3.0-2   #> [109] tibble_3.1.8           bslib_0.4.2            stringi_1.7.8          #> [112] highr_0.10             ps_1.7.1               desc_1.4.2             #> [115] lattice_0.20-45        Matrix_1.5-3           SeuratDisk_0.0.0.9020  #> [118] vctrs_0.6.0            pillar_1.8.1           lifecycle_1.0.3        #> [121] spatstat.geom_3.1-0    lmtest_0.9-40          jquerylib_0.1.4        #> [124] RcppAnnoy_0.0.20       data.table_1.14.8      cowplot_1.1.1          #> [127] irlba_2.3.5.1          httpuv_1.6.6           patchwork_1.1.2        #> [130] R6_2.5.1               promises_1.2.0.1       KernSmooth_2.23-20     #> [133] gridExtra_2.3          parallelly_1.34.0      sessioninfo_1.2.2      #> [136] codetools_0.2-18       MASS_7.3-57            gtools_3.9.4           #> [139] pkgload_1.3.2          rprojroot_2.0.3        withr_2.5.0            #> [142] SeuratObject_4.1.3     sctransform_0.3.5      parallel_4.2.1         #> [145] grid_4.2.1             tidyr_1.3.0            rmarkdown_2.20         #> [148] carData_3.0-5          Rtsne_0.16             ggpubr_0.6.0           #> [151] spatstat.explore_3.1-0 pROC_1.18.0            shiny_1.7.4"},{"path":"https://ingmbioinfo.github.io/combiroc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ivan Ferrari. Author. Riccardo L. Rossi. Author, maintainer. Saveria Mazzara. Author. Mauro Bombaci. Conceptor, contributor, data contributor.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ferrari , Rossi R, Mazzara S (2023). combiroc: Selection Ranking Omics Biomarkers Combinations Made Easy. https://ingmbioinfo.github.io/combiroc, https://github.com/ingmbioinfo/combiroc, https://ingmbioinfo.github.io/combiroc/.","code":"@Manual{,   title = {combiroc: Selection and Ranking of Omics Biomarkers Combinations Made Easy},   author = {Ivan Ferrari and Riccardo L. Rossi and Saveria Mazzara},   year = {2023},   note = {https://ingmbioinfo.github.io/combiroc, https://github.com/ingmbioinfo/combiroc, https://ingmbioinfo.github.io/combiroc/}, }"},{"path":"https://ingmbioinfo.github.io/combiroc/index.html","id":"combiroc","dir":"","previous_headings":"","what":"Selection and Ranking of Omics Biomarkers Combinations Made Easy","title":"Selection and Ranking of Omics Biomarkers Combinations Made Easy","text":"CombiROC totally new music multi-markers analysis: R package efficient easy combinatorial selection biomarkers sensitivity/specificity-driven prioritization features. development version CombiROC package (combiroc), code repo work progress uploaded “-” warranties implied. Improvements new features added regular basis, please check github page new features releases. CombiROC approach first released Shiny Application limited features. version still available combiroc.eu, limited features well low computational power maintained. need cite method web-app please refer Mazzara et al. Scientific Reports 2017 Bombaci & Rossi, Methods Mol Biol 2019. full capabilities, new improved features customized analyses suggest install combiroc package, either release CRAN development version repo. using combiroc package research, please cite also bioRxiv preprint: Ferrari et al. Combinatorial selection biomarkers optimize gene signatures diagnostics single cell applications. bioRxiv 2022.01.17.476603; doi: https://doi.org/10.1101/2022.01.17.476603","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/index.html","id":"combiroc-biorxiv-preprint-supplementary-material","dir":"","previous_headings":"","what":"Combiroc bioRxiv preprint Supplementary material","title":"Selection and Ranking of Omics Biomarkers Combinations Made Easy","text":"bioRxiv preprint’s Supplementary Material 1 2 can accessed : Supplementary Material 1 (Standard vignette): Standard worlkflow. Supplementary Material 2 (Additional vignette): scRNAseq workflow.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Selection and Ranking of Omics Biomarkers Combinations Made Easy","text":"","code":"# You can install combiroc pulling it from CRAN: install.packages(\"combiroc\")"},{"path":"https://ingmbioinfo.github.io/combiroc/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Selection and Ranking of Omics Biomarkers Combinations Made Easy","text":"","code":"# To install the most recent development version from this repository install \"remotes\" first: install.packages(\"remotes\") library(remotes) # remotes is a lightweight replacement of install functions from devtools # if you already have devtools, you can also use devtools::install_github()   # Then install the development version of CombiROC: remotes::install_github(\"ingmbioinfo/combiroc\",                          dependencies = TRUE, build_vignettes = TRUE)"},{"path":"https://ingmbioinfo.github.io/combiroc/index.html","id":"full-documentation---tutorial","dir":"","previous_headings":"","what":"Full Documentation - Tutorial","title":"Selection and Ranking of Omics Biomarkers Combinations Made Easy","text":"Full documentation package’s vignette. can also find rendered version vignette combiroc-package website created pkgdown.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/index.html","id":"quick-start-example","dir":"","previous_headings":"","what":"Quick start example","title":"Selection and Ranking of Omics Biomarkers Combinations Made Easy","text":"","code":"library(combiroc)  # load the preformatted demo dataset # (you can load a dataset of yours using load_data() function: see full docs) data <- demo_data  # shape it in long format (prone to plotting) data_long <- combiroc_long(data)  # study the distribution of you markers' signal # arguments values to be adjusted according to  data distr <- markers_distribution(data_long, case_class = 'A',                                y_lim = 0.0015, x_lim = 3000,                                signalthr_prediction = TRUE,                                min_SE = 40, min_SP = 80,                                boxplot_lim = 2000)  # explore the distr object: boxplot of signals distr$Boxplot  # explore the distr object: densities of classes with signal threshold (signalthr) distr$Density_plot distr$Density_summary  # explore the distr object: ROC and its coordinates distr$ROC head(distr$Coord, n=10)  # combinatorial analysis tab <- combi(data, signalthr = 407, combithr = 1)  # SE & SP computation mks <- se_sp(data, tab)  # ranked combinations rmks <- ranked_combs(data, mks, case_class = 'A', min_SE = 40, min_SP = 80)  # check ranked combinations rmks$table rmks$bubble_chart  # results report for specific markers/combinations reports <-roc_reports(data, markers_table = tab, case_class = 'A',                       single_markers =c('Marker1'),                        selected_combinations = c(11,15))  # results outputs reports$Plot reports$Metrics"},{"path":"https://ingmbioinfo.github.io/combiroc/index.html","id":"issues---bugs","dir":"","previous_headings":"","what":"Issues - Bugs","title":"Selection and Ranking of Omics Biomarkers Combinations Made Easy","text":"find bug, share ideas improvement, feel free start issue. roadmap also listen!","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Selection and Ranking of Omics Biomarkers Combinations Made Easy","text":"Package authors maintainers: Ivan Ferrari & Riccardo L. Rossi Original code Shiny App: Saveria Mazzara Initial idea & conception: Mauro Bombaci","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/index.html","id":"trivia","dir":"","previous_headings":"","what":"Trivia","title":"Selection and Ranking of Omics Biomarkers Combinations Made Easy","text":"happy finally chance develop combiroc package felt “rock”: combiroc hexagon sticker logo homage Eddie Van Halen left us 2020, “Frankenstrat”, iconic guitar.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combi.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute combinations. — combi","title":"Compute combinations. — combi","text":"function computes marker combinations counts corresponding positive samples class (thresholds selected).","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute combinations. — combi","text":"","code":"combi(data, signalthr = 0, combithr = 1, max_length = NULL, case_class)"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute combinations. — combi","text":"data data.frame returned load_data(). signalthr numeric specifies value marker expression considered positive given sample. Since target analysis identification marker combinations capable correctly classify samples, user choose signalthr : Positively selects samples belonging case class, must signalthr. Negatively selects control samples, must signalthr. combithr numeric specifies necessary number positively expressed markers (>= signalthr), given combination, cosinder combination positivelly expressed sample. max_length integer specifies max combination length allowed case_class character specifies two classes dataset case class","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute combinations. — combi","text":"data.frame containing many samples class \"positive\" combination, sensitivity specificity.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute combinations. — combi","text":"function counts many samples 'positive' combination. sample, considered positive given combination, must value higher given signal threshold (signalthr) least given number markers composing combination (combithr).","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute combinations. — combi","text":"","code":"demo_data # combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) #>     Patient.ID Class Marker1 Marker2 Marker3 Marker4 Marker5 #> 1         AIH1     A     438     187     197     298     139 #> 2         AIH2     A     345     293     134     523     335 #> 3         AIH3     A     903     392     300    1253       0 #> 4         AIH4     A     552     267     296     666      22 #> 5         AIH5     A    1451     760     498     884     684 #> 6         AIH6     A     497     260     175     640     572 #> 7         AIH7     A    3878    2858     510    1518     348 #> 8         AIH8     A     740     368     266    1391     647 #> 9         AIH9     A     538     412     282    1071     474 #> 10       AIH10     A    1194    1065     442    1530     816 #> 11       AIH11     A     988     817     394    1626    1028 #> 12       AIH12     A     261     153     528     449     237 #> 13       AIH13     A     312     181      58     408     661 #> 14       AIH14     A     499     302     181    1088     568 #> 15       AIH15     A     998     431      75     397     519 #> 16       AIH16     A    6485    3704    8834    2595    1570 #> 17       AIH17     A    8584    2662   13178    3390    2757 #> 18       AIH18     A    1696    1029     369     468    2422 #> 19       AIH19     A     774     505     251    1014     517 #> 20       AIH20     A     433     330      92    1266     743 #> 21       AIH21     A    1207    1501      57    1847     741 #> 22       AIH22     A     225     849     125     330     168 #> 23       AIH23     A    1327     485     366     563     878 #> 24       AIH24     A      76     582     601     115      73 #> 25       AIH25     A     586     256      53     710      74 #> 26       AIH26     A     263     196     124     798      95 #> 27       AIH27     A     146     568      64     125      92 #> 28       AIH28     A     537     620      82     350      53 #> 29       AIH29     A      52      41     588     346      50 #> 30       AIH30     A     882     138      47     601      85 #> 31       AIH31     A     462     304      81     378     208 #> 32       AIH32     A     372     149       0     460     156 #> 33       AIH33     A    1964     875     404    1883    1021 #> 34       AIH34     A    2809    1633     451    1042     608 #> 35       AIH35     A     994     505     303    1699     783 #> 36       AIH36     A     361     185     115     466     520 #> 37       AIH37     A     275     384      45     329     466 #> 38       AIH38     A     947     622      16     236     728 #> 39       AIH39     A     405     133      32     284     358 #> 40       AIH40     A     922     689      68     105     643 #> 41     no AIH1     B     510      28       0     332       0 #> 42     no AIH2     B     205       0       0     332       0 #> 43     no AIH3     B      44       0       0     332      21 #> 44     no AIH4     B      49      38       7     178      48 #> 45     no AIH5     B      26      33       6     131      32 #> 46     no AIH6     B      24      26       8     206      28 #> 47     no AIH7     B     243     373     109     631     477 #> 48     no AIH8     B      99     111      51     193     197 #> 49     no AIH9     B      85      55      71     811     321 #> 50    no AIH10     B     146     108      46     173     171 #> 51    no AIH11     B       0     113       0       0      56 #> 52    no AIH12     B     151       0       0     360       0 #> 53    no AIH13     B       0       0       0      15      21 #> 54    no AIH14     B       0       5       0     147      53 #> 55    no AIH15     B     118      69      13     748      97 #> 56    no AIH16     B      31      29       7     223      34 #> 57    no AIH17     B      72      53      12     376      85 #> 58    no AIH18     B     137     151      20     662     131 #> 59    no AIH19     B      78      58       6     368      49 #> 60    no AIH20     B     193      14      90     703     177 #> 61    no AIH21     B       0       0       0       0       0 #> 62    no AIH22     B       0      20       0      66      31 #> 63    no AIH23     B     351      70       0     478       7 #> 64    no AIH24     B     171     127      74    1202     224 #> 65    no AIH25     B      77      75      26     316      61 #> 66    no AIH26     B      51      45       2     286      44 #> 67    no AIH27     B      64      55      17     333      46 #> 68    no AIH28     B     150     185      42     975     252 #> 69    no AIH29     B     149     140      52    1087     209 #> 70    no AIH30     B     147     103      19     794      98 #> 71    no AIH31     B      86      89      44     427     144 #> 72    no AIH32     B      94      57      18     581      88 #> 73    no AIH33     B      56      41      23     244      49 #> 74    no AIH34     B      10      15       2     121      26 #> 75    no AIH35     B      46      22       0      69      24 #> 76    no AIH36     B      84      65       4     278      77 #> 77    no AIH37     B      42      44      19     306      86 #> 78    no AIH38     B      46      51      24     342      74 #> 79    no AIH39     B      73      39       9     358      41 #> 80    no AIH40     B      83     131      27    1012     124 #> 81    no AIH41     B       0     193      50     382     135 #> 82    no AIH42     B      41      94      64     464     141 #> 83    no AIH43     B       0      77      46     398      85 #> 84    no AIH44     B      98     152      91     469     301 #> 85    no AIH45     B      78      85      10     407       0 #> 86    no AIH46     B      21      16       0     536      16 #> 87    no AIH47     B      44      34      74     266      21 #> 88    no AIH48     B     144      76      63     252       0 #> 89    no AIH49     B     162     249     101     134       0 #> 90    no AIH50     B     100     169      33    1430       0 #> 91    no AIH51     B      52     159      57     681     417 #> 92    no AIH52     B      97      86      64     591      33 #> 93    no AIH53     B      73      80      20     157      51 #> 94    no AIH54     B     162     117      25     749       0 #> 95    no AIH55     B     100     220      37     729      41 #> 96    no AIH56     B     227     174      26     290       0 #> 97    no AIH57     B     136     165      23     315      40 #> 98    no AIH58     B      96     213      47     682     780 #> 99    no AIH59     B      69      59      21     629     245 #> 100   no AIH60     B      74      70      67     138     215 #> 101   no AIH61     B     129     118      44     117     769 #> 102   no AIH62     B     265     173     115    1157    1310 #> 103   no AIH63     B     308     265     290    2464     840 #> 104   no AIH64     B     276     179     203    1848     563 #> 105   no AIH65     B     173     119     194    2245     726 #> 106   no AIH66     B     354     156       0     227     109 #> 107   no AIH67     B      73      25       0     267      68 #> 108   no AIH68     B     111      80      42     384     180 #> 109   no AIH69     B     148      90      54     479     235 #> 110   no AIH70     B     229     367      12       3     595 #> 111   no AIH71     B     388     316       0       0       0 #> 112   no AIH72     B       0       5       0     300     323 #> 113   no AIH73     B       0      66      22      92       0 #> 114   no AIH74     B       0      47       0     337       0 #> 115   no AIH75     B       0     256      42     760       0 #> 116   no AIH76     B     107      61      26     391       0 #> 117   no AIH77     B     174     109      57     428     223 #> 118   no AIH78     B      42      46      13     235     319 #> 119   no AIH79     B     180     146      34     362     249 #> 120   no AIH80     B      79      66      57     378     307 #> 121   no AIH81     B     419      86      51     376     533 #> 122   no AIH82     B     448     133      95     631     122 #> 123   no AIH83     B       0     119      49     399     154 #> 124   no AIH84     B     148      90      67     285     167 #> 125   no AIH85     B      11     155      19     231       0 #> 126   no AIH86     B     165     162     167     912     405 #> 127   no AIH87     B     320     150      88     107    4114 #> 128   no AIH88     B     146      87     111     395     238 #> 129   no AIH89     B      90     102      62     112     267 #> 130   no AIH90     B     257     188     171     644     347 #> 131   no AIH91     B     106      60      63     336       0 #> 132   no AIH92     B    1223     584     640     256       0 #> 133   no AIH93     B     519     287     283       0       0 #> 134   no AIH94     B     327     240     101     102       0 #> 135   no AIH95     B     559    2142      59     279     413 #> 136   no AIH96     B     202     201      29     248       0 #> 137   no AIH97     B     212      88      45     472       0 #> 138   no AIH98     B     426     125      68      99     566 #> 139   no AIH99     B     260     135     105     285      34 #> 140  no AIH100     B     371     257      96     528      75 #> 141  no AIH101     B     254      99     105     332      13 #> 142  no AIH102     B     107      86     121     786     168 #> 143  no AIH103     B     265     209      40     328      10 #> 144  no AIH104     B     201     189      31     559       0 #> 145  no AIH105     B      79      63      38     159       2 #> 146  no AIH106     B     111      34      32     343      13 #> 147  no AIH107     B     130     185       0     577     923 #> 148  no AIH108     B      58      29      11     545       0 #> 149  no AIH109     B      49      56      34     390       0 #> 150  no AIH110     B     158     165      68     227       0 #> 151  no AIH111     B     159     205      25     151      32 #> 152  no AIH112     B     144     155      25     600       0 #> 153  no AIH113     B     111     155      83     179      65 #> 154  no AIH114     B     224     115      27     276      67 #> 155  no AIH115     B      85      85      13     123      48 #> 156  no AIH116     B     362     296      11     176      72 #> 157  no AIH117     B     273     264     122    1418     476 #> 158  no AIH118     B     425     402      86    1702     581 #> 159  no AIH119     B     315     418       0     595     305 #> 160  no AIH120     B     463     379      71     626     313 #> 161  no AIH121     B      94     413      46     400     229 #> 162  no AIH122     B     163     115     285     590     213 #> 163  no AIH123     B       0       0       0    1053     362 #> 164  no AIH124     B       0       0       0     430      26 #> 165  no AIH125     B      83      61     299     476     219 #> 166  no AIH126     B     381     303       4     266     376 #> 167  no AIH127     B     253     106     134     626     189 #> 168  no AIH128     B     571      96      31     487     423 #> 169  no AIH129     B     288     298       0     347     411 #> 170  no AIH130     B     135     149     229     864     600   # To compute the marker combinations and count their corresponding positive samples for each class.   combs <- combi(data= demo_data, signalthr=450, combithr=1, case_class='A') #> Error in combi(data = demo_data, signalthr = 450, combithr = 1, case_class = \"A\"): unused argument (case_class = \"A\")  # count as positive the samples with value >= 450 for at least 1 marker in the combination"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc.html","id":null,"dir":"Reference","previous_headings":"","what":"Taming Combinations of Biomarkers — combiroc","title":"Taming Combinations of Biomarkers — combiroc","text":"Easily Powerfully Calculates Specificity, Sensitivity ROC Curves Biomarkers Combinations. following sections brief summary package content.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc.html","id":"data-loading-and-reshaping","dir":"Reference","previous_headings":"","what":"data loading and reshaping","title":"Taming Combinations of Biomarkers — combiroc","text":"load_data(): check load data. load_unclassified_data(): check load unclassified data. combiroc_long(): reshape data long format.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc.html","id":"distribution-inspection","dir":"Reference","previous_headings":"","what":"distribution inspection","title":"Taming Combinations of Biomarkers — combiroc","text":"markers_distribution(): show distribution intensity values markers singularly together.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc.html","id":"combinatorial-analysis","dir":"Reference","previous_headings":"","what":"combinatorial analysis","title":"Taming Combinations of Biomarkers — combiroc","text":"combi(): compute marker combinations. se_sp(): compute sensitivity specificity combination. ranked_combs(): rank combinations.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc.html","id":"logistic-regression-training-and-fitting","dir":"Reference","previous_headings":"","what":"logistic regression training and fitting","title":"Taming Combinations of Biomarkers — combiroc","text":"roc_reports(): train logistic regression compute ROC. classify(): apply previously calculated models unclassified dataset classifies samples.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc.html","id":"markers-combinations-correspondence","dir":"Reference","previous_headings":"","what":"markers/combinations correspondence","title":"Taming Combinations of Biomarkers — combiroc","text":"show_markers(): show composition combinations combs_with(): show combinations given markers.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc.html","id":"built-in-demo-datasets","dir":"Reference","previous_headings":"","what":"built-in demo datasets","title":"Taming Combinations of Biomarkers — combiroc","text":"demo_data: proteomics data Zingaretti et al. 2012 - PMC3518104) demo_unclassified_data: dataset obtained randomly picking 20 samples demo_data without classification.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape combiroc data in long format. — combiroc_long","title":"Reshape combiroc data in long format. — combiroc_long","text":"function simply wraps dyplr::pivot_longer() reshape data long format without taking account NAs.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape combiroc data in long format. — combiroc_long","text":"","code":"combiroc_long(data)"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape combiroc data in long format. — combiroc_long","text":"data data.frame returned load_data().","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape combiroc data in long format. — combiroc_long","text":"data.frame long format","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reshape combiroc data in long format. — combiroc_long","text":"function returns data long format ('Markers' 'Values' columns)","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combiroc_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshape combiroc data in long format. — combiroc_long","text":"","code":"demo_data # combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) #>     Patient.ID Class Marker1 Marker2 Marker3 Marker4 Marker5 #> 1         AIH1     A     438     187     197     298     139 #> 2         AIH2     A     345     293     134     523     335 #> 3         AIH3     A     903     392     300    1253       0 #> 4         AIH4     A     552     267     296     666      22 #> 5         AIH5     A    1451     760     498     884     684 #> 6         AIH6     A     497     260     175     640     572 #> 7         AIH7     A    3878    2858     510    1518     348 #> 8         AIH8     A     740     368     266    1391     647 #> 9         AIH9     A     538     412     282    1071     474 #> 10       AIH10     A    1194    1065     442    1530     816 #> 11       AIH11     A     988     817     394    1626    1028 #> 12       AIH12     A     261     153     528     449     237 #> 13       AIH13     A     312     181      58     408     661 #> 14       AIH14     A     499     302     181    1088     568 #> 15       AIH15     A     998     431      75     397     519 #> 16       AIH16     A    6485    3704    8834    2595    1570 #> 17       AIH17     A    8584    2662   13178    3390    2757 #> 18       AIH18     A    1696    1029     369     468    2422 #> 19       AIH19     A     774     505     251    1014     517 #> 20       AIH20     A     433     330      92    1266     743 #> 21       AIH21     A    1207    1501      57    1847     741 #> 22       AIH22     A     225     849     125     330     168 #> 23       AIH23     A    1327     485     366     563     878 #> 24       AIH24     A      76     582     601     115      73 #> 25       AIH25     A     586     256      53     710      74 #> 26       AIH26     A     263     196     124     798      95 #> 27       AIH27     A     146     568      64     125      92 #> 28       AIH28     A     537     620      82     350      53 #> 29       AIH29     A      52      41     588     346      50 #> 30       AIH30     A     882     138      47     601      85 #> 31       AIH31     A     462     304      81     378     208 #> 32       AIH32     A     372     149       0     460     156 #> 33       AIH33     A    1964     875     404    1883    1021 #> 34       AIH34     A    2809    1633     451    1042     608 #> 35       AIH35     A     994     505     303    1699     783 #> 36       AIH36     A     361     185     115     466     520 #> 37       AIH37     A     275     384      45     329     466 #> 38       AIH38     A     947     622      16     236     728 #> 39       AIH39     A     405     133      32     284     358 #> 40       AIH40     A     922     689      68     105     643 #> 41     no AIH1     B     510      28       0     332       0 #> 42     no AIH2     B     205       0       0     332       0 #> 43     no AIH3     B      44       0       0     332      21 #> 44     no AIH4     B      49      38       7     178      48 #> 45     no AIH5     B      26      33       6     131      32 #> 46     no AIH6     B      24      26       8     206      28 #> 47     no AIH7     B     243     373     109     631     477 #> 48     no AIH8     B      99     111      51     193     197 #> 49     no AIH9     B      85      55      71     811     321 #> 50    no AIH10     B     146     108      46     173     171 #> 51    no AIH11     B       0     113       0       0      56 #> 52    no AIH12     B     151       0       0     360       0 #> 53    no AIH13     B       0       0       0      15      21 #> 54    no AIH14     B       0       5       0     147      53 #> 55    no AIH15     B     118      69      13     748      97 #> 56    no AIH16     B      31      29       7     223      34 #> 57    no AIH17     B      72      53      12     376      85 #> 58    no AIH18     B     137     151      20     662     131 #> 59    no AIH19     B      78      58       6     368      49 #> 60    no AIH20     B     193      14      90     703     177 #> 61    no AIH21     B       0       0       0       0       0 #> 62    no AIH22     B       0      20       0      66      31 #> 63    no AIH23     B     351      70       0     478       7 #> 64    no AIH24     B     171     127      74    1202     224 #> 65    no AIH25     B      77      75      26     316      61 #> 66    no AIH26     B      51      45       2     286      44 #> 67    no AIH27     B      64      55      17     333      46 #> 68    no AIH28     B     150     185      42     975     252 #> 69    no AIH29     B     149     140      52    1087     209 #> 70    no AIH30     B     147     103      19     794      98 #> 71    no AIH31     B      86      89      44     427     144 #> 72    no AIH32     B      94      57      18     581      88 #> 73    no AIH33     B      56      41      23     244      49 #> 74    no AIH34     B      10      15       2     121      26 #> 75    no AIH35     B      46      22       0      69      24 #> 76    no AIH36     B      84      65       4     278      77 #> 77    no AIH37     B      42      44      19     306      86 #> 78    no AIH38     B      46      51      24     342      74 #> 79    no AIH39     B      73      39       9     358      41 #> 80    no AIH40     B      83     131      27    1012     124 #> 81    no AIH41     B       0     193      50     382     135 #> 82    no AIH42     B      41      94      64     464     141 #> 83    no AIH43     B       0      77      46     398      85 #> 84    no AIH44     B      98     152      91     469     301 #> 85    no AIH45     B      78      85      10     407       0 #> 86    no AIH46     B      21      16       0     536      16 #> 87    no AIH47     B      44      34      74     266      21 #> 88    no AIH48     B     144      76      63     252       0 #> 89    no AIH49     B     162     249     101     134       0 #> 90    no AIH50     B     100     169      33    1430       0 #> 91    no AIH51     B      52     159      57     681     417 #> 92    no AIH52     B      97      86      64     591      33 #> 93    no AIH53     B      73      80      20     157      51 #> 94    no AIH54     B     162     117      25     749       0 #> 95    no AIH55     B     100     220      37     729      41 #> 96    no AIH56     B     227     174      26     290       0 #> 97    no AIH57     B     136     165      23     315      40 #> 98    no AIH58     B      96     213      47     682     780 #> 99    no AIH59     B      69      59      21     629     245 #> 100   no AIH60     B      74      70      67     138     215 #> 101   no AIH61     B     129     118      44     117     769 #> 102   no AIH62     B     265     173     115    1157    1310 #> 103   no AIH63     B     308     265     290    2464     840 #> 104   no AIH64     B     276     179     203    1848     563 #> 105   no AIH65     B     173     119     194    2245     726 #> 106   no AIH66     B     354     156       0     227     109 #> 107   no AIH67     B      73      25       0     267      68 #> 108   no AIH68     B     111      80      42     384     180 #> 109   no AIH69     B     148      90      54     479     235 #> 110   no AIH70     B     229     367      12       3     595 #> 111   no AIH71     B     388     316       0       0       0 #> 112   no AIH72     B       0       5       0     300     323 #> 113   no AIH73     B       0      66      22      92       0 #> 114   no AIH74     B       0      47       0     337       0 #> 115   no AIH75     B       0     256      42     760       0 #> 116   no AIH76     B     107      61      26     391       0 #> 117   no AIH77     B     174     109      57     428     223 #> 118   no AIH78     B      42      46      13     235     319 #> 119   no AIH79     B     180     146      34     362     249 #> 120   no AIH80     B      79      66      57     378     307 #> 121   no AIH81     B     419      86      51     376     533 #> 122   no AIH82     B     448     133      95     631     122 #> 123   no AIH83     B       0     119      49     399     154 #> 124   no AIH84     B     148      90      67     285     167 #> 125   no AIH85     B      11     155      19     231       0 #> 126   no AIH86     B     165     162     167     912     405 #> 127   no AIH87     B     320     150      88     107    4114 #> 128   no AIH88     B     146      87     111     395     238 #> 129   no AIH89     B      90     102      62     112     267 #> 130   no AIH90     B     257     188     171     644     347 #> 131   no AIH91     B     106      60      63     336       0 #> 132   no AIH92     B    1223     584     640     256       0 #> 133   no AIH93     B     519     287     283       0       0 #> 134   no AIH94     B     327     240     101     102       0 #> 135   no AIH95     B     559    2142      59     279     413 #> 136   no AIH96     B     202     201      29     248       0 #> 137   no AIH97     B     212      88      45     472       0 #> 138   no AIH98     B     426     125      68      99     566 #> 139   no AIH99     B     260     135     105     285      34 #> 140  no AIH100     B     371     257      96     528      75 #> 141  no AIH101     B     254      99     105     332      13 #> 142  no AIH102     B     107      86     121     786     168 #> 143  no AIH103     B     265     209      40     328      10 #> 144  no AIH104     B     201     189      31     559       0 #> 145  no AIH105     B      79      63      38     159       2 #> 146  no AIH106     B     111      34      32     343      13 #> 147  no AIH107     B     130     185       0     577     923 #> 148  no AIH108     B      58      29      11     545       0 #> 149  no AIH109     B      49      56      34     390       0 #> 150  no AIH110     B     158     165      68     227       0 #> 151  no AIH111     B     159     205      25     151      32 #> 152  no AIH112     B     144     155      25     600       0 #> 153  no AIH113     B     111     155      83     179      65 #> 154  no AIH114     B     224     115      27     276      67 #> 155  no AIH115     B      85      85      13     123      48 #> 156  no AIH116     B     362     296      11     176      72 #> 157  no AIH117     B     273     264     122    1418     476 #> 158  no AIH118     B     425     402      86    1702     581 #> 159  no AIH119     B     315     418       0     595     305 #> 160  no AIH120     B     463     379      71     626     313 #> 161  no AIH121     B      94     413      46     400     229 #> 162  no AIH122     B     163     115     285     590     213 #> 163  no AIH123     B       0       0       0    1053     362 #> 164  no AIH124     B       0       0       0     430      26 #> 165  no AIH125     B      83      61     299     476     219 #> 166  no AIH126     B     381     303       4     266     376 #> 167  no AIH127     B     253     106     134     626     189 #> 168  no AIH128     B     571      96      31     487     423 #> 169  no AIH129     B     288     298       0     347     411 #> 170  no AIH130     B     135     149     229     864     600  # To reshape demo_data in long format  demo_data_long <- combiroc_long(data = demo_data)"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combi_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the combi score using glm(link='binomial') models and optionally classifies the samples. — combi_score","title":"Compute the combi score using glm(link='binomial') models and optionally classifies the samples. — combi_score","text":"function applies previously calculated models dataset compute combi scores optionally classify samples.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combi_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the combi score using glm(link='binomial') models and optionally classifies the samples. — combi_score","text":"","code":"combi_score(   data,   Models,   Metrics,   Positive_class = 1,   Negative_class = 0,   deal_NA = \"impute\",   classify = F )"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combi_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the combi score using glm(link='binomial') models and optionally classifies the samples. — combi_score","text":"data data.frame returned load_data(). Models list glm() objects returned roc_reports(). Metrics list data.frame objects containing ROC metrics, returned roc_reports(). Positive_class numeric character specifies label samples classified positives Negative_class numeric character specifies label samples classified negatives deal_NA character specifies treat missing values. 'impute' NAs marker substituted median given marker values. 'remove' whole observations containing NA removed'. classify boolean specifies samples classified.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combi_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the combi score using glm(link='binomial') models and optionally classifies the samples. — combi_score","text":"data.frame containing combi scores (classify=F) predicted class sample (classify=T), marker/combination Models","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combi_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the combi score using glm(link='binomial') models and optionally classifies the samples. — combi_score","text":"function  can take input datasets loaded load_data(). MUST contain markers combinations used train models.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combi_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the combi score using glm(link='binomial') models and optionally classifies the samples. — combi_score","text":"","code":"demo_data # combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) #>     Patient.ID Class Marker1 Marker2 Marker3 Marker4 Marker5 #> 1         AIH1     A     438     187     197     298     139 #> 2         AIH2     A     345     293     134     523     335 #> 3         AIH3     A     903     392     300    1253       0 #> 4         AIH4     A     552     267     296     666      22 #> 5         AIH5     A    1451     760     498     884     684 #> 6         AIH6     A     497     260     175     640     572 #> 7         AIH7     A    3878    2858     510    1518     348 #> 8         AIH8     A     740     368     266    1391     647 #> 9         AIH9     A     538     412     282    1071     474 #> 10       AIH10     A    1194    1065     442    1530     816 #> 11       AIH11     A     988     817     394    1626    1028 #> 12       AIH12     A     261     153     528     449     237 #> 13       AIH13     A     312     181      58     408     661 #> 14       AIH14     A     499     302     181    1088     568 #> 15       AIH15     A     998     431      75     397     519 #> 16       AIH16     A    6485    3704    8834    2595    1570 #> 17       AIH17     A    8584    2662   13178    3390    2757 #> 18       AIH18     A    1696    1029     369     468    2422 #> 19       AIH19     A     774     505     251    1014     517 #> 20       AIH20     A     433     330      92    1266     743 #> 21       AIH21     A    1207    1501      57    1847     741 #> 22       AIH22     A     225     849     125     330     168 #> 23       AIH23     A    1327     485     366     563     878 #> 24       AIH24     A      76     582     601     115      73 #> 25       AIH25     A     586     256      53     710      74 #> 26       AIH26     A     263     196     124     798      95 #> 27       AIH27     A     146     568      64     125      92 #> 28       AIH28     A     537     620      82     350      53 #> 29       AIH29     A      52      41     588     346      50 #> 30       AIH30     A     882     138      47     601      85 #> 31       AIH31     A     462     304      81     378     208 #> 32       AIH32     A     372     149       0     460     156 #> 33       AIH33     A    1964     875     404    1883    1021 #> 34       AIH34     A    2809    1633     451    1042     608 #> 35       AIH35     A     994     505     303    1699     783 #> 36       AIH36     A     361     185     115     466     520 #> 37       AIH37     A     275     384      45     329     466 #> 38       AIH38     A     947     622      16     236     728 #> 39       AIH39     A     405     133      32     284     358 #> 40       AIH40     A     922     689      68     105     643 #> 41     no AIH1     B     510      28       0     332       0 #> 42     no AIH2     B     205       0       0     332       0 #> 43     no AIH3     B      44       0       0     332      21 #> 44     no AIH4     B      49      38       7     178      48 #> 45     no AIH5     B      26      33       6     131      32 #> 46     no AIH6     B      24      26       8     206      28 #> 47     no AIH7     B     243     373     109     631     477 #> 48     no AIH8     B      99     111      51     193     197 #> 49     no AIH9     B      85      55      71     811     321 #> 50    no AIH10     B     146     108      46     173     171 #> 51    no AIH11     B       0     113       0       0      56 #> 52    no AIH12     B     151       0       0     360       0 #> 53    no AIH13     B       0       0       0      15      21 #> 54    no AIH14     B       0       5       0     147      53 #> 55    no AIH15     B     118      69      13     748      97 #> 56    no AIH16     B      31      29       7     223      34 #> 57    no AIH17     B      72      53      12     376      85 #> 58    no AIH18     B     137     151      20     662     131 #> 59    no AIH19     B      78      58       6     368      49 #> 60    no AIH20     B     193      14      90     703     177 #> 61    no AIH21     B       0       0       0       0       0 #> 62    no AIH22     B       0      20       0      66      31 #> 63    no AIH23     B     351      70       0     478       7 #> 64    no AIH24     B     171     127      74    1202     224 #> 65    no AIH25     B      77      75      26     316      61 #> 66    no AIH26     B      51      45       2     286      44 #> 67    no AIH27     B      64      55      17     333      46 #> 68    no AIH28     B     150     185      42     975     252 #> 69    no AIH29     B     149     140      52    1087     209 #> 70    no AIH30     B     147     103      19     794      98 #> 71    no AIH31     B      86      89      44     427     144 #> 72    no AIH32     B      94      57      18     581      88 #> 73    no AIH33     B      56      41      23     244      49 #> 74    no AIH34     B      10      15       2     121      26 #> 75    no AIH35     B      46      22       0      69      24 #> 76    no AIH36     B      84      65       4     278      77 #> 77    no AIH37     B      42      44      19     306      86 #> 78    no AIH38     B      46      51      24     342      74 #> 79    no AIH39     B      73      39       9     358      41 #> 80    no AIH40     B      83     131      27    1012     124 #> 81    no AIH41     B       0     193      50     382     135 #> 82    no AIH42     B      41      94      64     464     141 #> 83    no AIH43     B       0      77      46     398      85 #> 84    no AIH44     B      98     152      91     469     301 #> 85    no AIH45     B      78      85      10     407       0 #> 86    no AIH46     B      21      16       0     536      16 #> 87    no AIH47     B      44      34      74     266      21 #> 88    no AIH48     B     144      76      63     252       0 #> 89    no AIH49     B     162     249     101     134       0 #> 90    no AIH50     B     100     169      33    1430       0 #> 91    no AIH51     B      52     159      57     681     417 #> 92    no AIH52     B      97      86      64     591      33 #> 93    no AIH53     B      73      80      20     157      51 #> 94    no AIH54     B     162     117      25     749       0 #> 95    no AIH55     B     100     220      37     729      41 #> 96    no AIH56     B     227     174      26     290       0 #> 97    no AIH57     B     136     165      23     315      40 #> 98    no AIH58     B      96     213      47     682     780 #> 99    no AIH59     B      69      59      21     629     245 #> 100   no AIH60     B      74      70      67     138     215 #> 101   no AIH61     B     129     118      44     117     769 #> 102   no AIH62     B     265     173     115    1157    1310 #> 103   no AIH63     B     308     265     290    2464     840 #> 104   no AIH64     B     276     179     203    1848     563 #> 105   no AIH65     B     173     119     194    2245     726 #> 106   no AIH66     B     354     156       0     227     109 #> 107   no AIH67     B      73      25       0     267      68 #> 108   no AIH68     B     111      80      42     384     180 #> 109   no AIH69     B     148      90      54     479     235 #> 110   no AIH70     B     229     367      12       3     595 #> 111   no AIH71     B     388     316       0       0       0 #> 112   no AIH72     B       0       5       0     300     323 #> 113   no AIH73     B       0      66      22      92       0 #> 114   no AIH74     B       0      47       0     337       0 #> 115   no AIH75     B       0     256      42     760       0 #> 116   no AIH76     B     107      61      26     391       0 #> 117   no AIH77     B     174     109      57     428     223 #> 118   no AIH78     B      42      46      13     235     319 #> 119   no AIH79     B     180     146      34     362     249 #> 120   no AIH80     B      79      66      57     378     307 #> 121   no AIH81     B     419      86      51     376     533 #> 122   no AIH82     B     448     133      95     631     122 #> 123   no AIH83     B       0     119      49     399     154 #> 124   no AIH84     B     148      90      67     285     167 #> 125   no AIH85     B      11     155      19     231       0 #> 126   no AIH86     B     165     162     167     912     405 #> 127   no AIH87     B     320     150      88     107    4114 #> 128   no AIH88     B     146      87     111     395     238 #> 129   no AIH89     B      90     102      62     112     267 #> 130   no AIH90     B     257     188     171     644     347 #> 131   no AIH91     B     106      60      63     336       0 #> 132   no AIH92     B    1223     584     640     256       0 #> 133   no AIH93     B     519     287     283       0       0 #> 134   no AIH94     B     327     240     101     102       0 #> 135   no AIH95     B     559    2142      59     279     413 #> 136   no AIH96     B     202     201      29     248       0 #> 137   no AIH97     B     212      88      45     472       0 #> 138   no AIH98     B     426     125      68      99     566 #> 139   no AIH99     B     260     135     105     285      34 #> 140  no AIH100     B     371     257      96     528      75 #> 141  no AIH101     B     254      99     105     332      13 #> 142  no AIH102     B     107      86     121     786     168 #> 143  no AIH103     B     265     209      40     328      10 #> 144  no AIH104     B     201     189      31     559       0 #> 145  no AIH105     B      79      63      38     159       2 #> 146  no AIH106     B     111      34      32     343      13 #> 147  no AIH107     B     130     185       0     577     923 #> 148  no AIH108     B      58      29      11     545       0 #> 149  no AIH109     B      49      56      34     390       0 #> 150  no AIH110     B     158     165      68     227       0 #> 151  no AIH111     B     159     205      25     151      32 #> 152  no AIH112     B     144     155      25     600       0 #> 153  no AIH113     B     111     155      83     179      65 #> 154  no AIH114     B     224     115      27     276      67 #> 155  no AIH115     B      85      85      13     123      48 #> 156  no AIH116     B     362     296      11     176      72 #> 157  no AIH117     B     273     264     122    1418     476 #> 158  no AIH118     B     425     402      86    1702     581 #> 159  no AIH119     B     315     418       0     595     305 #> 160  no AIH120     B     463     379      71     626     313 #> 161  no AIH121     B      94     413      46     400     229 #> 162  no AIH122     B     163     115     285     590     213 #> 163  no AIH123     B       0       0       0    1053     362 #> 164  no AIH124     B       0       0       0     430      26 #> 165  no AIH125     B      83      61     299     476     219 #> 166  no AIH126     B     381     303       4     266     376 #> 167  no AIH127     B     253     106     134     626     189 #> 168  no AIH128     B     571      96      31     487     423 #> 169  no AIH129     B     288     298       0     347     411 #> 170  no AIH130     B     135     149     229     864     600 demo_unclassified_data # combiroc built-in unclassified demo data #>    Patient.ID Marker1 Marker2 Marker3 Marker4 Marker5 #> 1       AIH33    1964     875     404    1883    1021 #> 2   no AIH126     381     303       4     266     376 #> 3       AIH12     261     153     528     449     237 #> 4   no AIH112     144     155      25     600       0 #> 5    no AIH41       0     193      50     382     135 #> 6    no AIH38      46      51      24     342      74 #> 7        AIH4     552     267     296     666      22 #> 8    no AIH32      94      57      18     581      88 #> 9       AIH20     433     330      92    1266     743 #> 10   no AIH13       0       0       0      15      21 #> 11   no AIH11       0     113       0       0      56 #> 12  no AIH114     224     115      27     276      67 #> 13  no AIH121      94     413      46     400     229 #> 14      AIH17    8584    2662   13178    3390    2757 #> 15      AIH14     499     302     181    1088     568 #> 16  no AIH106     111      34      32     343      13 #> 17   no AIH67      73      25       0     267      68 #> 18       AIH9     538     412     282    1071     474 #> 19   no AIH74       0      47       0     337       0 #> 20      AIH16    6485    3704    8834    2595    1570  combs <- combi(data= demo_data, signalthr=450, combithr=1, case_class='A')  # compute combinations #> Error in combi(data = demo_data, signalthr = 450, combithr = 1, case_class = \"A\"): unused argument (case_class = \"A\")  reports <- roc_reports(data= demo_data, markers_table= combs,                        selected_combinations= c(1,11,15),                        single_markers=c('Marker1', 'Marker2'), case_class='A') # train logistic #> Error in roc_reports(data = demo_data, markers_table = combs, selected_combinations = c(1,     11, 15), single_markers = c(\"Marker1\", \"Marker2\"), case_class = \"A\"): object 'combs' not found                                                                                # regression models   # To fit the models an retrieve the combi scores (predicted probabilities).  score_data <- combi_score(data= demo_unclassified_data, Models= reports$Models,                              Metrics= reports$Metrics) #> Error in combi_score(data = demo_unclassified_data, Models = reports$Models,     Metrics = reports$Metrics): could not find function \"combi_score\"  # To classify new samples with logistic regression models.  classified_data <- combi_score(data= demo_unclassified_data,                                Models= reports$Models,Metrics= reports$Metrics,                                Positive_class=1, Negative_class=0, classify=TRUE) #> Error in combi_score(data = demo_unclassified_data, Models = reports$Models,     Metrics = reports$Metrics, Positive_class = 1, Negative_class = 0,     classify = TRUE): could not find function \"combi_score\"  classified_data  # show samples classified using Logistic regression models #> Error in eval(expr, envir, enclos): object 'classified_data' not found"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combs_with.html","id":null,"dir":"Reference","previous_headings":"","what":"Show combinations with given markers. — combs_with","title":"Show combinations with given markers. — combs_with","text":"function find combinations containing markers interest.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combs_with.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show combinations with given markers. — combs_with","text":"","code":"combs_with(markers, markers_table)"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combs_with.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show combinations with given markers. — combs_with","text":"markers character vector containing one markers interest. markers_table data.frame ranked combination, reporting: SE, SP, number markers composing combination score (returned ranked_combs()).","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combs_with.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show combinations with given markers. — combs_with","text":"numeric vector containing numbers corresponding combinations containing selected markers.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/combs_with.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show combinations with given markers. — combs_with","text":"","code":"demo_data # combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) #>     Patient.ID Class Marker1 Marker2 Marker3 Marker4 Marker5 #> 1         AIH1     A     438     187     197     298     139 #> 2         AIH2     A     345     293     134     523     335 #> 3         AIH3     A     903     392     300    1253       0 #> 4         AIH4     A     552     267     296     666      22 #> 5         AIH5     A    1451     760     498     884     684 #> 6         AIH6     A     497     260     175     640     572 #> 7         AIH7     A    3878    2858     510    1518     348 #> 8         AIH8     A     740     368     266    1391     647 #> 9         AIH9     A     538     412     282    1071     474 #> 10       AIH10     A    1194    1065     442    1530     816 #> 11       AIH11     A     988     817     394    1626    1028 #> 12       AIH12     A     261     153     528     449     237 #> 13       AIH13     A     312     181      58     408     661 #> 14       AIH14     A     499     302     181    1088     568 #> 15       AIH15     A     998     431      75     397     519 #> 16       AIH16     A    6485    3704    8834    2595    1570 #> 17       AIH17     A    8584    2662   13178    3390    2757 #> 18       AIH18     A    1696    1029     369     468    2422 #> 19       AIH19     A     774     505     251    1014     517 #> 20       AIH20     A     433     330      92    1266     743 #> 21       AIH21     A    1207    1501      57    1847     741 #> 22       AIH22     A     225     849     125     330     168 #> 23       AIH23     A    1327     485     366     563     878 #> 24       AIH24     A      76     582     601     115      73 #> 25       AIH25     A     586     256      53     710      74 #> 26       AIH26     A     263     196     124     798      95 #> 27       AIH27     A     146     568      64     125      92 #> 28       AIH28     A     537     620      82     350      53 #> 29       AIH29     A      52      41     588     346      50 #> 30       AIH30     A     882     138      47     601      85 #> 31       AIH31     A     462     304      81     378     208 #> 32       AIH32     A     372     149       0     460     156 #> 33       AIH33     A    1964     875     404    1883    1021 #> 34       AIH34     A    2809    1633     451    1042     608 #> 35       AIH35     A     994     505     303    1699     783 #> 36       AIH36     A     361     185     115     466     520 #> 37       AIH37     A     275     384      45     329     466 #> 38       AIH38     A     947     622      16     236     728 #> 39       AIH39     A     405     133      32     284     358 #> 40       AIH40     A     922     689      68     105     643 #> 41     no AIH1     B     510      28       0     332       0 #> 42     no AIH2     B     205       0       0     332       0 #> 43     no AIH3     B      44       0       0     332      21 #> 44     no AIH4     B      49      38       7     178      48 #> 45     no AIH5     B      26      33       6     131      32 #> 46     no AIH6     B      24      26       8     206      28 #> 47     no AIH7     B     243     373     109     631     477 #> 48     no AIH8     B      99     111      51     193     197 #> 49     no AIH9     B      85      55      71     811     321 #> 50    no AIH10     B     146     108      46     173     171 #> 51    no AIH11     B       0     113       0       0      56 #> 52    no AIH12     B     151       0       0     360       0 #> 53    no AIH13     B       0       0       0      15      21 #> 54    no AIH14     B       0       5       0     147      53 #> 55    no AIH15     B     118      69      13     748      97 #> 56    no AIH16     B      31      29       7     223      34 #> 57    no AIH17     B      72      53      12     376      85 #> 58    no AIH18     B     137     151      20     662     131 #> 59    no AIH19     B      78      58       6     368      49 #> 60    no AIH20     B     193      14      90     703     177 #> 61    no AIH21     B       0       0       0       0       0 #> 62    no AIH22     B       0      20       0      66      31 #> 63    no AIH23     B     351      70       0     478       7 #> 64    no AIH24     B     171     127      74    1202     224 #> 65    no AIH25     B      77      75      26     316      61 #> 66    no AIH26     B      51      45       2     286      44 #> 67    no AIH27     B      64      55      17     333      46 #> 68    no AIH28     B     150     185      42     975     252 #> 69    no AIH29     B     149     140      52    1087     209 #> 70    no AIH30     B     147     103      19     794      98 #> 71    no AIH31     B      86      89      44     427     144 #> 72    no AIH32     B      94      57      18     581      88 #> 73    no AIH33     B      56      41      23     244      49 #> 74    no AIH34     B      10      15       2     121      26 #> 75    no AIH35     B      46      22       0      69      24 #> 76    no AIH36     B      84      65       4     278      77 #> 77    no AIH37     B      42      44      19     306      86 #> 78    no AIH38     B      46      51      24     342      74 #> 79    no AIH39     B      73      39       9     358      41 #> 80    no AIH40     B      83     131      27    1012     124 #> 81    no AIH41     B       0     193      50     382     135 #> 82    no AIH42     B      41      94      64     464     141 #> 83    no AIH43     B       0      77      46     398      85 #> 84    no AIH44     B      98     152      91     469     301 #> 85    no AIH45     B      78      85      10     407       0 #> 86    no AIH46     B      21      16       0     536      16 #> 87    no AIH47     B      44      34      74     266      21 #> 88    no AIH48     B     144      76      63     252       0 #> 89    no AIH49     B     162     249     101     134       0 #> 90    no AIH50     B     100     169      33    1430       0 #> 91    no AIH51     B      52     159      57     681     417 #> 92    no AIH52     B      97      86      64     591      33 #> 93    no AIH53     B      73      80      20     157      51 #> 94    no AIH54     B     162     117      25     749       0 #> 95    no AIH55     B     100     220      37     729      41 #> 96    no AIH56     B     227     174      26     290       0 #> 97    no AIH57     B     136     165      23     315      40 #> 98    no AIH58     B      96     213      47     682     780 #> 99    no AIH59     B      69      59      21     629     245 #> 100   no AIH60     B      74      70      67     138     215 #> 101   no AIH61     B     129     118      44     117     769 #> 102   no AIH62     B     265     173     115    1157    1310 #> 103   no AIH63     B     308     265     290    2464     840 #> 104   no AIH64     B     276     179     203    1848     563 #> 105   no AIH65     B     173     119     194    2245     726 #> 106   no AIH66     B     354     156       0     227     109 #> 107   no AIH67     B      73      25       0     267      68 #> 108   no AIH68     B     111      80      42     384     180 #> 109   no AIH69     B     148      90      54     479     235 #> 110   no AIH70     B     229     367      12       3     595 #> 111   no AIH71     B     388     316       0       0       0 #> 112   no AIH72     B       0       5       0     300     323 #> 113   no AIH73     B       0      66      22      92       0 #> 114   no AIH74     B       0      47       0     337       0 #> 115   no AIH75     B       0     256      42     760       0 #> 116   no AIH76     B     107      61      26     391       0 #> 117   no AIH77     B     174     109      57     428     223 #> 118   no AIH78     B      42      46      13     235     319 #> 119   no AIH79     B     180     146      34     362     249 #> 120   no AIH80     B      79      66      57     378     307 #> 121   no AIH81     B     419      86      51     376     533 #> 122   no AIH82     B     448     133      95     631     122 #> 123   no AIH83     B       0     119      49     399     154 #> 124   no AIH84     B     148      90      67     285     167 #> 125   no AIH85     B      11     155      19     231       0 #> 126   no AIH86     B     165     162     167     912     405 #> 127   no AIH87     B     320     150      88     107    4114 #> 128   no AIH88     B     146      87     111     395     238 #> 129   no AIH89     B      90     102      62     112     267 #> 130   no AIH90     B     257     188     171     644     347 #> 131   no AIH91     B     106      60      63     336       0 #> 132   no AIH92     B    1223     584     640     256       0 #> 133   no AIH93     B     519     287     283       0       0 #> 134   no AIH94     B     327     240     101     102       0 #> 135   no AIH95     B     559    2142      59     279     413 #> 136   no AIH96     B     202     201      29     248       0 #> 137   no AIH97     B     212      88      45     472       0 #> 138   no AIH98     B     426     125      68      99     566 #> 139   no AIH99     B     260     135     105     285      34 #> 140  no AIH100     B     371     257      96     528      75 #> 141  no AIH101     B     254      99     105     332      13 #> 142  no AIH102     B     107      86     121     786     168 #> 143  no AIH103     B     265     209      40     328      10 #> 144  no AIH104     B     201     189      31     559       0 #> 145  no AIH105     B      79      63      38     159       2 #> 146  no AIH106     B     111      34      32     343      13 #> 147  no AIH107     B     130     185       0     577     923 #> 148  no AIH108     B      58      29      11     545       0 #> 149  no AIH109     B      49      56      34     390       0 #> 150  no AIH110     B     158     165      68     227       0 #> 151  no AIH111     B     159     205      25     151      32 #> 152  no AIH112     B     144     155      25     600       0 #> 153  no AIH113     B     111     155      83     179      65 #> 154  no AIH114     B     224     115      27     276      67 #> 155  no AIH115     B      85      85      13     123      48 #> 156  no AIH116     B     362     296      11     176      72 #> 157  no AIH117     B     273     264     122    1418     476 #> 158  no AIH118     B     425     402      86    1702     581 #> 159  no AIH119     B     315     418       0     595     305 #> 160  no AIH120     B     463     379      71     626     313 #> 161  no AIH121     B      94     413      46     400     229 #> 162  no AIH122     B     163     115     285     590     213 #> 163  no AIH123     B       0       0       0    1053     362 #> 164  no AIH124     B       0       0       0     430      26 #> 165  no AIH125     B      83      61     299     476     219 #> 166  no AIH126     B     381     303       4     266     376 #> 167  no AIH127     B     253     106     134     626     189 #> 168  no AIH128     B     571      96      31     487     423 #> 169  no AIH129     B     288     298       0     347     411 #> 170  no AIH130     B     135     149     229     864     600  combs <- combi(data= demo_data, signalthr=450, combithr=1, case_class='A')  # compute combinations #> Error in combi(data = demo_data, signalthr = 450, combithr = 1, case_class = \"A\"): unused argument (case_class = \"A\")  # To show all the combinations with given markers.  combs_with(markers = c('Marker1', 'Marker2') , markers_table = combs) #> Error in combs_with(markers = c(\"Marker1\", \"Marker2\"), markers_table = combs): object 'combs' not found"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/demo_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) — demo_data","title":"Combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) — demo_data","text":"dataset containing signal intensity values 5-marker signatures Autoimmune Hepatitis (AIH). Samples clinically diagnosed “abnormal” (class ) \"normal\" (class B).","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/demo_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) — demo_data","text":"","code":"demo_data"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/demo_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) — demo_data","text":"data frame 170 rows 7 variables: Patient.ID ID samples Class class samples: -Healthy, B-AIH Marker1 signal intensity value Marker1 Marker2 signal intensity value Marker2 Marker3 signal intensity value Marker3 Marker4 signal intensity value Marker4 Marker5 signal intensity value Marker5","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/demo_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Combiroc built-in demo SeuratObject (https://cran.r-project.org/web/packages/SeuratObject/SeuratObject.pdf) — demo_seurat","title":"Combiroc built-in demo SeuratObject (https://cran.r-project.org/web/packages/SeuratObject/SeuratObject.pdf) — demo_seurat","text":"subset pbmc3k.SeuratData::pbmc3k.final object containing following genes: 'RBP7','CYP1B1','CD14','FCN1','NKG7' 'GNLY'","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/demo_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combiroc built-in demo SeuratObject (https://cran.r-project.org/web/packages/SeuratObject/SeuratObject.pdf) — demo_seurat","text":"","code":"demo_seurat"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/demo_seurat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Combiroc built-in demo SeuratObject (https://cran.r-project.org/web/packages/SeuratObject/SeuratObject.pdf) — demo_seurat","text":"subset PBMC3K SeuratObject (6 features)","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/demo_unclassified_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Combiroc built-in unclassified demo data — demo_unclassified_data","title":"Combiroc built-in unclassified demo data — demo_unclassified_data","text":"dataset containing signal intensity values 5-marker signatures Autoimmune Hepatitis (AIH). dataset obtained randomly picking 20 samples demo_data without classification.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/demo_unclassified_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combiroc built-in unclassified demo data — demo_unclassified_data","text":"","code":"demo_unclassified_data"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/demo_unclassified_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Combiroc built-in unclassified demo data — demo_unclassified_data","text":"data frame 20 rows 7 variables: Patient.ID ID samples Marker1 signal intensity value Marker1 Marker2 signal intensity value Marker2 Marker3 signal intensity value Marker3 Marker4 signal intensity value Marker4 Marker5 signal intensity value Marker5","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load CombiROC data. — load_data","title":"Load CombiROC data. — load_data","text":"customized read.table() function checks conformity dataset format, checks passed, loads .","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load CombiROC data. — load_data","text":"","code":"load_data(data, sep = \";\", na.strings = \"\", labelled_data = TRUE)"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load CombiROC data. — load_data","text":"data name file data read . sep field separator character. na.strings character vector strings interpreted NA values. labelled_data boolean specifies whether combiroc data loaded labelled ('Class' column) .","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load CombiROC data. — load_data","text":"data frame (data.frame) containing representation data file.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/load_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load CombiROC data. — load_data","text":"dataset analysed text format, can comma, tab semicolon separated: 1st column must contain patient/sample IDs characters. dataset labelled, 2nd column must contain class sample belongs. classes must exactly 2 must written character format. 3rd column (2nd dataset unlabelled), dataset must contain numerical values represent signal corresponding markers abundance sample (marker-related columns). Marker-related columns can called 'Marker1, Marker2, Marker3, ...' can called directly gene/protein name, \"-\" allowed column name. checks passed, reorders alphabetically marker-related columns depending marker names (necessary proper computation combinations), forces \"Class\" 2nd column name.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/load_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load CombiROC data. — load_data","text":"","code":"demo_data # combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) #>     Patient.ID Class Marker1 Marker2 Marker3 Marker4 Marker5 #> 1         AIH1     A     438     187     197     298     139 #> 2         AIH2     A     345     293     134     523     335 #> 3         AIH3     A     903     392     300    1253       0 #> 4         AIH4     A     552     267     296     666      22 #> 5         AIH5     A    1451     760     498     884     684 #> 6         AIH6     A     497     260     175     640     572 #> 7         AIH7     A    3878    2858     510    1518     348 #> 8         AIH8     A     740     368     266    1391     647 #> 9         AIH9     A     538     412     282    1071     474 #> 10       AIH10     A    1194    1065     442    1530     816 #> 11       AIH11     A     988     817     394    1626    1028 #> 12       AIH12     A     261     153     528     449     237 #> 13       AIH13     A     312     181      58     408     661 #> 14       AIH14     A     499     302     181    1088     568 #> 15       AIH15     A     998     431      75     397     519 #> 16       AIH16     A    6485    3704    8834    2595    1570 #> 17       AIH17     A    8584    2662   13178    3390    2757 #> 18       AIH18     A    1696    1029     369     468    2422 #> 19       AIH19     A     774     505     251    1014     517 #> 20       AIH20     A     433     330      92    1266     743 #> 21       AIH21     A    1207    1501      57    1847     741 #> 22       AIH22     A     225     849     125     330     168 #> 23       AIH23     A    1327     485     366     563     878 #> 24       AIH24     A      76     582     601     115      73 #> 25       AIH25     A     586     256      53     710      74 #> 26       AIH26     A     263     196     124     798      95 #> 27       AIH27     A     146     568      64     125      92 #> 28       AIH28     A     537     620      82     350      53 #> 29       AIH29     A      52      41     588     346      50 #> 30       AIH30     A     882     138      47     601      85 #> 31       AIH31     A     462     304      81     378     208 #> 32       AIH32     A     372     149       0     460     156 #> 33       AIH33     A    1964     875     404    1883    1021 #> 34       AIH34     A    2809    1633     451    1042     608 #> 35       AIH35     A     994     505     303    1699     783 #> 36       AIH36     A     361     185     115     466     520 #> 37       AIH37     A     275     384      45     329     466 #> 38       AIH38     A     947     622      16     236     728 #> 39       AIH39     A     405     133      32     284     358 #> 40       AIH40     A     922     689      68     105     643 #> 41     no AIH1     B     510      28       0     332       0 #> 42     no AIH2     B     205       0       0     332       0 #> 43     no AIH3     B      44       0       0     332      21 #> 44     no AIH4     B      49      38       7     178      48 #> 45     no AIH5     B      26      33       6     131      32 #> 46     no AIH6     B      24      26       8     206      28 #> 47     no AIH7     B     243     373     109     631     477 #> 48     no AIH8     B      99     111      51     193     197 #> 49     no AIH9     B      85      55      71     811     321 #> 50    no AIH10     B     146     108      46     173     171 #> 51    no AIH11     B       0     113       0       0      56 #> 52    no AIH12     B     151       0       0     360       0 #> 53    no AIH13     B       0       0       0      15      21 #> 54    no AIH14     B       0       5       0     147      53 #> 55    no AIH15     B     118      69      13     748      97 #> 56    no AIH16     B      31      29       7     223      34 #> 57    no AIH17     B      72      53      12     376      85 #> 58    no AIH18     B     137     151      20     662     131 #> 59    no AIH19     B      78      58       6     368      49 #> 60    no AIH20     B     193      14      90     703     177 #> 61    no AIH21     B       0       0       0       0       0 #> 62    no AIH22     B       0      20       0      66      31 #> 63    no AIH23     B     351      70       0     478       7 #> 64    no AIH24     B     171     127      74    1202     224 #> 65    no AIH25     B      77      75      26     316      61 #> 66    no AIH26     B      51      45       2     286      44 #> 67    no AIH27     B      64      55      17     333      46 #> 68    no AIH28     B     150     185      42     975     252 #> 69    no AIH29     B     149     140      52    1087     209 #> 70    no AIH30     B     147     103      19     794      98 #> 71    no AIH31     B      86      89      44     427     144 #> 72    no AIH32     B      94      57      18     581      88 #> 73    no AIH33     B      56      41      23     244      49 #> 74    no AIH34     B      10      15       2     121      26 #> 75    no AIH35     B      46      22       0      69      24 #> 76    no AIH36     B      84      65       4     278      77 #> 77    no AIH37     B      42      44      19     306      86 #> 78    no AIH38     B      46      51      24     342      74 #> 79    no AIH39     B      73      39       9     358      41 #> 80    no AIH40     B      83     131      27    1012     124 #> 81    no AIH41     B       0     193      50     382     135 #> 82    no AIH42     B      41      94      64     464     141 #> 83    no AIH43     B       0      77      46     398      85 #> 84    no AIH44     B      98     152      91     469     301 #> 85    no AIH45     B      78      85      10     407       0 #> 86    no AIH46     B      21      16       0     536      16 #> 87    no AIH47     B      44      34      74     266      21 #> 88    no AIH48     B     144      76      63     252       0 #> 89    no AIH49     B     162     249     101     134       0 #> 90    no AIH50     B     100     169      33    1430       0 #> 91    no AIH51     B      52     159      57     681     417 #> 92    no AIH52     B      97      86      64     591      33 #> 93    no AIH53     B      73      80      20     157      51 #> 94    no AIH54     B     162     117      25     749       0 #> 95    no AIH55     B     100     220      37     729      41 #> 96    no AIH56     B     227     174      26     290       0 #> 97    no AIH57     B     136     165      23     315      40 #> 98    no AIH58     B      96     213      47     682     780 #> 99    no AIH59     B      69      59      21     629     245 #> 100   no AIH60     B      74      70      67     138     215 #> 101   no AIH61     B     129     118      44     117     769 #> 102   no AIH62     B     265     173     115    1157    1310 #> 103   no AIH63     B     308     265     290    2464     840 #> 104   no AIH64     B     276     179     203    1848     563 #> 105   no AIH65     B     173     119     194    2245     726 #> 106   no AIH66     B     354     156       0     227     109 #> 107   no AIH67     B      73      25       0     267      68 #> 108   no AIH68     B     111      80      42     384     180 #> 109   no AIH69     B     148      90      54     479     235 #> 110   no AIH70     B     229     367      12       3     595 #> 111   no AIH71     B     388     316       0       0       0 #> 112   no AIH72     B       0       5       0     300     323 #> 113   no AIH73     B       0      66      22      92       0 #> 114   no AIH74     B       0      47       0     337       0 #> 115   no AIH75     B       0     256      42     760       0 #> 116   no AIH76     B     107      61      26     391       0 #> 117   no AIH77     B     174     109      57     428     223 #> 118   no AIH78     B      42      46      13     235     319 #> 119   no AIH79     B     180     146      34     362     249 #> 120   no AIH80     B      79      66      57     378     307 #> 121   no AIH81     B     419      86      51     376     533 #> 122   no AIH82     B     448     133      95     631     122 #> 123   no AIH83     B       0     119      49     399     154 #> 124   no AIH84     B     148      90      67     285     167 #> 125   no AIH85     B      11     155      19     231       0 #> 126   no AIH86     B     165     162     167     912     405 #> 127   no AIH87     B     320     150      88     107    4114 #> 128   no AIH88     B     146      87     111     395     238 #> 129   no AIH89     B      90     102      62     112     267 #> 130   no AIH90     B     257     188     171     644     347 #> 131   no AIH91     B     106      60      63     336       0 #> 132   no AIH92     B    1223     584     640     256       0 #> 133   no AIH93     B     519     287     283       0       0 #> 134   no AIH94     B     327     240     101     102       0 #> 135   no AIH95     B     559    2142      59     279     413 #> 136   no AIH96     B     202     201      29     248       0 #> 137   no AIH97     B     212      88      45     472       0 #> 138   no AIH98     B     426     125      68      99     566 #> 139   no AIH99     B     260     135     105     285      34 #> 140  no AIH100     B     371     257      96     528      75 #> 141  no AIH101     B     254      99     105     332      13 #> 142  no AIH102     B     107      86     121     786     168 #> 143  no AIH103     B     265     209      40     328      10 #> 144  no AIH104     B     201     189      31     559       0 #> 145  no AIH105     B      79      63      38     159       2 #> 146  no AIH106     B     111      34      32     343      13 #> 147  no AIH107     B     130     185       0     577     923 #> 148  no AIH108     B      58      29      11     545       0 #> 149  no AIH109     B      49      56      34     390       0 #> 150  no AIH110     B     158     165      68     227       0 #> 151  no AIH111     B     159     205      25     151      32 #> 152  no AIH112     B     144     155      25     600       0 #> 153  no AIH113     B     111     155      83     179      65 #> 154  no AIH114     B     224     115      27     276      67 #> 155  no AIH115     B      85      85      13     123      48 #> 156  no AIH116     B     362     296      11     176      72 #> 157  no AIH117     B     273     264     122    1418     476 #> 158  no AIH118     B     425     402      86    1702     581 #> 159  no AIH119     B     315     418       0     595     305 #> 160  no AIH120     B     463     379      71     626     313 #> 161  no AIH121     B      94     413      46     400     229 #> 162  no AIH122     B     163     115     285     590     213 #> 163  no AIH123     B       0       0       0    1053     362 #> 164  no AIH124     B       0       0       0     430      26 #> 165  no AIH125     B      83      61     299     476     219 #> 166  no AIH126     B     381     303       4     266     376 #> 167  no AIH127     B     253     106     134     626     189 #> 168  no AIH128     B     571      96      31     487     423 #> 169  no AIH129     B     288     298       0     347     411 #> 170  no AIH130     B     135     149     229     864     600  # save a data.frame as a csv to be load by combiroc package file<- tempfile() write.csv2(demo_data, file = file, row.names = FALSE)   #To load a csv file if correctly formatted  demo_data <- load_data(data = file, sep = ';', na.strings = \"\")   demo_unclassified_data # combiroc built-in unclassified demo data #>    Patient.ID Marker1 Marker2 Marker3 Marker4 Marker5 #> 1       AIH33    1964     875     404    1883    1021 #> 2   no AIH126     381     303       4     266     376 #> 3       AIH12     261     153     528     449     237 #> 4   no AIH112     144     155      25     600       0 #> 5    no AIH41       0     193      50     382     135 #> 6    no AIH38      46      51      24     342      74 #> 7        AIH4     552     267     296     666      22 #> 8    no AIH32      94      57      18     581      88 #> 9       AIH20     433     330      92    1266     743 #> 10   no AIH13       0       0       0      15      21 #> 11   no AIH11       0     113       0       0      56 #> 12  no AIH114     224     115      27     276      67 #> 13  no AIH121      94     413      46     400     229 #> 14      AIH17    8584    2662   13178    3390    2757 #> 15      AIH14     499     302     181    1088     568 #> 16  no AIH106     111      34      32     343      13 #> 17   no AIH67      73      25       0     267      68 #> 18       AIH9     538     412     282    1071     474 #> 19   no AIH74       0      47       0     337       0 #> 20      AIH16    6485    3704    8834    2595    1570  # save a data.frame as a csv to be load by combiroc package file<- tempfile() write.csv2(demo_unclassified_data, file = file, row.names = FALSE)  # To load an unclassified dataset.  demo_unclassified_data <- load_data(data = file, sep = ';', na.strings = \"\", labelled_data = FALSE) #> Error in load_data(data = file, sep = \";\", na.strings = \"\", labelled_data = FALSE): unused argument (labelled_data = FALSE)"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/markers_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Show distribution of intensity values for all the markers both singularly and all together. — markers_distribution","title":"Show distribution of intensity values for all the markers both singularly and all together. — markers_distribution","text":"function takes input data long format, shows signal intensity value markers distributed.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/markers_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show distribution of intensity values for all the markers both singularly and all together. — markers_distribution","text":"","code":"markers_distribution(   data_long,   min_SE = 0,   min_SP = 0,   x_lim = NULL,   y_lim = NULL,   boxplot_lim = NULL,   signalthr_prediction = FALSE,   case_class )"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/markers_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show distribution of intensity values for all the markers both singularly and all together. — markers_distribution","text":"data_long data.frame long format returned combiroc_long() min_SE numeric specifies min value SE threshold must included $Coord. min_SP numeric specifies min value SP threshold must included $Coord. x_lim numeric setting max values x visualized density plot (zoom , data loss). y_lim numeric setting max values y visualized density plot (zoom , data loss). boxplot_lim numeric setting max values y visualized boxplot (zoom , data loss). signalthr_prediction boolean specifies density plot also show \"suggested signal threshold\". case_class character specifies two classes dataset case class.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/markers_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show distribution of intensity values for all the markers both singularly and all together. — markers_distribution","text":"named list containing 'Coord' 'Density_summary' data.frames, 'ROC', 'Boxplot' 'Density_plot' plot objects.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/markers_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show distribution of intensity values for all the markers both singularly and all together. — markers_distribution","text":"function returns named list containing following objects: “Density_plot”: density plot showing distribution signal intensity values classes. \"Density_summary\": data.frame showing summary statistics distributions. “ROC”: ROC curve showing many real positive samples found positive (SE) many real negative samples found negative (SP) function signal threshold. NB: SE SP refereed signal intensity threshold considering markers together; equal SE/SP single marker/combination found se_sp(). “Coord”: data.frame contains coordinates described “ROC” (threshold, SP SE) least min SE (40 default) min SP (80 default). \"Boxplot\": boxplot showing distribution signal intensity values marker singularly, classes. case lack priori known threshold user can set set signalthr_prediction= TRUE. way function provides \"suggested signal threshold\" corresponds median singnal threshold values (\"Coord\") SE/SP grater equal set minimal values (min_SE min_SP), adds threshold \"Density_plot\" object dashed black line. use median allows pick threshold whose SE/SP close limits (min_SE min_SP), recommended always inspect \"Coord\" choose appropriate signal threshold considering SP, SE Youden index.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/markers_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show distribution of intensity values for all the markers both singularly and all together. — markers_distribution","text":"","code":"demo_data # combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) #>     Patient.ID Class Marker1 Marker2 Marker3 Marker4 Marker5 #> 1         AIH1     A     438     187     197     298     139 #> 2         AIH2     A     345     293     134     523     335 #> 3         AIH3     A     903     392     300    1253       0 #> 4         AIH4     A     552     267     296     666      22 #> 5         AIH5     A    1451     760     498     884     684 #> 6         AIH6     A     497     260     175     640     572 #> 7         AIH7     A    3878    2858     510    1518     348 #> 8         AIH8     A     740     368     266    1391     647 #> 9         AIH9     A     538     412     282    1071     474 #> 10       AIH10     A    1194    1065     442    1530     816 #> 11       AIH11     A     988     817     394    1626    1028 #> 12       AIH12     A     261     153     528     449     237 #> 13       AIH13     A     312     181      58     408     661 #> 14       AIH14     A     499     302     181    1088     568 #> 15       AIH15     A     998     431      75     397     519 #> 16       AIH16     A    6485    3704    8834    2595    1570 #> 17       AIH17     A    8584    2662   13178    3390    2757 #> 18       AIH18     A    1696    1029     369     468    2422 #> 19       AIH19     A     774     505     251    1014     517 #> 20       AIH20     A     433     330      92    1266     743 #> 21       AIH21     A    1207    1501      57    1847     741 #> 22       AIH22     A     225     849     125     330     168 #> 23       AIH23     A    1327     485     366     563     878 #> 24       AIH24     A      76     582     601     115      73 #> 25       AIH25     A     586     256      53     710      74 #> 26       AIH26     A     263     196     124     798      95 #> 27       AIH27     A     146     568      64     125      92 #> 28       AIH28     A     537     620      82     350      53 #> 29       AIH29     A      52      41     588     346      50 #> 30       AIH30     A     882     138      47     601      85 #> 31       AIH31     A     462     304      81     378     208 #> 32       AIH32     A     372     149       0     460     156 #> 33       AIH33     A    1964     875     404    1883    1021 #> 34       AIH34     A    2809    1633     451    1042     608 #> 35       AIH35     A     994     505     303    1699     783 #> 36       AIH36     A     361     185     115     466     520 #> 37       AIH37     A     275     384      45     329     466 #> 38       AIH38     A     947     622      16     236     728 #> 39       AIH39     A     405     133      32     284     358 #> 40       AIH40     A     922     689      68     105     643 #> 41     no AIH1     B     510      28       0     332       0 #> 42     no AIH2     B     205       0       0     332       0 #> 43     no AIH3     B      44       0       0     332      21 #> 44     no AIH4     B      49      38       7     178      48 #> 45     no AIH5     B      26      33       6     131      32 #> 46     no AIH6     B      24      26       8     206      28 #> 47     no AIH7     B     243     373     109     631     477 #> 48     no AIH8     B      99     111      51     193     197 #> 49     no AIH9     B      85      55      71     811     321 #> 50    no AIH10     B     146     108      46     173     171 #> 51    no AIH11     B       0     113       0       0      56 #> 52    no AIH12     B     151       0       0     360       0 #> 53    no AIH13     B       0       0       0      15      21 #> 54    no AIH14     B       0       5       0     147      53 #> 55    no AIH15     B     118      69      13     748      97 #> 56    no AIH16     B      31      29       7     223      34 #> 57    no AIH17     B      72      53      12     376      85 #> 58    no AIH18     B     137     151      20     662     131 #> 59    no AIH19     B      78      58       6     368      49 #> 60    no AIH20     B     193      14      90     703     177 #> 61    no AIH21     B       0       0       0       0       0 #> 62    no AIH22     B       0      20       0      66      31 #> 63    no AIH23     B     351      70       0     478       7 #> 64    no AIH24     B     171     127      74    1202     224 #> 65    no AIH25     B      77      75      26     316      61 #> 66    no AIH26     B      51      45       2     286      44 #> 67    no AIH27     B      64      55      17     333      46 #> 68    no AIH28     B     150     185      42     975     252 #> 69    no AIH29     B     149     140      52    1087     209 #> 70    no AIH30     B     147     103      19     794      98 #> 71    no AIH31     B      86      89      44     427     144 #> 72    no AIH32     B      94      57      18     581      88 #> 73    no AIH33     B      56      41      23     244      49 #> 74    no AIH34     B      10      15       2     121      26 #> 75    no AIH35     B      46      22       0      69      24 #> 76    no AIH36     B      84      65       4     278      77 #> 77    no AIH37     B      42      44      19     306      86 #> 78    no AIH38     B      46      51      24     342      74 #> 79    no AIH39     B      73      39       9     358      41 #> 80    no AIH40     B      83     131      27    1012     124 #> 81    no AIH41     B       0     193      50     382     135 #> 82    no AIH42     B      41      94      64     464     141 #> 83    no AIH43     B       0      77      46     398      85 #> 84    no AIH44     B      98     152      91     469     301 #> 85    no AIH45     B      78      85      10     407       0 #> 86    no AIH46     B      21      16       0     536      16 #> 87    no AIH47     B      44      34      74     266      21 #> 88    no AIH48     B     144      76      63     252       0 #> 89    no AIH49     B     162     249     101     134       0 #> 90    no AIH50     B     100     169      33    1430       0 #> 91    no AIH51     B      52     159      57     681     417 #> 92    no AIH52     B      97      86      64     591      33 #> 93    no AIH53     B      73      80      20     157      51 #> 94    no AIH54     B     162     117      25     749       0 #> 95    no AIH55     B     100     220      37     729      41 #> 96    no AIH56     B     227     174      26     290       0 #> 97    no AIH57     B     136     165      23     315      40 #> 98    no AIH58     B      96     213      47     682     780 #> 99    no AIH59     B      69      59      21     629     245 #> 100   no AIH60     B      74      70      67     138     215 #> 101   no AIH61     B     129     118      44     117     769 #> 102   no AIH62     B     265     173     115    1157    1310 #> 103   no AIH63     B     308     265     290    2464     840 #> 104   no AIH64     B     276     179     203    1848     563 #> 105   no AIH65     B     173     119     194    2245     726 #> 106   no AIH66     B     354     156       0     227     109 #> 107   no AIH67     B      73      25       0     267      68 #> 108   no AIH68     B     111      80      42     384     180 #> 109   no AIH69     B     148      90      54     479     235 #> 110   no AIH70     B     229     367      12       3     595 #> 111   no AIH71     B     388     316       0       0       0 #> 112   no AIH72     B       0       5       0     300     323 #> 113   no AIH73     B       0      66      22      92       0 #> 114   no AIH74     B       0      47       0     337       0 #> 115   no AIH75     B       0     256      42     760       0 #> 116   no AIH76     B     107      61      26     391       0 #> 117   no AIH77     B     174     109      57     428     223 #> 118   no AIH78     B      42      46      13     235     319 #> 119   no AIH79     B     180     146      34     362     249 #> 120   no AIH80     B      79      66      57     378     307 #> 121   no AIH81     B     419      86      51     376     533 #> 122   no AIH82     B     448     133      95     631     122 #> 123   no AIH83     B       0     119      49     399     154 #> 124   no AIH84     B     148      90      67     285     167 #> 125   no AIH85     B      11     155      19     231       0 #> 126   no AIH86     B     165     162     167     912     405 #> 127   no AIH87     B     320     150      88     107    4114 #> 128   no AIH88     B     146      87     111     395     238 #> 129   no AIH89     B      90     102      62     112     267 #> 130   no AIH90     B     257     188     171     644     347 #> 131   no AIH91     B     106      60      63     336       0 #> 132   no AIH92     B    1223     584     640     256       0 #> 133   no AIH93     B     519     287     283       0       0 #> 134   no AIH94     B     327     240     101     102       0 #> 135   no AIH95     B     559    2142      59     279     413 #> 136   no AIH96     B     202     201      29     248       0 #> 137   no AIH97     B     212      88      45     472       0 #> 138   no AIH98     B     426     125      68      99     566 #> 139   no AIH99     B     260     135     105     285      34 #> 140  no AIH100     B     371     257      96     528      75 #> 141  no AIH101     B     254      99     105     332      13 #> 142  no AIH102     B     107      86     121     786     168 #> 143  no AIH103     B     265     209      40     328      10 #> 144  no AIH104     B     201     189      31     559       0 #> 145  no AIH105     B      79      63      38     159       2 #> 146  no AIH106     B     111      34      32     343      13 #> 147  no AIH107     B     130     185       0     577     923 #> 148  no AIH108     B      58      29      11     545       0 #> 149  no AIH109     B      49      56      34     390       0 #> 150  no AIH110     B     158     165      68     227       0 #> 151  no AIH111     B     159     205      25     151      32 #> 152  no AIH112     B     144     155      25     600       0 #> 153  no AIH113     B     111     155      83     179      65 #> 154  no AIH114     B     224     115      27     276      67 #> 155  no AIH115     B      85      85      13     123      48 #> 156  no AIH116     B     362     296      11     176      72 #> 157  no AIH117     B     273     264     122    1418     476 #> 158  no AIH118     B     425     402      86    1702     581 #> 159  no AIH119     B     315     418       0     595     305 #> 160  no AIH120     B     463     379      71     626     313 #> 161  no AIH121     B      94     413      46     400     229 #> 162  no AIH122     B     163     115     285     590     213 #> 163  no AIH123     B       0       0       0    1053     362 #> 164  no AIH124     B       0       0       0     430      26 #> 165  no AIH125     B      83      61     299     476     219 #> 166  no AIH126     B     381     303       4     266     376 #> 167  no AIH127     B     253     106     134     626     189 #> 168  no AIH128     B     571      96      31     487     423 #> 169  no AIH129     B     288     298       0     347     411 #> 170  no AIH130     B     135     149     229     864     600  demo_data_long <- combiroc_long(data = demo_data) # long format data     # To visualize the distribution of the expression of each marker.  distributions <- markers_distribution(data_long = demo_data_long,                                        boxplot_lim = 1500, y_lim = 0.001,                                        x_lim = 3000 , signalthr_prediction = FALSE,                                        case_class = 'A', min_SE = 40, min_SP = 80) #> Warning: In $Coord object you will see only the signal threshold values at which SE>=40 and SP>=80 by default. If you want to change this limits, please set min_SE and min_SP  distributions$Density_plot # density plot  distributions$Density_summary # summary statistics of density plot #>   # observations Min   Max Median     Mean 1st Q. 3rd Q.        SD #> A             40   0 13178    461 813.7600 233.25    825 1427.1854 #> B            130   0  4114    106 206.0123  38.00    266  317.7782 distributions$ROC # ROC showing signal threshold range ensuring min SE and/or SP  distributions$Coord # ROC values #>     threshold specificity sensitivity    Youden #> 238     315.5          80          65 0.4453846 #> 239     317.5          80          65 0.4484615 #> 240     319.5          80          65 0.4500000 #> 241     320.5          80          65 0.4515385 #> 242     322.0          80          65 0.4530769 #> 243     325.0          80          65 0.4546154 #> 244     327.5          81          65 0.4561538 #> 245     328.5          81          65 0.4576923 #> 246     329.5          81          64 0.4526923 #> 247     331.0          81          64 0.4426923 #> 248     332.5          81          64 0.4488462 #> 249     334.0          82          64 0.4503846 #> 250     335.5          82          63 0.4453846 #> 251     336.5          82          63 0.4469231 #> 252     339.5          82          63 0.4484615 #> 253     342.5          82          63 0.4500000 #> 254     344.0          82          63 0.4515385 #> 255     345.5          82          62 0.4465385 #> 256     346.5          82          62 0.4415385 #> 257     347.5          82          62 0.4446154 #> 258     349.0          82          62 0.4396154 #> 259     350.5          82          61 0.4346154 #> 260     352.5          83          61 0.4361538 #> 261     356.0          83          61 0.4376923 #> 262     359.0          83          60 0.4342308 #> 263     360.5          83          60 0.4357692 #> 264     361.5          83          60 0.4307692 #> 265     364.0          84          60 0.4353846 #> 266     366.5          84          60 0.4303846 #> 267     367.5          84          60 0.4319231 #> 268     368.5          84          59 0.4284615 #> 269     370.0          84          58 0.4234615 #> 270     371.5          84          58 0.4250000 #> 271     372.5          84          58 0.4200000 #> 272     374.5          84          58 0.4215385 #> 273     377.0          85          58 0.4261538 #> 274     378.5          85          57 0.4226923 #> 275     380.0          85          57 0.4242308 #> 276     381.5          85          57 0.4257692 #> 277     383.0          85          57 0.4273077 #> 278     386.0          85          57 0.4238462 #> 279     389.0          86          57 0.4253846 #> 280     390.5          86          57 0.4269231 #> 281     391.5          86          57 0.4284615 #> 282     393.0          86          56 0.4234615 #> 283     394.5          86          56 0.4184615 #> 284     396.0          86          56 0.4200000 #> 285     397.5          86          56 0.4150000 #> 286     398.5          86          56 0.4165385 #> 287     399.5          86          56 0.4180769 #> 288     401.0          86          56 0.4196154 #> 289     403.0          87          56 0.4211538 #> 290     404.5          87          55 0.4161538 #> 291     406.0          87          55 0.4126923 #> 292     407.5          87          55 0.4142308 #> 293     409.5          87          54 0.4092308 #> 294     411.5          87          54 0.4107692 #> 295     412.5          87          54 0.4057692 #> 296     415.0          87          54 0.4088462 #> 297     417.5          88          54 0.4103846 #> 298     418.5          88          54 0.4119231 #> 299     421.0          88          54 0.4134615 #> 300     424.0          88          54 0.4150000 #> 301     425.5          88          54 0.4165385 #> 302     426.5          88          54 0.4180769 #> 303     427.5          88          54 0.4196154 #> 304     429.0          89          54 0.4211538 #> 305     430.5          89          54 0.4226923 #> 306     432.0          89          53 0.4176923 #> 307     435.5          89          52 0.4126923 #> 308     440.0          89          52 0.4076923 #> 309     445.0          89          52 0.4026923 #> 310     448.5          89          52 0.4042308 #> 311     450.0          89          51 0.3992308 #> 312     455.5          89          50 0.3942308 #> 313     461.0          89          50 0.3892308 #> 314     462.5          89          50 0.3842308 #> 315     463.5          89          50 0.3857692 #> 316     465.0          89          50 0.3873077 #> 317     467.0          89          48 0.3773077 #> 318     468.5          89          48 0.3723077 #> 319     470.5          89          48 0.3738462 #> 320     473.0          90          48 0.3753846 #> 321     475.0          90          48 0.3703846 #> 322     476.5          90          48 0.3734615 #> 323     477.5          90          48 0.3750000 #> 324     478.5          90          48 0.3765385 #> 325     482.0          90          48 0.3780769 #> 326     486.0          90          47 0.3730769 #> 327     492.0          90          47 0.3746154 #> 328     497.5          90          46 0.3696154 #> 329     498.5          90          46 0.3646154 #> 330     502.0          90          46 0.3596154 #> 331     507.5          90          44 0.3496154 #> 332     513.5          91          44 0.3461538 #> 333     518.0          91          44 0.3411538 #> 334     519.5          91          43 0.3376923 #> 335     521.5          91          42 0.3326923 #> 336     525.5          91          42 0.3276923 #> 337     530.5          91          42 0.3242308 #> 338     534.5          91          42 0.3257692 #> 339     536.5          91          42 0.3273077 #> 340     537.5          91          41 0.3223077 #> 341     541.5          91          40 0.3173077 #> 342     548.5          91          40 0.3188462 #> 343     555.5          91          40 0.3138462 #> 344     561.0          92          40 0.3169231 #> 345     564.5          92          40 0.3134615 #> 346     567.0          92          40 0.3150000 distributions$Boxplot # Boxplot"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/ranked_combs.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank combinations. — ranked_combs","title":"Rank combinations. — ranked_combs","text":"function rank combinations Youden index select min SE /SP.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/ranked_combs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank combinations. — ranked_combs","text":"","code":"ranked_combs(combo_table, min_SE = 0, min_SP = 0)"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/ranked_combs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank combinations. — ranked_combs","text":"combo_table data.frame SE, SP number composing markers combination (returned se_sp()). min_SE numeric specifies min value SE combination must filtered-. min_SP numeric specifies min value SP combination must filtered-.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/ranked_combs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank combinations. — ranked_combs","text":"named list containing: $table, data.frame ranked combination, reporting: SE, SP, number markers composing combination score. $bubble_chart, dot plot showing selected 'gold' combinations","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/ranked_combs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rank combinations. — ranked_combs","text":"function meant help user finding best combinations (first rows) allows also (mandatory) SE/SP-dependent filtering combinations.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/ranked_combs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rank combinations. — ranked_combs","text":"","code":"demo_data # combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) #>     Patient.ID Class Marker1 Marker2 Marker3 Marker4 Marker5 #> 1         AIH1     A     438     187     197     298     139 #> 2         AIH2     A     345     293     134     523     335 #> 3         AIH3     A     903     392     300    1253       0 #> 4         AIH4     A     552     267     296     666      22 #> 5         AIH5     A    1451     760     498     884     684 #> 6         AIH6     A     497     260     175     640     572 #> 7         AIH7     A    3878    2858     510    1518     348 #> 8         AIH8     A     740     368     266    1391     647 #> 9         AIH9     A     538     412     282    1071     474 #> 10       AIH10     A    1194    1065     442    1530     816 #> 11       AIH11     A     988     817     394    1626    1028 #> 12       AIH12     A     261     153     528     449     237 #> 13       AIH13     A     312     181      58     408     661 #> 14       AIH14     A     499     302     181    1088     568 #> 15       AIH15     A     998     431      75     397     519 #> 16       AIH16     A    6485    3704    8834    2595    1570 #> 17       AIH17     A    8584    2662   13178    3390    2757 #> 18       AIH18     A    1696    1029     369     468    2422 #> 19       AIH19     A     774     505     251    1014     517 #> 20       AIH20     A     433     330      92    1266     743 #> 21       AIH21     A    1207    1501      57    1847     741 #> 22       AIH22     A     225     849     125     330     168 #> 23       AIH23     A    1327     485     366     563     878 #> 24       AIH24     A      76     582     601     115      73 #> 25       AIH25     A     586     256      53     710      74 #> 26       AIH26     A     263     196     124     798      95 #> 27       AIH27     A     146     568      64     125      92 #> 28       AIH28     A     537     620      82     350      53 #> 29       AIH29     A      52      41     588     346      50 #> 30       AIH30     A     882     138      47     601      85 #> 31       AIH31     A     462     304      81     378     208 #> 32       AIH32     A     372     149       0     460     156 #> 33       AIH33     A    1964     875     404    1883    1021 #> 34       AIH34     A    2809    1633     451    1042     608 #> 35       AIH35     A     994     505     303    1699     783 #> 36       AIH36     A     361     185     115     466     520 #> 37       AIH37     A     275     384      45     329     466 #> 38       AIH38     A     947     622      16     236     728 #> 39       AIH39     A     405     133      32     284     358 #> 40       AIH40     A     922     689      68     105     643 #> 41     no AIH1     B     510      28       0     332       0 #> 42     no AIH2     B     205       0       0     332       0 #> 43     no AIH3     B      44       0       0     332      21 #> 44     no AIH4     B      49      38       7     178      48 #> 45     no AIH5     B      26      33       6     131      32 #> 46     no AIH6     B      24      26       8     206      28 #> 47     no AIH7     B     243     373     109     631     477 #> 48     no AIH8     B      99     111      51     193     197 #> 49     no AIH9     B      85      55      71     811     321 #> 50    no AIH10     B     146     108      46     173     171 #> 51    no AIH11     B       0     113       0       0      56 #> 52    no AIH12     B     151       0       0     360       0 #> 53    no AIH13     B       0       0       0      15      21 #> 54    no AIH14     B       0       5       0     147      53 #> 55    no AIH15     B     118      69      13     748      97 #> 56    no AIH16     B      31      29       7     223      34 #> 57    no AIH17     B      72      53      12     376      85 #> 58    no AIH18     B     137     151      20     662     131 #> 59    no AIH19     B      78      58       6     368      49 #> 60    no AIH20     B     193      14      90     703     177 #> 61    no AIH21     B       0       0       0       0       0 #> 62    no AIH22     B       0      20       0      66      31 #> 63    no AIH23     B     351      70       0     478       7 #> 64    no AIH24     B     171     127      74    1202     224 #> 65    no AIH25     B      77      75      26     316      61 #> 66    no AIH26     B      51      45       2     286      44 #> 67    no AIH27     B      64      55      17     333      46 #> 68    no AIH28     B     150     185      42     975     252 #> 69    no AIH29     B     149     140      52    1087     209 #> 70    no AIH30     B     147     103      19     794      98 #> 71    no AIH31     B      86      89      44     427     144 #> 72    no AIH32     B      94      57      18     581      88 #> 73    no AIH33     B      56      41      23     244      49 #> 74    no AIH34     B      10      15       2     121      26 #> 75    no AIH35     B      46      22       0      69      24 #> 76    no AIH36     B      84      65       4     278      77 #> 77    no AIH37     B      42      44      19     306      86 #> 78    no AIH38     B      46      51      24     342      74 #> 79    no AIH39     B      73      39       9     358      41 #> 80    no AIH40     B      83     131      27    1012     124 #> 81    no AIH41     B       0     193      50     382     135 #> 82    no AIH42     B      41      94      64     464     141 #> 83    no AIH43     B       0      77      46     398      85 #> 84    no AIH44     B      98     152      91     469     301 #> 85    no AIH45     B      78      85      10     407       0 #> 86    no AIH46     B      21      16       0     536      16 #> 87    no AIH47     B      44      34      74     266      21 #> 88    no AIH48     B     144      76      63     252       0 #> 89    no AIH49     B     162     249     101     134       0 #> 90    no AIH50     B     100     169      33    1430       0 #> 91    no AIH51     B      52     159      57     681     417 #> 92    no AIH52     B      97      86      64     591      33 #> 93    no AIH53     B      73      80      20     157      51 #> 94    no AIH54     B     162     117      25     749       0 #> 95    no AIH55     B     100     220      37     729      41 #> 96    no AIH56     B     227     174      26     290       0 #> 97    no AIH57     B     136     165      23     315      40 #> 98    no AIH58     B      96     213      47     682     780 #> 99    no AIH59     B      69      59      21     629     245 #> 100   no AIH60     B      74      70      67     138     215 #> 101   no AIH61     B     129     118      44     117     769 #> 102   no AIH62     B     265     173     115    1157    1310 #> 103   no AIH63     B     308     265     290    2464     840 #> 104   no AIH64     B     276     179     203    1848     563 #> 105   no AIH65     B     173     119     194    2245     726 #> 106   no AIH66     B     354     156       0     227     109 #> 107   no AIH67     B      73      25       0     267      68 #> 108   no AIH68     B     111      80      42     384     180 #> 109   no AIH69     B     148      90      54     479     235 #> 110   no AIH70     B     229     367      12       3     595 #> 111   no AIH71     B     388     316       0       0       0 #> 112   no AIH72     B       0       5       0     300     323 #> 113   no AIH73     B       0      66      22      92       0 #> 114   no AIH74     B       0      47       0     337       0 #> 115   no AIH75     B       0     256      42     760       0 #> 116   no AIH76     B     107      61      26     391       0 #> 117   no AIH77     B     174     109      57     428     223 #> 118   no AIH78     B      42      46      13     235     319 #> 119   no AIH79     B     180     146      34     362     249 #> 120   no AIH80     B      79      66      57     378     307 #> 121   no AIH81     B     419      86      51     376     533 #> 122   no AIH82     B     448     133      95     631     122 #> 123   no AIH83     B       0     119      49     399     154 #> 124   no AIH84     B     148      90      67     285     167 #> 125   no AIH85     B      11     155      19     231       0 #> 126   no AIH86     B     165     162     167     912     405 #> 127   no AIH87     B     320     150      88     107    4114 #> 128   no AIH88     B     146      87     111     395     238 #> 129   no AIH89     B      90     102      62     112     267 #> 130   no AIH90     B     257     188     171     644     347 #> 131   no AIH91     B     106      60      63     336       0 #> 132   no AIH92     B    1223     584     640     256       0 #> 133   no AIH93     B     519     287     283       0       0 #> 134   no AIH94     B     327     240     101     102       0 #> 135   no AIH95     B     559    2142      59     279     413 #> 136   no AIH96     B     202     201      29     248       0 #> 137   no AIH97     B     212      88      45     472       0 #> 138   no AIH98     B     426     125      68      99     566 #> 139   no AIH99     B     260     135     105     285      34 #> 140  no AIH100     B     371     257      96     528      75 #> 141  no AIH101     B     254      99     105     332      13 #> 142  no AIH102     B     107      86     121     786     168 #> 143  no AIH103     B     265     209      40     328      10 #> 144  no AIH104     B     201     189      31     559       0 #> 145  no AIH105     B      79      63      38     159       2 #> 146  no AIH106     B     111      34      32     343      13 #> 147  no AIH107     B     130     185       0     577     923 #> 148  no AIH108     B      58      29      11     545       0 #> 149  no AIH109     B      49      56      34     390       0 #> 150  no AIH110     B     158     165      68     227       0 #> 151  no AIH111     B     159     205      25     151      32 #> 152  no AIH112     B     144     155      25     600       0 #> 153  no AIH113     B     111     155      83     179      65 #> 154  no AIH114     B     224     115      27     276      67 #> 155  no AIH115     B      85      85      13     123      48 #> 156  no AIH116     B     362     296      11     176      72 #> 157  no AIH117     B     273     264     122    1418     476 #> 158  no AIH118     B     425     402      86    1702     581 #> 159  no AIH119     B     315     418       0     595     305 #> 160  no AIH120     B     463     379      71     626     313 #> 161  no AIH121     B      94     413      46     400     229 #> 162  no AIH122     B     163     115     285     590     213 #> 163  no AIH123     B       0       0       0    1053     362 #> 164  no AIH124     B       0       0       0     430      26 #> 165  no AIH125     B      83      61     299     476     219 #> 166  no AIH126     B     381     303       4     266     376 #> 167  no AIH127     B     253     106     134     626     189 #> 168  no AIH128     B     571      96      31     487     423 #> 169  no AIH129     B     288     298       0     347     411 #> 170  no AIH130     B     135     149     229     864     600  combs <- combi(data= demo_data, signalthr=450, combithr=1, case_class='A')  # compute combinations #> Error in combi(data = demo_data, signalthr = 450, combithr = 1, case_class = \"A\"): unused argument (case_class = \"A\")                                                                   # compute SE and SP                                                                # of each combination    # To rank combinations by Youden index and filter-out the ones with SE < min_SE and SP < min_SP  rc <- ranked_combs(combo_table= combs, min_SE=40, min_SP=80) #> Error in unique(data$Class): argument \"data\" is missing, with no default rc$table # to visualize the selected gold combinations through a data.frame #> Error in eval(expr, envir, enclos): object 'rc' not found rc$bubble_chart # to visualize the selected gold combinations through a data.frame #> Error in eval(expr, envir, enclos): object 'rc' not found"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/roc_reports.html","id":null,"dir":"Reference","previous_headings":"","what":"Train logistic regression and compute ROC. — roc_reports","title":"Train logistic regression and compute ROC. — roc_reports","text":"function compute General Linear Model (binomial) corresponding ROC curves selected combination.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/roc_reports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train logistic regression and compute ROC. — roc_reports","text":"","code":"roc_reports(   data,   markers_table,   selected_combinations = NULL,   single_markers = NULL,   case_class,   deal_NA = \"impute\" )"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/roc_reports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train logistic regression and compute ROC. — roc_reports","text":"data data.frame returned load_data(). markers_table data.frame combinations corresponding positive samples counts, obtained combi(). selected_combinations numeric vector specifies combinations interest. single_markers character vector specifies single markers interest. case_class character specifies two classes dataset case class. deal_NA character specifies treat missing values. 'impute' NAs marker substituted median given marker values class observation belongs . 'remove' whole observations containing NA removed'.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/roc_reports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train logistic regression and compute ROC. — roc_reports","text":"named list containing 3 objects: \"Plot\", \"Metrics\" \"Models\".","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/roc_reports.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Train logistic regression and compute ROC. — roc_reports","text":"function trains logistic regression model combination returns named list containing 3 objects: \"Plot\": ggplot object ROC curves selected combinations. \"Metrics\": data.frame metrics roc curves (AUC, opt. cutoff, etc ...). \"Models\": list models (glm() objects) computed used classify samples (can find model equation selected combination).","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/roc_reports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train logistic regression and compute ROC. — roc_reports","text":"","code":"demo_data # combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) #>     Patient.ID Class Marker1 Marker2 Marker3 Marker4 Marker5 #> 1         AIH1     A     438     187     197     298     139 #> 2         AIH2     A     345     293     134     523     335 #> 3         AIH3     A     903     392     300    1253       0 #> 4         AIH4     A     552     267     296     666      22 #> 5         AIH5     A    1451     760     498     884     684 #> 6         AIH6     A     497     260     175     640     572 #> 7         AIH7     A    3878    2858     510    1518     348 #> 8         AIH8     A     740     368     266    1391     647 #> 9         AIH9     A     538     412     282    1071     474 #> 10       AIH10     A    1194    1065     442    1530     816 #> 11       AIH11     A     988     817     394    1626    1028 #> 12       AIH12     A     261     153     528     449     237 #> 13       AIH13     A     312     181      58     408     661 #> 14       AIH14     A     499     302     181    1088     568 #> 15       AIH15     A     998     431      75     397     519 #> 16       AIH16     A    6485    3704    8834    2595    1570 #> 17       AIH17     A    8584    2662   13178    3390    2757 #> 18       AIH18     A    1696    1029     369     468    2422 #> 19       AIH19     A     774     505     251    1014     517 #> 20       AIH20     A     433     330      92    1266     743 #> 21       AIH21     A    1207    1501      57    1847     741 #> 22       AIH22     A     225     849     125     330     168 #> 23       AIH23     A    1327     485     366     563     878 #> 24       AIH24     A      76     582     601     115      73 #> 25       AIH25     A     586     256      53     710      74 #> 26       AIH26     A     263     196     124     798      95 #> 27       AIH27     A     146     568      64     125      92 #> 28       AIH28     A     537     620      82     350      53 #> 29       AIH29     A      52      41     588     346      50 #> 30       AIH30     A     882     138      47     601      85 #> 31       AIH31     A     462     304      81     378     208 #> 32       AIH32     A     372     149       0     460     156 #> 33       AIH33     A    1964     875     404    1883    1021 #> 34       AIH34     A    2809    1633     451    1042     608 #> 35       AIH35     A     994     505     303    1699     783 #> 36       AIH36     A     361     185     115     466     520 #> 37       AIH37     A     275     384      45     329     466 #> 38       AIH38     A     947     622      16     236     728 #> 39       AIH39     A     405     133      32     284     358 #> 40       AIH40     A     922     689      68     105     643 #> 41     no AIH1     B     510      28       0     332       0 #> 42     no AIH2     B     205       0       0     332       0 #> 43     no AIH3     B      44       0       0     332      21 #> 44     no AIH4     B      49      38       7     178      48 #> 45     no AIH5     B      26      33       6     131      32 #> 46     no AIH6     B      24      26       8     206      28 #> 47     no AIH7     B     243     373     109     631     477 #> 48     no AIH8     B      99     111      51     193     197 #> 49     no AIH9     B      85      55      71     811     321 #> 50    no AIH10     B     146     108      46     173     171 #> 51    no AIH11     B       0     113       0       0      56 #> 52    no AIH12     B     151       0       0     360       0 #> 53    no AIH13     B       0       0       0      15      21 #> 54    no AIH14     B       0       5       0     147      53 #> 55    no AIH15     B     118      69      13     748      97 #> 56    no AIH16     B      31      29       7     223      34 #> 57    no AIH17     B      72      53      12     376      85 #> 58    no AIH18     B     137     151      20     662     131 #> 59    no AIH19     B      78      58       6     368      49 #> 60    no AIH20     B     193      14      90     703     177 #> 61    no AIH21     B       0       0       0       0       0 #> 62    no AIH22     B       0      20       0      66      31 #> 63    no AIH23     B     351      70       0     478       7 #> 64    no AIH24     B     171     127      74    1202     224 #> 65    no AIH25     B      77      75      26     316      61 #> 66    no AIH26     B      51      45       2     286      44 #> 67    no AIH27     B      64      55      17     333      46 #> 68    no AIH28     B     150     185      42     975     252 #> 69    no AIH29     B     149     140      52    1087     209 #> 70    no AIH30     B     147     103      19     794      98 #> 71    no AIH31     B      86      89      44     427     144 #> 72    no AIH32     B      94      57      18     581      88 #> 73    no AIH33     B      56      41      23     244      49 #> 74    no AIH34     B      10      15       2     121      26 #> 75    no AIH35     B      46      22       0      69      24 #> 76    no AIH36     B      84      65       4     278      77 #> 77    no AIH37     B      42      44      19     306      86 #> 78    no AIH38     B      46      51      24     342      74 #> 79    no AIH39     B      73      39       9     358      41 #> 80    no AIH40     B      83     131      27    1012     124 #> 81    no AIH41     B       0     193      50     382     135 #> 82    no AIH42     B      41      94      64     464     141 #> 83    no AIH43     B       0      77      46     398      85 #> 84    no AIH44     B      98     152      91     469     301 #> 85    no AIH45     B      78      85      10     407       0 #> 86    no AIH46     B      21      16       0     536      16 #> 87    no AIH47     B      44      34      74     266      21 #> 88    no AIH48     B     144      76      63     252       0 #> 89    no AIH49     B     162     249     101     134       0 #> 90    no AIH50     B     100     169      33    1430       0 #> 91    no AIH51     B      52     159      57     681     417 #> 92    no AIH52     B      97      86      64     591      33 #> 93    no AIH53     B      73      80      20     157      51 #> 94    no AIH54     B     162     117      25     749       0 #> 95    no AIH55     B     100     220      37     729      41 #> 96    no AIH56     B     227     174      26     290       0 #> 97    no AIH57     B     136     165      23     315      40 #> 98    no AIH58     B      96     213      47     682     780 #> 99    no AIH59     B      69      59      21     629     245 #> 100   no AIH60     B      74      70      67     138     215 #> 101   no AIH61     B     129     118      44     117     769 #> 102   no AIH62     B     265     173     115    1157    1310 #> 103   no AIH63     B     308     265     290    2464     840 #> 104   no AIH64     B     276     179     203    1848     563 #> 105   no AIH65     B     173     119     194    2245     726 #> 106   no AIH66     B     354     156       0     227     109 #> 107   no AIH67     B      73      25       0     267      68 #> 108   no AIH68     B     111      80      42     384     180 #> 109   no AIH69     B     148      90      54     479     235 #> 110   no AIH70     B     229     367      12       3     595 #> 111   no AIH71     B     388     316       0       0       0 #> 112   no AIH72     B       0       5       0     300     323 #> 113   no AIH73     B       0      66      22      92       0 #> 114   no AIH74     B       0      47       0     337       0 #> 115   no AIH75     B       0     256      42     760       0 #> 116   no AIH76     B     107      61      26     391       0 #> 117   no AIH77     B     174     109      57     428     223 #> 118   no AIH78     B      42      46      13     235     319 #> 119   no AIH79     B     180     146      34     362     249 #> 120   no AIH80     B      79      66      57     378     307 #> 121   no AIH81     B     419      86      51     376     533 #> 122   no AIH82     B     448     133      95     631     122 #> 123   no AIH83     B       0     119      49     399     154 #> 124   no AIH84     B     148      90      67     285     167 #> 125   no AIH85     B      11     155      19     231       0 #> 126   no AIH86     B     165     162     167     912     405 #> 127   no AIH87     B     320     150      88     107    4114 #> 128   no AIH88     B     146      87     111     395     238 #> 129   no AIH89     B      90     102      62     112     267 #> 130   no AIH90     B     257     188     171     644     347 #> 131   no AIH91     B     106      60      63     336       0 #> 132   no AIH92     B    1223     584     640     256       0 #> 133   no AIH93     B     519     287     283       0       0 #> 134   no AIH94     B     327     240     101     102       0 #> 135   no AIH95     B     559    2142      59     279     413 #> 136   no AIH96     B     202     201      29     248       0 #> 137   no AIH97     B     212      88      45     472       0 #> 138   no AIH98     B     426     125      68      99     566 #> 139   no AIH99     B     260     135     105     285      34 #> 140  no AIH100     B     371     257      96     528      75 #> 141  no AIH101     B     254      99     105     332      13 #> 142  no AIH102     B     107      86     121     786     168 #> 143  no AIH103     B     265     209      40     328      10 #> 144  no AIH104     B     201     189      31     559       0 #> 145  no AIH105     B      79      63      38     159       2 #> 146  no AIH106     B     111      34      32     343      13 #> 147  no AIH107     B     130     185       0     577     923 #> 148  no AIH108     B      58      29      11     545       0 #> 149  no AIH109     B      49      56      34     390       0 #> 150  no AIH110     B     158     165      68     227       0 #> 151  no AIH111     B     159     205      25     151      32 #> 152  no AIH112     B     144     155      25     600       0 #> 153  no AIH113     B     111     155      83     179      65 #> 154  no AIH114     B     224     115      27     276      67 #> 155  no AIH115     B      85      85      13     123      48 #> 156  no AIH116     B     362     296      11     176      72 #> 157  no AIH117     B     273     264     122    1418     476 #> 158  no AIH118     B     425     402      86    1702     581 #> 159  no AIH119     B     315     418       0     595     305 #> 160  no AIH120     B     463     379      71     626     313 #> 161  no AIH121     B      94     413      46     400     229 #> 162  no AIH122     B     163     115     285     590     213 #> 163  no AIH123     B       0       0       0    1053     362 #> 164  no AIH124     B       0       0       0     430      26 #> 165  no AIH125     B      83      61     299     476     219 #> 166  no AIH126     B     381     303       4     266     376 #> 167  no AIH127     B     253     106     134     626     189 #> 168  no AIH128     B     571      96      31     487     423 #> 169  no AIH129     B     288     298       0     347     411 #> 170  no AIH130     B     135     149     229     864     600  combs <- combi(data= demo_data, signalthr=450, combithr=1, case_class='A')  # compute combinations #> Error in combi(data = demo_data, signalthr = 450, combithr = 1, case_class = \"A\"): unused argument (case_class = \"A\")   # To train logistic regression models on each selected combinations and # each selected marker, and compute corresponding ROCs.  reports <- roc_reports(data= demo_data, markers_table= combs,                         selected_combinations= c(1,11,15),                         single_markers=c('Marker1', 'Marker2'), case_class='A') #> Error in roc_reports(data = demo_data, markers_table = combs, selected_combinations = c(1,     11, 15), single_markers = c(\"Marker1\", \"Marker2\"), case_class = \"A\"): object 'combs' not found  reports$Plot  # Shows the ROC curves #> Error in eval(expr, envir, enclos): object 'reports' not found reports$Metrics # Shows the ROC metrics #> Error in eval(expr, envir, enclos): object 'reports' not found reports$Models # show models #> Error in eval(expr, envir, enclos): object 'reports' not found reports$reports$Models$`Combination 11` # show model trained with Combination 11 #> Error in eval(expr, envir, enclos): object 'reports' not found"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/seurat_to_combiroc.html","id":null,"dir":"Reference","previous_headings":"","what":"Load CombiROC data. — seurat_to_combiroc","title":"Load CombiROC data. — seurat_to_combiroc","text":"function extract combiroc data (labelled unlabelled) SeuratObject.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/seurat_to_combiroc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load CombiROC data. — seurat_to_combiroc","text":"","code":"seurat_to_combiroc(   SeuratObject,   gene_list,   assay = \"RNA\",   labelled_data = F,   case_class = NA,   case_label = \"case\",   control_label = \"control\" )"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/seurat_to_combiroc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load CombiROC data. — seurat_to_combiroc","text":"SeuratObject Defines S4 classes single-cell genomic data associated information. gene_list list gene names. assay character specifies assay interest. labelled_data boolean specifies whether combiroc data extracted must labelled ('Class' column) . case_class character character vector specifying category/ies considered 'case class'. Required labelled_data TRUE. case_label character assigned cells belonging 'case class' category. control_label character assigned cells belonging 'control class' category.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/seurat_to_combiroc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load CombiROC data. — seurat_to_combiroc","text":"combiroc data.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/seurat_to_combiroc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load CombiROC data. — seurat_to_combiroc","text":"specifying gene list (genes rownames SeuratObject assay matrix, subsets gene expression matrix (@data) retreives expression values. combiroc training dataset (labelled_data=T) required, one categories Idents(SeuratObject) must selected case_class, others merged control class.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/seurat_to_combiroc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load CombiROC data. — seurat_to_combiroc","text":"","code":"demo_seurat# A subset of PBMC3K dataset from Satijia et al. 2015 #> Error in eval(expr, envir, enclos): object 'demo_seurat' not found  # list of markers of interest gene_list<-c('RBP7','CYP1B1','CD14','FCN1','NKG7', 'GNLY')  # to extract the combircoc data from data from pbmc3k.final (case class: Monocytes) data <- seurat_to_combiroc(demo_seurat, gene_list = gene_list, labelled_data = TRUE,                            case_class = c('CD14+ Mono','FCGR3A+ Mono'),                            case_label = 'Monocyte', control_label='Other') #> Error in seurat_to_combiroc(demo_seurat, gene_list = gene_list, labelled_data = TRUE,     case_class = c(\"CD14+ Mono\", \"FCGR3A+ Mono\"), case_label = \"Monocyte\",     control_label = \"Other\"): could not find function \"seurat_to_combiroc\" head(data) #>                                                                              #> 1 function (..., list = character(), package = NULL, lib.loc = NULL,         #> 2     verbose = getOption(\"verbose\"), envir = .GlobalEnv, overwrite = TRUE)  #> 3 {                                                                          #> 4     fileExt <- function(x) {                                               #> 5         db <- grepl(\"\\\\\\\\.[^.]+\\\\\\\\.(gz|bz2|xz)$\", x)                      #> 6         ans <- sub(\".*\\\\\\\\.\", \"\", x)"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/show_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the composition of combinations. — show_markers","title":"Show the composition of combinations. — show_markers","text":"function show composition combinations interest.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/show_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the composition of combinations. — show_markers","text":"","code":"show_markers(markers_table, selected_combinations)"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/show_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show the composition of combinations. — show_markers","text":"markers_table data.frame combinations returned combi(). selected_combinations numeric vector specifies combinations interest.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/show_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the composition of combinations. — show_markers","text":"data.frame containing selected combinations composing markers.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/show_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the composition of combinations. — show_markers","text":"","code":"demo_data # combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) #>     Patient.ID Class Marker1 Marker2 Marker3 Marker4 Marker5 #> 1         AIH1     A     438     187     197     298     139 #> 2         AIH2     A     345     293     134     523     335 #> 3         AIH3     A     903     392     300    1253       0 #> 4         AIH4     A     552     267     296     666      22 #> 5         AIH5     A    1451     760     498     884     684 #> 6         AIH6     A     497     260     175     640     572 #> 7         AIH7     A    3878    2858     510    1518     348 #> 8         AIH8     A     740     368     266    1391     647 #> 9         AIH9     A     538     412     282    1071     474 #> 10       AIH10     A    1194    1065     442    1530     816 #> 11       AIH11     A     988     817     394    1626    1028 #> 12       AIH12     A     261     153     528     449     237 #> 13       AIH13     A     312     181      58     408     661 #> 14       AIH14     A     499     302     181    1088     568 #> 15       AIH15     A     998     431      75     397     519 #> 16       AIH16     A    6485    3704    8834    2595    1570 #> 17       AIH17     A    8584    2662   13178    3390    2757 #> 18       AIH18     A    1696    1029     369     468    2422 #> 19       AIH19     A     774     505     251    1014     517 #> 20       AIH20     A     433     330      92    1266     743 #> 21       AIH21     A    1207    1501      57    1847     741 #> 22       AIH22     A     225     849     125     330     168 #> 23       AIH23     A    1327     485     366     563     878 #> 24       AIH24     A      76     582     601     115      73 #> 25       AIH25     A     586     256      53     710      74 #> 26       AIH26     A     263     196     124     798      95 #> 27       AIH27     A     146     568      64     125      92 #> 28       AIH28     A     537     620      82     350      53 #> 29       AIH29     A      52      41     588     346      50 #> 30       AIH30     A     882     138      47     601      85 #> 31       AIH31     A     462     304      81     378     208 #> 32       AIH32     A     372     149       0     460     156 #> 33       AIH33     A    1964     875     404    1883    1021 #> 34       AIH34     A    2809    1633     451    1042     608 #> 35       AIH35     A     994     505     303    1699     783 #> 36       AIH36     A     361     185     115     466     520 #> 37       AIH37     A     275     384      45     329     466 #> 38       AIH38     A     947     622      16     236     728 #> 39       AIH39     A     405     133      32     284     358 #> 40       AIH40     A     922     689      68     105     643 #> 41     no AIH1     B     510      28       0     332       0 #> 42     no AIH2     B     205       0       0     332       0 #> 43     no AIH3     B      44       0       0     332      21 #> 44     no AIH4     B      49      38       7     178      48 #> 45     no AIH5     B      26      33       6     131      32 #> 46     no AIH6     B      24      26       8     206      28 #> 47     no AIH7     B     243     373     109     631     477 #> 48     no AIH8     B      99     111      51     193     197 #> 49     no AIH9     B      85      55      71     811     321 #> 50    no AIH10     B     146     108      46     173     171 #> 51    no AIH11     B       0     113       0       0      56 #> 52    no AIH12     B     151       0       0     360       0 #> 53    no AIH13     B       0       0       0      15      21 #> 54    no AIH14     B       0       5       0     147      53 #> 55    no AIH15     B     118      69      13     748      97 #> 56    no AIH16     B      31      29       7     223      34 #> 57    no AIH17     B      72      53      12     376      85 #> 58    no AIH18     B     137     151      20     662     131 #> 59    no AIH19     B      78      58       6     368      49 #> 60    no AIH20     B     193      14      90     703     177 #> 61    no AIH21     B       0       0       0       0       0 #> 62    no AIH22     B       0      20       0      66      31 #> 63    no AIH23     B     351      70       0     478       7 #> 64    no AIH24     B     171     127      74    1202     224 #> 65    no AIH25     B      77      75      26     316      61 #> 66    no AIH26     B      51      45       2     286      44 #> 67    no AIH27     B      64      55      17     333      46 #> 68    no AIH28     B     150     185      42     975     252 #> 69    no AIH29     B     149     140      52    1087     209 #> 70    no AIH30     B     147     103      19     794      98 #> 71    no AIH31     B      86      89      44     427     144 #> 72    no AIH32     B      94      57      18     581      88 #> 73    no AIH33     B      56      41      23     244      49 #> 74    no AIH34     B      10      15       2     121      26 #> 75    no AIH35     B      46      22       0      69      24 #> 76    no AIH36     B      84      65       4     278      77 #> 77    no AIH37     B      42      44      19     306      86 #> 78    no AIH38     B      46      51      24     342      74 #> 79    no AIH39     B      73      39       9     358      41 #> 80    no AIH40     B      83     131      27    1012     124 #> 81    no AIH41     B       0     193      50     382     135 #> 82    no AIH42     B      41      94      64     464     141 #> 83    no AIH43     B       0      77      46     398      85 #> 84    no AIH44     B      98     152      91     469     301 #> 85    no AIH45     B      78      85      10     407       0 #> 86    no AIH46     B      21      16       0     536      16 #> 87    no AIH47     B      44      34      74     266      21 #> 88    no AIH48     B     144      76      63     252       0 #> 89    no AIH49     B     162     249     101     134       0 #> 90    no AIH50     B     100     169      33    1430       0 #> 91    no AIH51     B      52     159      57     681     417 #> 92    no AIH52     B      97      86      64     591      33 #> 93    no AIH53     B      73      80      20     157      51 #> 94    no AIH54     B     162     117      25     749       0 #> 95    no AIH55     B     100     220      37     729      41 #> 96    no AIH56     B     227     174      26     290       0 #> 97    no AIH57     B     136     165      23     315      40 #> 98    no AIH58     B      96     213      47     682     780 #> 99    no AIH59     B      69      59      21     629     245 #> 100   no AIH60     B      74      70      67     138     215 #> 101   no AIH61     B     129     118      44     117     769 #> 102   no AIH62     B     265     173     115    1157    1310 #> 103   no AIH63     B     308     265     290    2464     840 #> 104   no AIH64     B     276     179     203    1848     563 #> 105   no AIH65     B     173     119     194    2245     726 #> 106   no AIH66     B     354     156       0     227     109 #> 107   no AIH67     B      73      25       0     267      68 #> 108   no AIH68     B     111      80      42     384     180 #> 109   no AIH69     B     148      90      54     479     235 #> 110   no AIH70     B     229     367      12       3     595 #> 111   no AIH71     B     388     316       0       0       0 #> 112   no AIH72     B       0       5       0     300     323 #> 113   no AIH73     B       0      66      22      92       0 #> 114   no AIH74     B       0      47       0     337       0 #> 115   no AIH75     B       0     256      42     760       0 #> 116   no AIH76     B     107      61      26     391       0 #> 117   no AIH77     B     174     109      57     428     223 #> 118   no AIH78     B      42      46      13     235     319 #> 119   no AIH79     B     180     146      34     362     249 #> 120   no AIH80     B      79      66      57     378     307 #> 121   no AIH81     B     419      86      51     376     533 #> 122   no AIH82     B     448     133      95     631     122 #> 123   no AIH83     B       0     119      49     399     154 #> 124   no AIH84     B     148      90      67     285     167 #> 125   no AIH85     B      11     155      19     231       0 #> 126   no AIH86     B     165     162     167     912     405 #> 127   no AIH87     B     320     150      88     107    4114 #> 128   no AIH88     B     146      87     111     395     238 #> 129   no AIH89     B      90     102      62     112     267 #> 130   no AIH90     B     257     188     171     644     347 #> 131   no AIH91     B     106      60      63     336       0 #> 132   no AIH92     B    1223     584     640     256       0 #> 133   no AIH93     B     519     287     283       0       0 #> 134   no AIH94     B     327     240     101     102       0 #> 135   no AIH95     B     559    2142      59     279     413 #> 136   no AIH96     B     202     201      29     248       0 #> 137   no AIH97     B     212      88      45     472       0 #> 138   no AIH98     B     426     125      68      99     566 #> 139   no AIH99     B     260     135     105     285      34 #> 140  no AIH100     B     371     257      96     528      75 #> 141  no AIH101     B     254      99     105     332      13 #> 142  no AIH102     B     107      86     121     786     168 #> 143  no AIH103     B     265     209      40     328      10 #> 144  no AIH104     B     201     189      31     559       0 #> 145  no AIH105     B      79      63      38     159       2 #> 146  no AIH106     B     111      34      32     343      13 #> 147  no AIH107     B     130     185       0     577     923 #> 148  no AIH108     B      58      29      11     545       0 #> 149  no AIH109     B      49      56      34     390       0 #> 150  no AIH110     B     158     165      68     227       0 #> 151  no AIH111     B     159     205      25     151      32 #> 152  no AIH112     B     144     155      25     600       0 #> 153  no AIH113     B     111     155      83     179      65 #> 154  no AIH114     B     224     115      27     276      67 #> 155  no AIH115     B      85      85      13     123      48 #> 156  no AIH116     B     362     296      11     176      72 #> 157  no AIH117     B     273     264     122    1418     476 #> 158  no AIH118     B     425     402      86    1702     581 #> 159  no AIH119     B     315     418       0     595     305 #> 160  no AIH120     B     463     379      71     626     313 #> 161  no AIH121     B      94     413      46     400     229 #> 162  no AIH122     B     163     115     285     590     213 #> 163  no AIH123     B       0       0       0    1053     362 #> 164  no AIH124     B       0       0       0     430      26 #> 165  no AIH125     B      83      61     299     476     219 #> 166  no AIH126     B     381     303       4     266     376 #> 167  no AIH127     B     253     106     134     626     189 #> 168  no AIH128     B     571      96      31     487     423 #> 169  no AIH129     B     288     298       0     347     411 #> 170  no AIH130     B     135     149     229     864     600  combs <- combi(data= demo_data, signalthr=450, combithr=1, case_class='A')  # compute combinations #> Error in combi(data = demo_data, signalthr = 450, combithr = 1, case_class = \"A\"): unused argument (case_class = \"A\")  #  To show the composition of combinations of interest.  show_markers(markers_table = combs, selected_combinations = c(1,11)) #> Error in show_markers(markers_table = combs, selected_combinations = c(1,     11)): object 'combs' not found"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/single_markers_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide statistics for each marker. — single_markers_statistics","title":"Provide statistics for each marker. — single_markers_statistics","text":"function computes statistics scatter-plot marker.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/single_markers_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide statistics for each marker. — single_markers_statistics","text":"","code":"single_markers_statistics(data_long)"},{"path":"https://ingmbioinfo.github.io/combiroc/reference/single_markers_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide statistics for each marker. — single_markers_statistics","text":"data_long data.frame long format returned combiroc_long().","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/single_markers_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide statistics for each marker. — single_markers_statistics","text":"list object containing: 'Statistics': dataframe containing main statistics marker class. 'Plots': named list scatter plots showing signal intensity values.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/single_markers_statistics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Provide statistics for each marker. — single_markers_statistics","text":"function computes main statistics signal values distribution marker classes. addition also shows values scatter plots.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/reference/single_markers_statistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide statistics for each marker. — single_markers_statistics","text":"","code":"demo_data # combiroc built-in demo data (proteomics data from Zingaretti et al. 2012 - PMC3518104) #>     Patient.ID Class Marker1 Marker2 Marker3 Marker4 Marker5 #> 1         AIH1     A     438     187     197     298     139 #> 2         AIH2     A     345     293     134     523     335 #> 3         AIH3     A     903     392     300    1253       0 #> 4         AIH4     A     552     267     296     666      22 #> 5         AIH5     A    1451     760     498     884     684 #> 6         AIH6     A     497     260     175     640     572 #> 7         AIH7     A    3878    2858     510    1518     348 #> 8         AIH8     A     740     368     266    1391     647 #> 9         AIH9     A     538     412     282    1071     474 #> 10       AIH10     A    1194    1065     442    1530     816 #> 11       AIH11     A     988     817     394    1626    1028 #> 12       AIH12     A     261     153     528     449     237 #> 13       AIH13     A     312     181      58     408     661 #> 14       AIH14     A     499     302     181    1088     568 #> 15       AIH15     A     998     431      75     397     519 #> 16       AIH16     A    6485    3704    8834    2595    1570 #> 17       AIH17     A    8584    2662   13178    3390    2757 #> 18       AIH18     A    1696    1029     369     468    2422 #> 19       AIH19     A     774     505     251    1014     517 #> 20       AIH20     A     433     330      92    1266     743 #> 21       AIH21     A    1207    1501      57    1847     741 #> 22       AIH22     A     225     849     125     330     168 #> 23       AIH23     A    1327     485     366     563     878 #> 24       AIH24     A      76     582     601     115      73 #> 25       AIH25     A     586     256      53     710      74 #> 26       AIH26     A     263     196     124     798      95 #> 27       AIH27     A     146     568      64     125      92 #> 28       AIH28     A     537     620      82     350      53 #> 29       AIH29     A      52      41     588     346      50 #> 30       AIH30     A     882     138      47     601      85 #> 31       AIH31     A     462     304      81     378     208 #> 32       AIH32     A     372     149       0     460     156 #> 33       AIH33     A    1964     875     404    1883    1021 #> 34       AIH34     A    2809    1633     451    1042     608 #> 35       AIH35     A     994     505     303    1699     783 #> 36       AIH36     A     361     185     115     466     520 #> 37       AIH37     A     275     384      45     329     466 #> 38       AIH38     A     947     622      16     236     728 #> 39       AIH39     A     405     133      32     284     358 #> 40       AIH40     A     922     689      68     105     643 #> 41     no AIH1     B     510      28       0     332       0 #> 42     no AIH2     B     205       0       0     332       0 #> 43     no AIH3     B      44       0       0     332      21 #> 44     no AIH4     B      49      38       7     178      48 #> 45     no AIH5     B      26      33       6     131      32 #> 46     no AIH6     B      24      26       8     206      28 #> 47     no AIH7     B     243     373     109     631     477 #> 48     no AIH8     B      99     111      51     193     197 #> 49     no AIH9     B      85      55      71     811     321 #> 50    no AIH10     B     146     108      46     173     171 #> 51    no AIH11     B       0     113       0       0      56 #> 52    no AIH12     B     151       0       0     360       0 #> 53    no AIH13     B       0       0       0      15      21 #> 54    no AIH14     B       0       5       0     147      53 #> 55    no AIH15     B     118      69      13     748      97 #> 56    no AIH16     B      31      29       7     223      34 #> 57    no AIH17     B      72      53      12     376      85 #> 58    no AIH18     B     137     151      20     662     131 #> 59    no AIH19     B      78      58       6     368      49 #> 60    no AIH20     B     193      14      90     703     177 #> 61    no AIH21     B       0       0       0       0       0 #> 62    no AIH22     B       0      20       0      66      31 #> 63    no AIH23     B     351      70       0     478       7 #> 64    no AIH24     B     171     127      74    1202     224 #> 65    no AIH25     B      77      75      26     316      61 #> 66    no AIH26     B      51      45       2     286      44 #> 67    no AIH27     B      64      55      17     333      46 #> 68    no AIH28     B     150     185      42     975     252 #> 69    no AIH29     B     149     140      52    1087     209 #> 70    no AIH30     B     147     103      19     794      98 #> 71    no AIH31     B      86      89      44     427     144 #> 72    no AIH32     B      94      57      18     581      88 #> 73    no AIH33     B      56      41      23     244      49 #> 74    no AIH34     B      10      15       2     121      26 #> 75    no AIH35     B      46      22       0      69      24 #> 76    no AIH36     B      84      65       4     278      77 #> 77    no AIH37     B      42      44      19     306      86 #> 78    no AIH38     B      46      51      24     342      74 #> 79    no AIH39     B      73      39       9     358      41 #> 80    no AIH40     B      83     131      27    1012     124 #> 81    no AIH41     B       0     193      50     382     135 #> 82    no AIH42     B      41      94      64     464     141 #> 83    no AIH43     B       0      77      46     398      85 #> 84    no AIH44     B      98     152      91     469     301 #> 85    no AIH45     B      78      85      10     407       0 #> 86    no AIH46     B      21      16       0     536      16 #> 87    no AIH47     B      44      34      74     266      21 #> 88    no AIH48     B     144      76      63     252       0 #> 89    no AIH49     B     162     249     101     134       0 #> 90    no AIH50     B     100     169      33    1430       0 #> 91    no AIH51     B      52     159      57     681     417 #> 92    no AIH52     B      97      86      64     591      33 #> 93    no AIH53     B      73      80      20     157      51 #> 94    no AIH54     B     162     117      25     749       0 #> 95    no AIH55     B     100     220      37     729      41 #> 96    no AIH56     B     227     174      26     290       0 #> 97    no AIH57     B     136     165      23     315      40 #> 98    no AIH58     B      96     213      47     682     780 #> 99    no AIH59     B      69      59      21     629     245 #> 100   no AIH60     B      74      70      67     138     215 #> 101   no AIH61     B     129     118      44     117     769 #> 102   no AIH62     B     265     173     115    1157    1310 #> 103   no AIH63     B     308     265     290    2464     840 #> 104   no AIH64     B     276     179     203    1848     563 #> 105   no AIH65     B     173     119     194    2245     726 #> 106   no AIH66     B     354     156       0     227     109 #> 107   no AIH67     B      73      25       0     267      68 #> 108   no AIH68     B     111      80      42     384     180 #> 109   no AIH69     B     148      90      54     479     235 #> 110   no AIH70     B     229     367      12       3     595 #> 111   no AIH71     B     388     316       0       0       0 #> 112   no AIH72     B       0       5       0     300     323 #> 113   no AIH73     B       0      66      22      92       0 #> 114   no AIH74     B       0      47       0     337       0 #> 115   no AIH75     B       0     256      42     760       0 #> 116   no AIH76     B     107      61      26     391       0 #> 117   no AIH77     B     174     109      57     428     223 #> 118   no AIH78     B      42      46      13     235     319 #> 119   no AIH79     B     180     146      34     362     249 #> 120   no AIH80     B      79      66      57     378     307 #> 121   no AIH81     B     419      86      51     376     533 #> 122   no AIH82     B     448     133      95     631     122 #> 123   no AIH83     B       0     119      49     399     154 #> 124   no AIH84     B     148      90      67     285     167 #> 125   no AIH85     B      11     155      19     231       0 #> 126   no AIH86     B     165     162     167     912     405 #> 127   no AIH87     B     320     150      88     107    4114 #> 128   no AIH88     B     146      87     111     395     238 #> 129   no AIH89     B      90     102      62     112     267 #> 130   no AIH90     B     257     188     171     644     347 #> 131   no AIH91     B     106      60      63     336       0 #> 132   no AIH92     B    1223     584     640     256       0 #> 133   no AIH93     B     519     287     283       0       0 #> 134   no AIH94     B     327     240     101     102       0 #> 135   no AIH95     B     559    2142      59     279     413 #> 136   no AIH96     B     202     201      29     248       0 #> 137   no AIH97     B     212      88      45     472       0 #> 138   no AIH98     B     426     125      68      99     566 #> 139   no AIH99     B     260     135     105     285      34 #> 140  no AIH100     B     371     257      96     528      75 #> 141  no AIH101     B     254      99     105     332      13 #> 142  no AIH102     B     107      86     121     786     168 #> 143  no AIH103     B     265     209      40     328      10 #> 144  no AIH104     B     201     189      31     559       0 #> 145  no AIH105     B      79      63      38     159       2 #> 146  no AIH106     B     111      34      32     343      13 #> 147  no AIH107     B     130     185       0     577     923 #> 148  no AIH108     B      58      29      11     545       0 #> 149  no AIH109     B      49      56      34     390       0 #> 150  no AIH110     B     158     165      68     227       0 #> 151  no AIH111     B     159     205      25     151      32 #> 152  no AIH112     B     144     155      25     600       0 #> 153  no AIH113     B     111     155      83     179      65 #> 154  no AIH114     B     224     115      27     276      67 #> 155  no AIH115     B      85      85      13     123      48 #> 156  no AIH116     B     362     296      11     176      72 #> 157  no AIH117     B     273     264     122    1418     476 #> 158  no AIH118     B     425     402      86    1702     581 #> 159  no AIH119     B     315     418       0     595     305 #> 160  no AIH120     B     463     379      71     626     313 #> 161  no AIH121     B      94     413      46     400     229 #> 162  no AIH122     B     163     115     285     590     213 #> 163  no AIH123     B       0       0       0    1053     362 #> 164  no AIH124     B       0       0       0     430      26 #> 165  no AIH125     B      83      61     299     476     219 #> 166  no AIH126     B     381     303       4     266     376 #> 167  no AIH127     B     253     106     134     626     189 #> 168  no AIH128     B     571      96      31     487     423 #> 169  no AIH129     B     288     298       0     347     411 #> 170  no AIH130     B     135     149     229     864     600  data_long <- combiroc_long(demo_data) # reshape data in long format  sms <- single_markers_statistics(data_long)  sms$Statistics # to visualize the statistics of each single marker #> # A tibble: 10 × 11 #> # Groups:   Markers [5] #>    Markers Class   Mean   Min   Max     Sd    CV First_…¹ Median Third…² Skewn…³ #>    <chr>   <chr>  <dbl> <int> <int>  <dbl> <dbl>    <dbl>  <dbl>   <dbl>   <dbl> #>  1 Marker1 A     1159.     52  8584 1672.  1.44     369.   569    1047      3.18 #>  2 Marker1 B      161.      0  1223  162.  1.01      59.5  111     221      2.71 #>  3 Marker2 A      692.     41  3704  783.  1.13     259    422.    774.     2.41 #>  4 Marker2 B      141.      0  2142  205.  1.45      55.2  100.    168      7.35 #>  5 Marker3 A      767.      0 13178 2436.  3.18      73.2  189     396.     4.37 #>  6 Marker3 B       56.2     0   640   80.6 1.43      10.2   33.5    67.8    3.85 #>  7 Marker4 A      879.    105  3390  713.  0.811    371    620.   1256.     1.52 #>  8 Marker4 B      467.      0  2464  406.  0.869    232    361     594      2.33 #>  9 Marker5 A      571.      0  2757  582.  1.02     152.   518     731.     2.17 #> 10 Marker5 B      205.      0  4114  413.  2.02      17.2   76     248      6.86 #> # … with abbreviated variable names ¹​First_Quart., ²​Third_Quart., ³​Skewness sms$Plots[[1]] # to visualize the scatterplot of the first marker"},{"path":"https://ingmbioinfo.github.io/combiroc/news/index.html","id":"combiroc-030---june-12-2023","dir":"Changelog","previous_headings":"","what":"combiroc 0.3.0 - June 12, 2023","title":"combiroc 0.3.0 - June 12, 2023","text":"version combiroc package enforces full-fledge single cell RNAseq workflow. scRNAseq workflow vignette thoroughly expanded updated. version synchronized updated version biorXiv preprint (“less ” version) New functions added data interoperability combiroc Seurat single-cell package New Seurat-style demo data added Streamlined combi_score() function model finding Bugs minor changes troughout package","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/news/index.html","id":"combiroc-023---aug-13-2021","dir":"Changelog","previous_headings":"","what":"combiroc 0.2.3 - Aug. 13, 2021","title":"combiroc 0.2.3 - Aug. 13, 2021","text":"CRAN release: 2021-08-17 version combiroc package quasi-stable version ready CRAN submission Final version vignette clarified text examples Minor tweaks titles descriptions throughout documentation Solved build errors R development version windows ubuntu Removed unnecessary raw data files data test folders Performed build checks via Travis Increased code coverage tests","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/news/index.html","id":"combiroc-022---aug-12-2021","dir":"Changelog","previous_headings":"","what":"combiroc 0.2.2 - Aug. 12, 2021","title":"combiroc 0.2.2 - Aug. 12, 2021","text":"Significant restructuring guide (vignette), added unit testing, checked code coverage number minor misspellings.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/news/index.html","id":"combiroc-021---aug-10-2021","dir":"Changelog","previous_headings":"","what":"combiroc 0.2.1 - Aug. 10, 2021","title":"combiroc 0.2.1 - Aug. 10, 2021","text":"Minor tweaks descriptions, hex logo vignette readability, preparation major release","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/news/index.html","id":"combiroc-020---aug-8-2021","dir":"Changelog","previous_headings":"","what":"combiroc 0.2.0 - Aug. 8, 2021","title":"combiroc 0.2.0 - Aug. 8, 2021","text":"still development version passing R-CMD-checks –-cran. Unit tests functions added continuous development. considered package’s first usable version.","code":""},{"path":"https://ingmbioinfo.github.io/combiroc/news/index.html","id":"combiroc-010---july-2021","dir":"Changelog","previous_headings":"","what":"combiroc 0.1.0 - July 2021","title":"combiroc 0.1.0 - July 2021","text":"First public release development version. Package fully functional active development still prone heavily modified.","code":""}]
